(function() {var type_impls = {
"bones_framework":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Ulid\" class=\"impl\"><a href=\"#impl-Clone-for-Ulid\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html\" title=\"struct bones_framework::asset::prelude::bones_utils::Ulid\">Ulid</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html\" title=\"struct bones_framework::asset::prelude::bones_utils::Ulid\">Ulid</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/clone.rs.html#172\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","bones_framework::prelude::SystemStageId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Ulid\" class=\"impl\"><a href=\"#impl-Debug-for-Ulid\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html\" title=\"struct bones_framework::asset::prelude::bones_utils::Ulid\">Ulid</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","bones_framework::prelude::SystemStageId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Ulid\" class=\"impl\"><a href=\"#impl-Default-for-Ulid\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html\" title=\"struct bones_framework::asset::prelude::bones_utils::Ulid\">Ulid</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html\" title=\"struct bones_framework::asset::prelude::bones_utils::Ulid\">Ulid</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","bones_framework::prelude::SystemStageId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-Ulid\" class=\"impl\"><a href=\"#impl-Display-for-Ulid\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html\" title=\"struct bones_framework::asset::prelude::bones_utils::Ulid\">Ulid</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","bones_framework::prelude::SystemStageId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5Bu8;+16%5D%3E-for-Ulid\" class=\"impl\"><a href=\"#impl-From%3C%5Bu8;+16%5D%3E-for-Ulid\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.array.html\">16</a>]&gt; for <a class=\"struct\" href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html\" title=\"struct bones_framework::asset::prelude::bones_utils::Ulid\">Ulid</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bytes: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.array.html\">16</a>]) -&gt; <a class=\"struct\" href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html\" title=\"struct bones_framework::asset::prelude::bones_utils::Ulid\">Ulid</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[u8; 16]>","bones_framework::prelude::SystemStageId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(u64,+u64)%3E-for-Ulid\" class=\"impl\"><a href=\"#impl-From%3C(u64,+u64)%3E-for-Ulid\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u64.html\">u64</a>)&gt; for <a class=\"struct\" href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html\" title=\"struct bones_framework::asset::prelude::bones_utils::Ulid\">Ulid</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(_: (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u64.html\">u64</a>)) -&gt; <a class=\"struct\" href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html\" title=\"struct bones_framework::asset::prelude::bones_utils::Ulid\">Ulid</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(u64, u64)>","bones_framework::prelude::SystemStageId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu128%3E-for-Ulid\" class=\"impl\"><a href=\"#impl-From%3Cu128%3E-for-Ulid\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"struct\" href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html\" title=\"struct bones_framework::asset::prelude::bones_utils::Ulid\">Ulid</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u128.html\">u128</a>) -&gt; <a class=\"struct\" href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html\" title=\"struct bones_framework::asset::prelude::bones_utils::Ulid\">Ulid</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<u128>","bones_framework::prelude::SystemStageId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-Ulid\" class=\"impl\"><a href=\"#impl-FromStr-for-Ulid\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for <a class=\"struct\" href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html\" title=\"struct bones_framework::asset::prelude::bones_utils::Ulid\">Ulid</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.81.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = DecodeError</h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html\" title=\"struct bones_framework::asset::prelude::bones_utils::Ulid\">Ulid</a>, &lt;<a class=\"struct\" href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html\" title=\"struct bones_framework::asset::prelude::bones_utils::Ulid\">Ulid</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.81.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" title=\"type core::str::traits::FromStr::Err\">Err</a>&gt;</h4></section></summary><div class='docblock'>Parses a string <code>s</code> to return a value of this type. <a href=\"https://doc.rust-lang.org/1.81.0/core/str/traits/trait.FromStr.html#tymethod.from_str\">Read more</a></div></details></div></details>","FromStr","bones_framework::prelude::SystemStageId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Ulid\" class=\"impl\"><a href=\"#impl-Hash-for-Ulid\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html\" title=\"struct bones_framework::asset::prelude::bones_utils::Ulid\">Ulid</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;__H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;mut __H</a>)<div class=\"where\">where\n    __H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.81.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.81.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.81.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.81.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","bones_framework::prelude::SystemStageId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-Ulid\" class=\"impl\"><a href=\"#impl-Ord-for-Ulid\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html\" title=\"struct bones_framework::asset::prelude::bones_utils::Ulid\">Ulid</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html\" title=\"struct bones_framework::asset::prelude::bones_utils::Ulid\">Ulid</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/cmp.rs.html#855-857\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/cmp.rs.html#876-878\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/cmp.rs.html#902-905\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","bones_framework::prelude::SystemStageId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Ulid\" class=\"impl\"><a href=\"#impl-PartialEq-for-Ulid\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html\" title=\"struct bones_framework::asset::prelude::bones_utils::Ulid\">Ulid</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html\" title=\"struct bones_framework::asset::prelude::bones_utils::Ulid\">Ulid</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/cmp.rs.html#262\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","bones_framework::prelude::SystemStageId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-Ulid\" class=\"impl\"><a href=\"#impl-PartialOrd-for-Ulid\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for <a class=\"struct\" href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html\" title=\"struct bones_framework::asset::prelude::bones_utils::Ulid\">Ulid</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html\" title=\"struct bones_framework::asset::prelude::bones_utils::Ulid\">Ulid</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/cmp.rs.html#1179\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/cmp.rs.html#1197\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/cmp.rs.html#1214\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/cmp.rs.html#1232\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","bones_framework::prelude::SystemStageId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3C%26str%3E-for-Ulid\" class=\"impl\"><a href=\"#impl-TryFrom%3C%26str%3E-for-Ulid\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.str.html\">str</a>&gt; for <a class=\"struct\" href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html\" title=\"struct bones_framework::asset::prelude::bones_utils::Ulid\">Ulid</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = DecodeError</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(value: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html\" title=\"struct bones_framework::asset::prelude::bones_utils::Ulid\">Ulid</a>, &lt;<a class=\"struct\" href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html\" title=\"struct bones_framework::asset::prelude::bones_utils::Ulid\">Ulid</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.str.html\">str</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<&str>","bones_framework::prelude::SystemStageId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UlidExt-for-Ulid\" class=\"impl\"><a class=\"src rightside\" href=\"src/bones_utils/ulid.rs.html#12\">source</a><a href=\"#impl-UlidExt-for-Ulid\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"bones_framework/asset/prelude/bones_utils/trait.UlidExt.html\" title=\"trait bones_framework::asset::prelude::bones_utils::UlidExt\">UlidExt</a> for <a class=\"struct\" href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html\" title=\"struct bones_framework::asset::prelude::bones_utils::Ulid\">Ulid</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.create\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bones_utils/ulid.rs.html#13\">source</a><a href=\"#method.create\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"bones_framework/asset/prelude/bones_utils/trait.UlidExt.html#tymethod.create\" class=\"fn\">create</a>() -&gt; <a class=\"struct\" href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html\" title=\"struct bones_framework::asset::prelude::bones_utils::Ulid\">Ulid</a></h4></section></summary><div class='docblock'>Constructor that) is the same as <a href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html#method.new\" title=\"associated function bones_framework::asset::prelude::bones_utils::Ulid::new\"><code>Ulid::new()</code></a>, but that works on WASM, too using the\n<a href=\"bones_framework/lib/instant/index.html\" title=\"mod bones_framework::lib::instant\"><code>instant</code></a> crate.</div></details></div></details>","UlidExt","bones_framework::prelude::SystemStageId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ulid\" class=\"impl\"><a href=\"#impl-Ulid\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html\" title=\"struct bones_framework::asset::prelude::bones_utils::Ulid\">Ulid</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html#tymethod.new\" class=\"fn\">new</a>() -&gt; <a class=\"struct\" href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html\" title=\"struct bones_framework::asset::prelude::bones_utils::Ulid\">Ulid</a></h4></section></summary><div class=\"docblock\"><p>Creates a new Ulid with the current time (UTC)</p>\n<p>Using this function to generate Ulids will not guarantee monotonic sort order.\nSee [ulid::Generator] for a monotonic sort order.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>ulid::Ulid;\n\n<span class=\"kw\">let </span>my_ulid = Ulid::new();</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_source\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html#tymethod.with_source\" class=\"fn\">with_source</a>&lt;R&gt;(source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;mut R</a>) -&gt; <a class=\"struct\" href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html\" title=\"struct bones_framework::asset::prelude::bones_utils::Ulid\">Ulid</a><div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/rng/trait.Rng.html\" title=\"trait rand::rng::Rng\">Rng</a>,</div></h4></section></summary><div class=\"docblock\"><p>Creates a new Ulid using data from the given random number generator</p>\n<h5 id=\"example-1\"><a class=\"doc-anchor\" href=\"#example-1\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>rand::prelude::<span class=\"kw-2\">*</span>;\n<span class=\"kw\">use </span>ulid::Ulid;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>rng = StdRng::from_entropy();\n<span class=\"kw\">let </span>ulid = Ulid::with_source(<span class=\"kw-2\">&amp;mut </span>rng);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_datetime\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html#tymethod.from_datetime\" class=\"fn\">from_datetime</a>(datetime: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/std/time/struct.SystemTime.html\" title=\"struct std::time::SystemTime\">SystemTime</a>) -&gt; <a class=\"struct\" href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html\" title=\"struct bones_framework::asset::prelude::bones_utils::Ulid\">Ulid</a></h4></section></summary><div class=\"docblock\"><p>Creates a new Ulid with the given datetime</p>\n<p>This can be useful when migrating data to use Ulid identifiers.</p>\n<p>This will take the maximum of the <code>[SystemTime]</code> argument and <code>[SystemTime::UNIX_EPOCH]</code>\nas earlier times are not valid for a Ulid timestamp</p>\n<h5 id=\"example-2\"><a class=\"doc-anchor\" href=\"#example-2\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::time::{SystemTime, Duration};\n<span class=\"kw\">use </span>ulid::Ulid;\n\n<span class=\"kw\">let </span>ulid = Ulid::from_datetime(SystemTime::now());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_datetime_with_source\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html#tymethod.from_datetime_with_source\" class=\"fn\">from_datetime_with_source</a>&lt;R&gt;(\n    datetime: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/std/time/struct.SystemTime.html\" title=\"struct std::time::SystemTime\">SystemTime</a>,\n    source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;mut R</a>,\n) -&gt; <a class=\"struct\" href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html\" title=\"struct bones_framework::asset::prelude::bones_utils::Ulid\">Ulid</a><div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand/rng/trait.Rng.html\" title=\"trait rand::rng::Rng\">Rng</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Creates a new Ulid with the given datetime and random number generator</p>\n<p>This will take the maximum of the <code>[SystemTime]</code> argument and <code>[SystemTime::UNIX_EPOCH]</code>\nas earlier times are not valid for a Ulid timestamp</p>\n<h5 id=\"example-3\"><a class=\"doc-anchor\" href=\"#example-3\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::time::{SystemTime, Duration};\n<span class=\"kw\">use </span>rand::prelude::<span class=\"kw-2\">*</span>;\n<span class=\"kw\">use </span>ulid::Ulid;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>rng = StdRng::from_entropy();\n<span class=\"kw\">let </span>ulid = Ulid::from_datetime_with_source(SystemTime::now(), <span class=\"kw-2\">&amp;mut </span>rng);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.datetime\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html#tymethod.datetime\" class=\"fn\">datetime</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/std/time/struct.SystemTime.html\" title=\"struct std::time::SystemTime\">SystemTime</a></h4></section></summary><div class=\"docblock\"><p>Gets the datetime of when this Ulid was created accurate to 1ms</p>\n<h5 id=\"example-4\"><a class=\"doc-anchor\" href=\"#example-4\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::time::{SystemTime, Duration};\n<span class=\"kw\">use </span>ulid::Ulid;\n\n<span class=\"kw\">let </span>dt = SystemTime::now();\n<span class=\"kw\">let </span>ulid = Ulid::from_datetime(dt);\n\n<span class=\"macro\">assert!</span>(\n    dt + Duration::from_millis(<span class=\"number\">1</span>) &gt;= ulid.datetime()\n    &amp;&amp; dt - Duration::from_millis(<span class=\"number\">1</span>) &lt;= ulid.datetime()\n);</code></pre></div>\n</div></details></div></details>",0,"bones_framework::prelude::SystemStageId"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ulid\" class=\"impl\"><a href=\"#impl-Ulid\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html\" title=\"struct bones_framework::asset::prelude::bones_utils::Ulid\">Ulid</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.TIME_BITS\" class=\"associatedconstant\"><h4 class=\"code-header\">pub const <a href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html#associatedconstant.TIME_BITS\" class=\"constant\">TIME_BITS</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a> = 48u8</h4></section></summary><div class=\"docblock\"><p>The number of bits in a Ulid’s time portion</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.RAND_BITS\" class=\"associatedconstant\"><h4 class=\"code-header\">pub const <a href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html#associatedconstant.RAND_BITS\" class=\"constant\">RAND_BITS</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a> = 80u8</h4></section></summary><div class=\"docblock\"><p>The number of bits in a Ulid’s random portion</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_parts\" class=\"method\"><h4 class=\"code-header\">pub const fn <a href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html#tymethod.from_parts\" class=\"fn\">from_parts</a>(timestamp_ms: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u64.html\">u64</a>, random: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u128.html\">u128</a>) -&gt; <a class=\"struct\" href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html\" title=\"struct bones_framework::asset::prelude::bones_utils::Ulid\">Ulid</a></h4></section></summary><div class=\"docblock\"><p>Create a Ulid from separated parts.</p>\n<p>NOTE: Any overflow bits in the given args are discarded</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>ulid::Ulid;\n\n<span class=\"kw\">let </span>ulid = Ulid::from_string(<span class=\"string\">\"01D39ZY06FGSCTVN4T2V9PKHFZ\"</span>).unwrap();\n\n<span class=\"kw\">let </span>ulid2 = Ulid::from_parts(ulid.timestamp_ms(), ulid.random());\n\n<span class=\"macro\">assert_eq!</span>(ulid, ulid2);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_string\" class=\"method\"><h4 class=\"code-header\">pub const fn <a href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html#tymethod.from_string\" class=\"fn\">from_string</a>(encoded: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html\" title=\"struct bones_framework::asset::prelude::bones_utils::Ulid\">Ulid</a>, DecodeError&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a Ulid from a Crockford Base32 encoded string</p>\n<p>An DecodeError will be returned when the given string is not formatted\nproperly.</p>\n<h5 id=\"example-1\"><a class=\"doc-anchor\" href=\"#example-1\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>ulid::Ulid;\n\n<span class=\"kw\">let </span>text = <span class=\"string\">\"01D39ZY06FGSCTVN4T2V9PKHFZ\"</span>;\n<span class=\"kw\">let </span>result = Ulid::from_string(text);\n\n<span class=\"macro\">assert!</span>(result.is_ok());\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">&amp;</span>result.unwrap().to_string(), text);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.nil\" class=\"method\"><h4 class=\"code-header\">pub const fn <a href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html#tymethod.nil\" class=\"fn\">nil</a>() -&gt; <a class=\"struct\" href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html\" title=\"struct bones_framework::asset::prelude::bones_utils::Ulid\">Ulid</a></h4></section></summary><div class=\"docblock\"><p>The ‘nil Ulid’.</p>\n<p>The nil Ulid is special form of Ulid that is specified to have\nall 128 bits set to zero.</p>\n<h5 id=\"example-2\"><a class=\"doc-anchor\" href=\"#example-2\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>ulid::Ulid;\n\n<span class=\"kw\">let </span>ulid = Ulid::nil();\n\n<span class=\"macro\">assert_eq!</span>(\n    ulid.to_string(),\n    <span class=\"string\">\"00000000000000000000000000\"\n</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.timestamp_ms\" class=\"method\"><h4 class=\"code-header\">pub const fn <a href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html#tymethod.timestamp_ms\" class=\"fn\">timestamp_ms</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Gets the timestamp section of this ulid</p>\n<h5 id=\"example-3\"><a class=\"doc-anchor\" href=\"#example-3\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::time::{SystemTime, Duration};\n<span class=\"kw\">use </span>ulid::Ulid;\n\n<span class=\"kw\">let </span>dt = SystemTime::now();\n<span class=\"kw\">let </span>ulid = Ulid::from_datetime(dt);\n\n<span class=\"macro\">assert_eq!</span>(u128::from(ulid.timestamp_ms()), dt.duration_since(SystemTime::UNIX_EPOCH).unwrap_or(Duration::ZERO).as_millis());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.random\" class=\"method\"><h4 class=\"code-header\">pub const fn <a href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html#tymethod.random\" class=\"fn\">random</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u128.html\">u128</a></h4></section></summary><div class=\"docblock\"><p>Gets the random section of this ulid</p>\n<h5 id=\"example-4\"><a class=\"doc-anchor\" href=\"#example-4\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>ulid::Ulid;\n\n<span class=\"kw\">let </span>text = <span class=\"string\">\"01D39ZY06FGSCTVN4T2V9PKHFZ\"</span>;\n<span class=\"kw\">let </span>ulid = Ulid::from_string(text).unwrap();\n<span class=\"kw\">let </span>ulid_next = ulid.increment().unwrap();\n\n<span class=\"macro\">assert_eq!</span>(ulid.random() + <span class=\"number\">1</span>, ulid_next.random());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_str\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html#tymethod.to_str\" class=\"fn\">to_str</a>&lt;'buf&gt;(\n    &amp;self,\n    buf: &amp;'buf mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;'buf mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.str.html\">str</a>, EncodeError&gt;</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 1.2.0: Use the infallible <code>array_to_str</code> instead.</span></div></span></summary><div class=\"docblock\"><p>Creates a Crockford Base32 encoded string that represents this Ulid</p>\n<h5 id=\"example-5\"><a class=\"doc-anchor\" href=\"#example-5\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>ulid::Ulid;\n\n<span class=\"kw\">let </span>text = <span class=\"string\">\"01D39ZY06FGSCTVN4T2V9PKHFZ\"</span>;\n<span class=\"kw\">let </span>ulid = Ulid::from_string(text).unwrap();\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>buf = [<span class=\"number\">0</span>; ulid::ULID_LEN];\n<span class=\"kw\">let </span>new_text = ulid.to_str(<span class=\"kw-2\">&amp;mut </span>buf).unwrap();\n\n<span class=\"macro\">assert_eq!</span>(new_text, text);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.array_to_str\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html#tymethod.array_to_str\" class=\"fn\">array_to_str</a>&lt;'buf&gt;(&amp;self, buf: &amp;'buf mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.array.html\">26</a>]) -&gt; &amp;'buf mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.str.html\">str</a></h4></section></summary><div class=\"docblock\"><p>Creates a Crockford Base32 encoded string that represents this Ulid</p>\n<h5 id=\"example-6\"><a class=\"doc-anchor\" href=\"#example-6\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>ulid::Ulid;\n\n<span class=\"kw\">let </span>text = <span class=\"string\">\"01D39ZY06FGSCTVN4T2V9PKHFZ\"</span>;\n<span class=\"kw\">let </span>ulid = Ulid::from_string(text).unwrap();\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>buf = [<span class=\"number\">0</span>; ulid::ULID_LEN];\n<span class=\"kw\">let </span>new_text = ulid.array_to_str(<span class=\"kw-2\">&amp;mut </span>buf);\n\n<span class=\"macro\">assert_eq!</span>(new_text, text);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_string\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html#tymethod.to_string\" class=\"fn\">to_string</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section></summary><div class=\"docblock\"><p>Creates a Crockford Base32 encoded string that represents this Ulid</p>\n<h5 id=\"example-7\"><a class=\"doc-anchor\" href=\"#example-7\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>ulid::Ulid;\n\n<span class=\"kw\">let </span>text = <span class=\"string\">\"01D39ZY06FGSCTVN4T2V9PKHFZ\"</span>;\n<span class=\"kw\">let </span>ulid = Ulid::from_string(text).unwrap();\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">&amp;</span>ulid.to_string(), text);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_nil\" class=\"method\"><h4 class=\"code-header\">pub const fn <a href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html#tymethod.is_nil\" class=\"fn\">is_nil</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Test if the Ulid is nil</p>\n<h5 id=\"example-8\"><a class=\"doc-anchor\" href=\"#example-8\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>ulid::Ulid;\n\n<span class=\"kw\">let </span>ulid = Ulid::new();\n<span class=\"macro\">assert!</span>(!ulid.is_nil());\n\n<span class=\"kw\">let </span>nil = Ulid::nil();\n<span class=\"macro\">assert!</span>(nil.is_nil());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.increment\" class=\"method\"><h4 class=\"code-header\">pub const fn <a href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html#tymethod.increment\" class=\"fn\">increment</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html\" title=\"struct bones_framework::asset::prelude::bones_utils::Ulid\">Ulid</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Increment the random number, make sure that the ts millis stays the same</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html#tymethod.from_bytes\" class=\"fn\">from_bytes</a>(bytes: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.array.html\">16</a>]) -&gt; <a class=\"struct\" href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html\" title=\"struct bones_framework::asset::prelude::bones_utils::Ulid\">Ulid</a></h4></section></summary><div class=\"docblock\"><p>Creates a Ulid using the provided bytes array.</p>\n<h5 id=\"example-9\"><a class=\"doc-anchor\" href=\"#example-9\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>ulid::Ulid;\n<span class=\"kw\">let </span>bytes = [<span class=\"number\">0xFF</span>; <span class=\"number\">16</span>];\n\n<span class=\"kw\">let </span>ulid = Ulid::from_bytes(bytes);\n\n<span class=\"macro\">assert_eq!</span>(\n    ulid.to_string(),\n    <span class=\"string\">\"7ZZZZZZZZZZZZZZZZZZZZZZZZZ\"\n</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_bytes\" class=\"method\"><h4 class=\"code-header\">pub const fn <a href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html#tymethod.to_bytes\" class=\"fn\">to_bytes</a>(&amp;self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.array.html\">16</a>]</h4></section></summary><div class=\"docblock\"><p>Returns the bytes of the Ulid in big-endian order.</p>\n<h5 id=\"example-10\"><a class=\"doc-anchor\" href=\"#example-10\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>ulid::Ulid;\n\n<span class=\"kw\">let </span>text = <span class=\"string\">\"7ZZZZZZZZZZZZZZZZZZZZZZZZZ\"</span>;\n<span class=\"kw\">let </span>ulid = Ulid::from_string(text).unwrap();\n\n<span class=\"macro\">assert_eq!</span>(ulid.to_bytes(), [<span class=\"number\">0xFF</span>; <span class=\"number\">16</span>]);</code></pre></div>\n</div></details></div></details>",0,"bones_framework::prelude::SystemStageId"],["<section id=\"impl-Copy-for-Ulid\" class=\"impl\"><a href=\"#impl-Copy-for-Ulid\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html\" title=\"struct bones_framework::asset::prelude::bones_utils::Ulid\">Ulid</a></h3></section>","Copy","bones_framework::prelude::SystemStageId"],["<section id=\"impl-Eq-for-Ulid\" class=\"impl\"><a href=\"#impl-Eq-for-Ulid\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html\" title=\"struct bones_framework::asset::prelude::bones_utils::Ulid\">Ulid</a></h3></section>","Eq","bones_framework::prelude::SystemStageId"],["<section id=\"impl-StructuralPartialEq-for-Ulid\" class=\"impl\"><a href=\"#impl-StructuralPartialEq-for-Ulid\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"bones_framework/asset/prelude/bones_utils/struct.Ulid.html\" title=\"struct bones_framework::asset::prelude::bones_utils::Ulid\">Ulid</a></h3></section>","StructuralPartialEq","bones_framework::prelude::SystemStageId"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()