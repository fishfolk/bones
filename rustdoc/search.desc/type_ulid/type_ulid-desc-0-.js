searchState.loadedDescShard("type_ulid", 0, "A simple crate containing the <code>TypeUlid</code> trait to allow …\nThe number of bits in a Ulid’s random portion\nThe number of bits in a Ulid’s time portion\nAssociates a <code>Ulid</code> ID to a Rust type.\nDerive macro for the <code>TypeUlid</code> trait.\nAllows reading a type’s <code>Ulid</code> from the context of a trait …\nThe type’s <code>Ulid</code>.\nA Ulid is a unique 128-bit lexicographically sortable …\nCreates a Crockford Base32 encoded string that represents …\nGets the datetime of when this Ulid was created accurate …\nReturns the argument unchanged.\nCreates a Ulid using the provided bytes array.\nCreates a new Ulid with the given datetime\nCreates a new Ulid with the given datetime and random …\nCreate a Ulid from separated parts.\nCreates a Ulid from a Crockford Base32 encoded string\nIncrement the random number, make sure that the ts millis …\nCalls <code>U::from(self)</code>.\nTest if the Ulid is nil\nCreates a new Ulid with the current time (UTC)\nThe ‘nil Ulid’.\nGets the random section of this ulid\nGets the timestamp section of this ulid\nReturns the bytes of the Ulid in big-endian order.\nCreates a Crockford Base32 encoded string that represents …\nCreates a Crockford Base32 encoded string that represents …\nCreates a new Ulid using data from the given random number …")