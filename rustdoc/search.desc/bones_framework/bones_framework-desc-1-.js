searchState.loadedDescShard("bones_framework", 1, "Creates an affine transform from the given 3D <code>rotation</code> and …\nCreates an affine transformation matrix from the given 3D …\nCreates an affine transform containing a 3D rotation …\nCreates a 3D rotation matrix from <code>angle</code> (in radians) …\nCreates a 3D rotation matrix from <code>angle</code> (in radians) …\nCreates an affine transformation matrix containing a 3D …\nCreates a quaternion from the <code>angle</code> (in radians) around …\nCreates an affine transform containing a 3D rotation …\nCreates a 3D rotation matrix from <code>angle</code> (in radians) …\nCreates an affine transformation matrix containing a 3D …\nCreates a quaternion from the <code>angle</code> (in radians) around …\nCreates an affine transform containing a 3D rotation …\nCreates a 3D rotation matrix from <code>angle</code> (in radians) …\nCreates a 3D rotation matrix from <code>angle</code> (in radians) …\nCreates an affine transformation matrix containing a 3D …\nCreates a quaternion from the <code>angle</code> (in radians) around …\nCreates an affine transform containing a 3D rotation …\nCreates a 3D rotation matrix from <code>angle</code> (in radians) …\nCreates an affine transformation matrix containing a 3D …\nCreates a quaternion from the <code>angle</code> (in radians) around …\nCreates an affine transform containing a 3D rotation …\nCreates a 3D rotation matrix from <code>angle</code> (in radians) …\nCreates a 3D rotation matrix from <code>angle</code> (in radians) …\nCreates an affine transformation matrix containing a 3D …\nCreates a quaternion from the <code>angle</code> (in radians) around …\nCreates an affine transform containing a 3D rotation …\nCreates a 3D rotation matrix from <code>angle</code> (in radians) …\nCreates an affine transformation matrix containing a 3D …\nCreates a quaternion from the <code>angle</code> (in radians) around …\nCreates an affine transform that changes scale. Note that …\nCreates an affine transform that changes scale. Note that …\nCreates an affine transformation matrix from the given …\nCreates an affine transformation matrix from the given …\nCreates an affine transformation matrix containing the …\nCreates an affine transform that changes scale. Note that …\nCreates an affine transform that changes scale. Note that …\nCreates an affine transformation matrix from the given …\nCreates an affine transformation matrix containing the …\nCreates a 2x2 matrix containing the combining non-uniform …\nCreates a 2x2 matrix containing the combining non-uniform …\nCreates an affine transform from the given 2D <code>scale</code>, …\nCreates an affine transformation matrix from the given 2D …\nCreates an affine transformation matrix from the given 2D …\nCreates an affine transform from the given 2D <code>scale</code>, …\nCreates an affine transformation matrix from the given 2D …\nCreates an affine transform from the given 3D <code>scale</code>, …\nCreates an affine transformation matrix from the given 3D …\nCreates an affine transform from the given 3D <code>scale</code>, …\nCreates an affine transformation matrix from the given 3D …\nCreate a quaternion that rotates <code>v.length()</code> radians around …\nCreate a quaternion that rotates <code>v.length()</code> radians around …\nCreates a vector from the first 2 values in <code>slice</code>.\nCreates a vector from the first 3 values in <code>slice</code>.\nCreates a rotation quaternion from a slice.\nCreates a vector from the first 3 values in <code>slice</code>.\nCreates a vector from the first 4 values in <code>slice</code>.\nCreates a rotation quaternion from a slice.\nCreates a vector from the first 2 values in <code>slice</code>.\nCreates a vector from the first 3 values in <code>slice</code>.\nCreates a vector from the first 4 values in <code>slice</code>.\nCreates a vector from the first 2 values in <code>slice</code>.\nCreates a vector from the first 3 values in <code>slice</code>.\nCreates a vector from the first 4 values in <code>slice</code>.\nCreates a vector from the first 2 values in <code>slice</code>.\nCreates a vector from the first 3 values in <code>slice</code>.\nCreates a vector from the first 4 values in <code>slice</code>.\nCreates a vector from the first 2 values in <code>slice</code>.\nCreates a vector from the first 3 values in <code>slice</code>.\nCreates a vector from the first 4 values in <code>slice</code>.\nCreates a vector from the first 2 values in <code>slice</code>.\nCreates a vector from the first 3 values in <code>slice</code>.\nCreates a vector from the first 4 values in <code>slice</code>.\nCreates an affine transformation from the given 2D …\nCreates an affine transformation from the given 3D …\nCreates an affine transformation matrix from the given 2D …\nCreates an affine transformation matrix from the given 2D …\nCreates an affine transformation matrix from the given 3D …\nCreates an affine transformation from the given 2D …\nCreates an affine transformation from the given 3D …\nCreates an affine transformation matrix from the given 2D …\nCreates an affine transformation matrix from the given 3D …\nCreates a new rotation quaternion from a 4D vector.\nCreates a new rotation quaternion from a 4D vector.\nCreates a new rotation quaternion.\nCreates a new rotation quaternion.\n<code>i32</code> vector types.\n<code>i64</code> vector types.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn the inverse of this transform.\nReturn the inverse of this transform.\nReturns the inverse of <code>self</code>.\nReturns the inverse of <code>self</code>.\nReturns the inverse of <code>self</code>.\nReturns the inverse of <code>self</code>.\nReturns the inverse of a normalized quaternion.\nReturn the inverse of this transform.\nReturn the inverse of this transform.\nReturns the inverse of <code>self</code>.\nReturns the inverse of <code>self</code>.\nReturns the inverse of <code>self</code>.\nReturns the inverse of a normalized quaternion.\nReturns <code>true</code> if, and only if, all elements are finite.\nReturns <code>true</code> if, and only if, all elements are finite.\nReturns <code>true</code> if, and only if, all elements are finite. If …\nReturns <code>true</code> if, and only if, all elements are finite.  If …\nReturns <code>true</code> if, and only if, all elements are finite.  If …\nReturns <code>true</code> if, and only if, all elements are finite. If …\nReturns <code>true</code> if, and only if, all elements are finite. If …\nReturns <code>true</code> if, and only if, all elements are finite. If …\nReturns <code>true</code> if, and only if, all elements are finite. If …\nReturns <code>true</code> if, and only if, all elements are finite.  If …\nReturns <code>true</code> if, and only if, all elements are finite.  If …\nReturns <code>true</code> if, and only if, all elements are finite.\nReturns <code>true</code> if, and only if, all elements are finite.\nReturns <code>true</code> if, and only if, all elements are finite. If …\nReturns <code>true</code> if, and only if, all elements are finite. If …\nReturns <code>true</code> if, and only if, all elements are finite. If …\nReturns <code>true</code> if, and only if, all elements are finite. If …\nReturns <code>true</code> if, and only if, all elements are finite.  If …\nReturns <code>true</code> if, and only if, all elements are finite.  If …\nReturns <code>true</code> if, and only if, all elements are finite.  If …\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nPerforms <code>is_nan</code> on each element of self, returning a …\nPerforms <code>is_nan</code> on each element of self, returning a …\nPerforms <code>is_nan</code> on each element of self, returning a …\nPerforms <code>is_nan</code> on each element of self, returning a …\nPerforms <code>is_nan</code> on each element of self, returning a …\nPerforms <code>is_nan</code> on each element of self, returning a …\nPerforms <code>is_nan</code> on each element of self, returning a …\nReturns a bitmask with the lowest 2 bits set to the sign …\nReturns a bitmask with the lowest 3 bits set to the sign …\nReturns a bitmask with the lowest 3 bits set to the sign …\nReturns a bitmask with the lowest 4 bits set to the sign …\nReturns a bitmask with the lowest 2 bits set to the sign …\nReturns a bitmask with the lowest 3 bits set to the sign …\nReturns a bitmask with the lowest 4 bits set to the sign …\nReturns a bitmask with the lowest 2 bits set to the sign …\nReturns a bitmask with the lowest 3 bits set to the sign …\nReturns a bitmask with the lowest 4 bits set to the sign …\nReturns a bitmask with the lowest 2 bits set to the sign …\nReturns a bitmask with the lowest 3 bits set to the sign …\nReturns a bitmask with the lowest 4 bits set to the sign …\nReturns whether <code>self</code> is length <code>1.0</code> or not.\nReturns whether <code>self</code> is length <code>1.0</code> or not.\nReturns whether <code>self</code> of length <code>1.0</code> or not.\nReturns whether <code>self</code> is length <code>1.0</code> or not.\nReturns whether <code>self</code> is length <code>1.0</code> or not.\nReturns whether <code>self</code> of length <code>1.0</code> or not.\nReturns whether <code>self</code> is length <code>1.0</code> or not.\nReturns whether <code>self</code> is length <code>1.0</code> or not.\nReturns whether <code>self</code> is length <code>1.0</code> or not.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nComputes the length of <code>self</code>.\nComputes the length of <code>self</code>.\nComputes the length of <code>self</code>.\nComputes the length of <code>self</code>.\nComputes the length of <code>self</code>.\nComputes the length of <code>self</code>.\nComputes the length of <code>self</code>.\nComputes the length of <code>self</code>.\nComputes the length of <code>self</code>.\nComputes <code>1.0 / length()</code>.\nComputes <code>1.0 / length()</code>.\nComputes <code>1.0 / length()</code>.\nComputes <code>1.0 / length()</code>.\nComputes <code>1.0 / length()</code>.\nComputes <code>1.0 / length()</code>.\nComputes <code>1.0 / length()</code>.\nComputes <code>1.0 / length()</code>.\nComputes <code>1.0 / length()</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nPerforms a linear interpolation between <code>self</code> and <code>rhs</code> based …\nPerforms a linear interpolation between <code>self</code> and <code>rhs</code> based …\nPerforms a linear interpolation between <code>self</code> and <code>rhs</code> based …\nPerforms a linear interpolation between <code>self</code> and <code>rhs</code> based …\nPerforms a linear interpolation between <code>self</code> and <code>rhs</code> based …\nPerforms a linear interpolation between <code>self</code> and <code>rhs</code> based …\nPerforms a linear interpolation between <code>self</code> and <code>rhs</code> based …\nPerforms a linear interpolation between <code>self</code> and <code>rhs</code> based …\nPerforms a linear interpolation between <code>self</code> and <code>rhs</code> based …\nCreates a left-handed view transform using a camera …\nCreates a left-handed view matrix using a camera position, …\nCreates a left-handed view transform using a camera …\nCreates a left-handed view matrix using a camera position, …\nCreates a right-handed view transform using a camera …\nCreates a right-handed view matrix using a camera …\nCreates a right-handed view transform using a camera …\nCreates a right-handed view matrix using a camera …\nCreates a left-handed view transform using a camera …\nCreates a left-handed view matrix using a camera position, …\nCreates a left-handed view transform using a camera …\nCreates a left-handed view matrix using a camera position, …\nCreates a right-handed view transform using a camera …\nCreates a right-handed view matrix using a camera …\nCreates a right-handed view transform using a camera …\nCreates a right-handed view matrix using a camera …\nCreates a 2x2 matrix from two column vectors.\nCreates a 3x3 matrix from three column vectors.\nCreates a 3x3 matrix from three column vectors.\nCreates a 4x4 matrix from four column vectors.\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nMultiplies a quaternion by a scalar value.\nMultiplies a quaternion and a 3D vector, returning the …\nMultiplies two quaternions. If they each represent a …\nMultiplies a quaternion by a scalar value.\nMultiplies a quaternion and a 3D vector, returning the …\nMultiplies two quaternions. If they each represent a …\nFused multiply-add. Computes <code>(self * a) + b</code> element-wise …\nFused multiply-add. Computes <code>(self * a) + b</code> element-wise …\nFused multiply-add. Computes <code>(self * a) + b</code> element-wise …\nFused multiply-add. Computes <code>(self * a) + b</code> element-wise …\nFused multiply-add. Computes <code>(self * a) + b</code> element-wise …\nFused multiply-add. Computes <code>(self * a) + b</code> element-wise …\nFused multiply-add. Computes <code>(self * a) + b</code> element-wise …\nMultiplies two quaternions. If they each represent a …\nMultiplies two quaternions. If they each represent a …\nMultiplies two 2x2 matrices.\nMultiplies two 2x2 matrices.\nMultiplies two 3x3 matrices.\nMultiplies two 3x3 matrices.\nMultiplies two 3x3 matrices.\nMultiplies two 4x4 matrices.\nMultiplies two 4x4 matrices.\nMultiplies two quaternions. If they each represent a …\nMultiplies two quaternions. If they each represent a …\nMultiplies a 3x3 matrix by a scalar.\nMultiplies a 2x2 matrix by a scalar.\nMultiplies a 3x3 matrix by a scalar.\nMultiplies a 4x4 matrix by a scalar.\nMultiplies a 2x2 matrix by a scalar.\nMultiplies a 3x3 matrix by a scalar.\nMultiplies a 4x4 matrix by a scalar.\nTransforms a 2D vector.\nTransforms a 2D vector.\nTransforms a 3D vector.\nTransforms a 3D vector.\nMultiplies a quaternion and a 3D vector, returning the …\nTransforms a 3D vector.\nMultiplies a quaternion and a 3D vector, returning the …\nTransforms a <code>Vec3A</code>.\nTransforms a <code>Vec3A</code>.\nMultiplies a quaternion and a 3D vector, returning the …\nTransforms a 4D vector.\nTransforms a 4D vector.\nCreates a new vector mask.\nCreates a new vector mask.\nCreates a new vector mask.\nCreates a new vector mask.\nCreates a new vector mask.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nReturns <code>self</code> normalized to length 1.0.\nReturns <code>self</code> normalized to length 1.0.\nReturns <code>self</code> normalized to length 1.0.\nReturns <code>self</code> normalized to length 1.0.\nReturns <code>self</code> normalized to length 1.0.\nReturns <code>self</code> normalized to length 1.0.\nReturns <code>self</code> normalized to length 1.0.\nReturns <code>self</code> normalized to length 1.0.\nReturns <code>self</code> normalized to length 1.0.\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nCreates a left-handed orthographic projection matrix with …\nCreates a left-handed orthographic projection matrix with …\nCreates a right-handed orthographic projection matrix with …\nCreates a right-handed orthographic projection matrix with …\nCreates a right-handed orthographic projection matrix with …\nCreates a right-handed orthographic projection matrix with …\nReturns a vector that is equal to <code>self</code> rotated by 90 …\nReturns a vector that is equal to <code>self</code> rotated by 90 …\nReturns a vector that is equal to <code>self</code> rotated by 90 …\nReturns a vector that is equal to <code>self</code> rotated by 90 …\nThe perpendicular dot product of <code>self</code> and <code>rhs</code>. Also known …\nThe perpendicular dot product of <code>self</code> and <code>rhs</code>. Also known …\nThe perpendicular dot product of <code>self</code> and <code>rhs</code>. Also known …\nThe perpendicular dot product of <code>self</code> and <code>rhs</code>. Also known …\nCreates an infinite left-handed perspective projection …\nCreates an infinite left-handed perspective projection …\nCreates an infinite left-handed perspective projection …\nCreates an infinite left-handed perspective projection …\nCreates an infinite reverse right-handed perspective …\nCreates an infinite reverse right-handed perspective …\nCreates an infinite right-handed perspective projection …\nCreates an infinite right-handed perspective projection …\nCreates a left-handed perspective projection matrix with …\nCreates a left-handed perspective projection matrix with …\nCreates a right-handed perspective projection matrix with …\nCreates a right-handed perspective projection matrix with …\nCreates a right-handed perspective projection matrix with […\nCreates a right-handed perspective projection matrix with […\nReturns a vector containing each element of <code>self</code> raised to …\nReturns a vector containing each element of <code>self</code> raised to …\nReturns a vector containing each element of <code>self</code> raised to …\nReturns a vector containing each element of <code>self</code> raised to …\nReturns a vector containing each element of <code>self</code> raised to …\nReturns a vector containing each element of <code>self</code> raised to …\nReturns a vector containing each element of <code>self</code> raised to …\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nTransforms the given 3D vector as a point, applying …\nTransforms the given 3D vector as a point, applying …\nCreates a quaternion from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.\nReturns a vector containing the reciprocal <code>1.0/n</code> of each …\nReturns a vector containing the reciprocal <code>1.0/n</code> of each …\nReturns a vector containing the reciprocal <code>1.0/n</code> of each …\nReturns a vector containing the reciprocal <code>1.0/n</code> of each …\nReturns a vector containing the reciprocal <code>1.0/n</code> of each …\nReturns a vector containing the reciprocal <code>1.0/n</code> of each …\nReturns a vector containing the reciprocal <code>1.0/n</code> of each …\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …\nReturns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …\nReturns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …\nReturns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …\nReturns a vector containing the nearest integer to a …\nReturns a vector containing the nearest integer to a …\nReturns a vector containing the nearest integer to a …\nReturns a vector containing the nearest integer to a …\nReturns a vector containing the nearest integer to a …\nReturns a vector containing the nearest integer to a …\nReturns a vector containing the nearest integer to a …\nReturns the matrix row for the given <code>index</code>.\nReturns the matrix row for the given <code>index</code>.\nReturns the matrix row for the given <code>index</code>.\nReturns the matrix row for the given <code>index</code>.\nReturns the matrix row for the given <code>index</code>.\nReturns the matrix row for the given <code>index</code>.\nReturns the matrix row for the given <code>index</code>.\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nSets the element at <code>index</code>.\nSets the element at <code>index</code>.\nSets the element at <code>index</code>.\nSets the element at <code>index</code>.\nSets the element at <code>index</code>.\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nPerforms a spherical linear interpolation between <code>self</code> and …\nPerforms a spherical linear interpolation between <code>self</code> and …\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nSubtracts the <code>rhs</code> quaternion from <code>self</code>.\nSubtracts the <code>rhs</code> quaternion from <code>self</code>.\nSubtracts two 2x2 matrices.\nSubtracts two 2x2 matrices.\nSubtracts two 3x3 matrices.\nSubtracts two 3x3 matrices.\nSubtracts two 3x3 matrices.\nSubtracts two 4x4 matrices.\nSubtracts two 4x4 matrices.\nTraits adding swizzle methods to all vector types.\nTests the value at <code>index</code>.\nTests the value at <code>index</code>.\nTests the value at <code>index</code>.\nTests the value at <code>index</code>.\nTests the value at <code>index</code>.\n<code>[x, y]</code>\n<code>[x, y, z]</code>\n<code>[x, y, z, w]</code>\n<code>[x, y, z]</code>\n<code>[x, y, z, w]</code>\n<code>[x, y, z, w]</code>\n<code>[x, y]</code>\n<code>[x, y, z]</code>\n<code>[x, y, z, w]</code>\n<code>[x, y]</code>\n<code>[x, y, z]</code>\n<code>[x, y, z, w]</code>\n<code>[x, y]</code>\n<code>[x, y, z]</code>\n<code>[x, y, z, w]</code>\n<code>[x, y]</code>\n<code>[x, y, z]</code>\n<code>[x, y, z, w]</code>\n<code>[x, y]</code>\n<code>[x, y, z]</code>\n<code>[x, y, z, w]</code>\nReturns the rotation axis (normalized) and angle (in …\nReturns the rotation axis (normalized) and angle (in …\nCreates a <code>[f32; 6]</code> array storing data in column major …\nCreates a <code>[f32; 12]</code> array storing data in column major …\nCreates a <code>[f32; 9]</code> array storing data in column major …\nCreates a <code>[f32; 4]</code> array storing data in column major …\nCreates a <code>[f32; 9]</code> array storing data in column major …\nCreates a <code>[f32; 16]</code> array storing data in column major …\nCreates a <code>[f64; 6]</code> array storing data in column major …\nCreates a <code>[f64; 12]</code> array storing data in column major …\nCreates a <code>[f64; 4]</code> array storing data in column major …\nCreates a <code>[f64; 9]</code> array storing data in column major …\nCreates a <code>[f64; 16]</code> array storing data in column major …\nCreates a <code>[[f32; 2]; 3]</code> 2D array storing data in column …\nCreates a <code>[[f32; 3]; 4]</code> 3D array storing data in column …\nCreates a <code>[[f32; 3]; 3]</code> 3D array storing data in column …\nCreates a <code>[[f32; 2]; 2]</code> 2D array storing data in column …\nCreates a <code>[[f32; 3]; 3]</code> 3D array storing data in column …\nCreates a <code>[[f32; 4]; 4]</code> 4D array storing data in column …\nCreates a <code>[[f64; 2]; 3]</code> 2D array storing data in column …\nCreates a <code>[[f64; 3]; 4]</code> 3D array storing data in column …\nCreates a <code>[[f64; 2]; 2]</code> 2D array storing data in column …\nCreates a <code>[[f64; 3]; 3]</code> 3D array storing data in column …\nCreates a <code>[[f64; 4]; 4]</code> 4D array storing data in column …\nReturns the rotation angles for the given euler rotation …\nReturns the rotation angles for the given euler rotation …\nExtracts <code>scale</code>, <code>angle</code> and <code>translation</code> from <code>self</code>.\nExtracts <code>scale</code>, <code>angle</code> and <code>translation</code> from <code>self</code>.\nExtracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>.\nExtracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>. The …\nExtracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>.\nExtracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>. The …\nReturns the rotation axis scaled by the rotation in …\nReturns the rotation axis scaled by the rotation in …\nTransforms the given 2D point, applying shear, scale, …\nTransforms the given 2D vector as a point.\nTransforms the given 2D vector as a point.\nTransforms the given 2D point, applying shear, scale, …\nTransforms the given 2D vector as a point.\nTransforms the given 3D points, applying shear, scale, …\nTransforms the given 3D vector as a point.\nTransforms the given 3D points, applying shear, scale, …\nTransforms the given 3D vector as a point.\nTransforms the given <code>Vec3A</code>, applying shear, scale, …\nTransforms the given <code>Vec3A</code> as 3D point.\nTransforms the given 2D vector, applying shear, scale and …\nRotates the given 2D vector.\nRotates the given 2D vector.\nTransforms the given 2D vector, applying shear, scale and …\nRotates the given 2D vector.\nTransforms the given 3D vector, applying shear, scale and …\nTransforms the give 3D vector as a direction.\nTransforms the given 3D vector, applying shear, scale and …\nTransforms the give 3D vector as a direction.\nTransforms the given <code>Vec3A</code>, applying shear, scale and …\nTransforms the give <code>Vec3A</code> as 3D vector.\nReturns the transpose of <code>self</code>.\nReturns the transpose of <code>self</code>.\nReturns the transpose of <code>self</code>.\nReturns the transpose of <code>self</code>.\nReturns the transpose of <code>self</code>.\nReturns the transpose of <code>self</code>.\nReturns the transpose of <code>self</code>.\nReturns a vector containing the integer part each element …\nReturns a vector containing the integer part each element …\nReturns a vector containing the integer part each element …\nReturns a vector containing the integer part each element …\nReturns a vector containing the integer part each element …\nReturns a vector containing the integer part each element …\nReturns a vector containing the integer part each element …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\n<code>u32</code> vector types.\n<code>u64</code> vector types.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nWrites the columns of <code>self</code> to the first 6 elements in <code>slice</code>…\nWrites the columns of <code>self</code> to the first 12 elements in …\nWrites the columns of <code>self</code> to the first 9 elements in <code>slice</code>…\nWrites the columns of <code>self</code> to the first 4 elements in <code>slice</code>…\nWrites the columns of <code>self</code> to the first 9 elements in <code>slice</code>…\nWrites the columns of <code>self</code> to the first 16 elements in …\nWrites the columns of <code>self</code> to the first 6 elements in <code>slice</code>…\nWrites the columns of <code>self</code> to the first 12 elements in …\nWrites the columns of <code>self</code> to the first 4 elements in <code>slice</code>…\nWrites the columns of <code>self</code> to the first 9 elements in <code>slice</code>…\nWrites the columns of <code>self</code> to the first 16 elements in …\nWrites the elements of <code>self</code> to the first 2 elements in …\nWrites the elements of <code>self</code> to the first 3 elements in …\nWrites the quaternion to an unaligned slice.\nWrites the elements of <code>self</code> to the first 3 elements in …\nWrites the elements of <code>self</code> to the first 4 elements in …\nWrites the quaternion to an unaligned slice.\nWrites the elements of <code>self</code> to the first 2 elements in …\nWrites the elements of <code>self</code> to the first 3 elements in …\nWrites the elements of <code>self</code> to the first 4 elements in …\nWrites the elements of <code>self</code> to the first 2 elements in …\nWrites the elements of <code>self</code> to the first 3 elements in …\nWrites the elements of <code>self</code> to the first 4 elements in …\nWrites the elements of <code>self</code> to the first 2 elements in …\nWrites the elements of <code>self</code> to the first 3 elements in …\nWrites the elements of <code>self</code> to the first 4 elements in …\nWrites the elements of <code>self</code> to the first 2 elements in …\nWrites the elements of <code>self</code> to the first 3 elements in …\nWrites the elements of <code>self</code> to the first 4 elements in …\nWrites the elements of <code>self</code> to the first 2 elements in …\nWrites the elements of <code>self</code> to the first 3 elements in …\nWrites the elements of <code>self</code> to the first 4 elements in …\nReturns the vector part of the quaternion.\nReturns the vector part of the quaternion.\nA 2-dimensional <code>bool</code> vector mask.\nA 3-dimensional <code>bool</code> vector mask.\nA 3-dimensional SIMD vector mask.\nA 4-dimensional <code>bool</code> vector mask.\nA 4-dimensional SIMD vector mask.\nA 2D affine transform, which can represent translation, …\nA 3D affine transform, which can represent translation, …\nA 2x2 column major matrix.\nA 3x3 column major matrix.\nA 3x3 column major matrix.\nA 4x4 column major matrix.\nA quaternion representing an orientation.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nCreates a 2x2 matrix from two column vectors.\nCreates a 3x3 matrix from three column vectors.\nCreates a 3x3 matrix from three column vectors.\nCreates a 4x4 matrix from four column vectors.\nCreates a quaternion from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nA 2D affine transform, which can represent translation, …\nA 3D affine transform, which can represent translation, …\nA 2x2 column major matrix.\nA 3x3 column major matrix.\nA 4x4 column major matrix.\nA quaternion representing an orientation.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nCreates a 2x2 matrix from two column vectors.\nCreates a 3x3 matrix from three column vectors.\nCreates a 4x4 matrix from four column vectors.\nCreates a quaternion from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nThe state of a button, ether pressed or released.\nControl mapping from raw input, expected to be able to be …\nType used to map source of input to control.\nMaps raw inputs to game controls and exposes controls for …\nInputCollector used to update controls.\nTrait that tracks player control state. Provides …\nThe button is pressed.\nThe button is released.\nIndicate input for this frame has been consumed. An …\nUpdate the internal state with new inputs. This must be …\nReturns the argument unchanged.\nGamepad input resource.\nGet control for player based on provided <code>ControlSource</code>.\nGet control for player.\nGet mutable control for player.\nGet <code>ControlSource</code> for player (only present for local …\nGilrs integration.\nCalls <code>U::from(self)</code>.\nKeyboard input resource.\nMouse input resource.\nModule prelude.\nGet whether or not the button is pressed.\nUpdate control state from input collector.\nUpdate which buttons have been “just pressed”, when …\nWindow information.\nRequest to add rumble to a gamepad.\nAn axis event.\nA button event.\nThe gamepad was connected.\nA connection event.\nThe gamepad was disconnected.\nA specific gamepad axis that may have changed.\nA gamepad axis event.\nA specific button on a gamepad.\nA gamepad button event.\nA gamepad connection event.\nThe kind of gamepad connection event.\nA gamepad event.\nResource containing the gamepad input events detected this …\nStruct that represents intensity of a rumble\nRepresents a request to either add, set, or stop rumble on …\nResource that provides an interface for triggering rumble …\nRepresents light rumble intensity for both motors.\nRepresents light rumble intensity for the strong motor …\nRepresents light rumble intensity for the weak motor only.\nRepresents maximum rumble intensity for both motors.\nRepresents maximum rumble intensity for the strong motor …\nRepresents maximum rumble intensity for the weak motor …\nRepresents medium rumble intensity for both motors.\nRepresents medium rumble intensity for the strong motor …\nRepresents medium rumble intensity for the weak motor only.\nRequest to set rumble on a gamepad, replacing any existing …\nRequest to stop rumble on a gamepad.\nRepresents very light rumble intensity for both motors.\nRepresents very light rumble intensity for the strong …\nRepresents very light rumble intensity for the weak motor …\nRepresents no rumble intensity.\nAdds rumble to a specific gamepad. Ignores if the gamepad …\nAdds rumble to all enabled gamepads.\nThe axis that has changed.\nThe gamepad button.\nDisables rumble for a specific gamepad (no rumble requests …\nDisables rumble for all gamepads (no rumble requests will …\nRe-enables rumble for a specific gamepad.\nEnables rumble for all gamepads.\nThe type of connection event.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe ID of the gamepad.\nThe ID of the gamepad.\nThe ID of the gamepad.\nThe gampad events.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if a specific gamepad is disabled for rumble (no …\nChecks if a specific gamepad is enabled for rumble.\nA queue to hold all the gamepad rumble requests to be …\nSets rumble on a specific gamepad, replacing any existing …\nSets rumble on all enabled gamepads, replacing any …\nSet the intensity of the strong motor, clamping it between …\nSet the intensity of the weak motor, clamping it between …\nStops rumble on a specific gamepad.\nStops rumble on all enabled gamepads.\nGet the intensity of the strong motor.\nThe value of the button, for example, this will be <code>1.0</code> …\nThe value of the axis.\nGet the intensity of the weak motor.\nThe duration of the rumble in seconds.\nThe duration of the rumble in seconds.\nThe ID of the gamepad to rumble.\nThe ID of the gamepad to rumble.\nThe ID of the gamepad to stop rumbling.\nThe intensity of the rumble.\nThe intensity of the rumble.\nProcesses gilrs gamepad events into Bones-native …\nThe <code>A</code> key.\nThe <code>AbntC1</code> key.\nThe <code>AbntC2</code> key.\nThe <code>Left Alt</code> key. Maps to <code>Left Option</code> on Mac.\nThe <code>Right Alt</code> key. Maps to <code>Right Option</code> on Mac.\nThe <code>Apostrophe</code> / <code>&#39;</code> key.\nThe <code>Apps</code> key.\nThe <code>Asterisk</code> / <code>*</code> key.\nThe <code>At</code> / <code>@</code> key.\nThe <code>Ax</code> key.\nThe <code>B</code> key.\nThe <code>Back</code> / <code>Backspace</code> key.\nThe <code>Backslash</code> / <code>\\</code> key.\nThe <code>Left Bracket</code> / <code>[</code> key.\nThe <code>Right Bracket</code> / <code>]</code> key.\nThe <code>C</code> key.\nThe <code>Calculator</code> key.\nThe <code>Capital</code> key.\nThe <code>Caret</code> / <code>^</code> key.\nThe <code>Colon</code> / <code>:</code> key.\nThe <code>Comma</code> / <code>,</code> key.\nThe <code>Compose</code> key on Linux.\nThe <code>Left Control</code> key.\nThe <code>Right Control</code> key.\nThe <code>Convert</code> key.\nThe <code>Copy</code> key.\nThe <code>Cut</code> key.\nThe <code>D</code> key.\nThe <code>Delete</code> key.\nThe <code>Down</code> / <code>Down Arrow</code> key.\nThe <code>E</code> key.\nThe <code>End</code> key.\nThe <code>Equals</code> / <code>=</code> key.\nThe <code>Escape</code> / <code>ESC</code> key, next to the <code>F1</code> key.\nThe <code>F</code> key.\nThe <code>F1</code> key.\nThe <code>F10</code> key.\nThe <code>F11</code> key.\nThe <code>F12</code> key.\nThe <code>F13</code> key.\nThe <code>F14</code> key.\nThe <code>F15</code> key.\nThe <code>F16</code> key.\nThe <code>F17</code> key.\nThe <code>F18</code> key.\nThe <code>F19</code> key.\nThe <code>F2</code> key.\nThe <code>F20</code> key.\nThe <code>F21</code> key.\nThe <code>F22</code> key.\nThe <code>F23</code> key.\nThe <code>F24</code> key.\nThe <code>F3</code> key.\nThe <code>F4</code> key.\nThe <code>F5</code> key.\nThe <code>F6</code> key.\nThe <code>F7</code> key.\nThe <code>F8</code> key.\nThe <code>F9</code> key.\nThe <code>G</code> key.\nThe <code>Grave</code> / <code>Backtick</code> / <code>`</code> key.\nThe <code>H</code> key.\nThe <code>Home</code> key.\nThe <code>I</code> key.\nThe <code>Insert</code> key, next to the <code>Backspace</code> key.\nThe <code>J</code> key.\nThe <code>K</code> key.\nThe <code>Kana</code> key.\nThe <code>Kanji</code> key.\nThe <code>0</code> key over the letters.\nThe <code>1</code> key over the letters.\nThe <code>2</code> key over the letters.\nThe <code>3</code> key over the letters.\nThe <code>4</code> key over the letters.\nThe <code>5</code> key over the letters.\nThe <code>6</code> key over the letters.\nThe <code>7</code> key over the letters.\nThe <code>8</code> key over the letters.\nThe <code>9</code> key over the letters.\nThe key code of a keyboard key.\nA keyboard input event.\nResource containing the keyboard input events detected on …\nThe <code>L</code> key.\nThe <code>Left</code> / <code>Left Arrow</code> key.\nThe <code>M</code> key.\nThe <code>Mail</code> key.\nThe <code>MediaSelect</code> key.\nThe <code>MediaStop</code> key.\nThe <code>Minus</code> / <code>-</code> key.\nThe <code>Mute</code> key.\nThe <code>MyComputer</code> key.\nThe <code>N</code> key.\nThe <code>NavigateBackward</code> / <code>Next</code> key.\nThe <code>NavigateForward</code> / <code>Prior</code> key.\nThe <code>NextTrack</code> key.\nThe <code>NoConvert</code> key.\nThe <code>Numlock</code> key.\nThe <code>Numpad0</code> / <code>0</code> key.\nThe <code>Numpad1</code> / <code>1</code> key.\nThe <code>Numpad2</code> / <code>2</code> key.\nThe <code>Numpad3</code> / <code>3</code> key.\nThe <code>Numpad4</code> / <code>4</code> key.\nThe <code>Numpad5</code> / <code>5</code> key.\nThe <code>Numpad6</code> / <code>6</code> key.\nThe <code>Numpad7</code> / <code>7</code> key.\nThe <code>Numpad8</code> / <code>8</code> key.\nThe <code>Numpad9</code> / <code>9</code> key.\nThe <code>NumpadAdd</code> / <code>+</code> key.\nThe <code>NumpadComma</code> / <code>,</code> key.\nThe <code>NumpadDecimal</code> / <code>.</code> key.\nThe <code>NumpadDivide</code> / <code>/</code> key.\nThe <code>NumpadEnter</code> key.\nThe <code>NumpadEquals</code> / <code>=</code> key.\nThe <code>NumpadMultiply</code> / <code>*</code> key.\nThe <code>NumpadSubtract</code> / <code>-</code> key.\nThe <code>O</code> key.\nThe <code>Oem102</code> key.\nThe <code>P</code> key.\nThe <code>PageDown</code> key.\nThe <code>PageUp</code> key.\nThe <code>Paste</code> key.\nThe <code>Pause</code> / <code>Break</code> key, next to the <code>Scroll</code> key.\nThe <code>Period</code> / <code>.</code> key.\nThe <code>PlayPause</code> key.\nThe <code>Plus</code> / <code>+</code> key.\nThe <code>Power</code> key.\nThe <code>PrevTrack</code> key.\nThe <code>Q</code> key.\nThe <code>R</code> key.\nThe <code>Return</code> / <code>Enter</code> key.\nThe <code>Right</code> / <code>Right Arrow</code> key.\nThe <code>S</code> key.\nThe <code>Scroll</code> / <code>Scroll Lock</code> key.\nThe <code>Semicolon</code> / <code>;</code> key.\nThe <code>Left Shift</code> key.\nThe <code>Right Shift</code> key.\nThe <code>Slash</code> / <code>/</code> key.\nThe <code>Sleep</code> key.\nThe <code>Snapshot</code> / <code>Print Screen</code> key.\nThe <code>Space</code> / <code>Spacebar</code> / <code> </code> key.\nThe <code>Stop</code> key.\nThe <code>Left Super</code> key. Generic keyboards usually display this …\nThe <code>Right Super</code> key. Generic keyboards usually display …\nThe <code>Sysrq</code> key.\nThe <code>T</code> key.\nThe <code>Tab</code> / <code>   </code> key.\nThe <code>U</code> key.\nThe <code>Underline</code> / <code>_</code> key.\nThe <code>Unlabeled</code> key.\nThe <code>Up</code> / <code>Up Arrow</code> key.\nThe <code>V</code> key.\nThe <code>VolumeDown</code> key.\nThe <code>VolumeUp</code> key.\nThe <code>W</code> key.\nThe <code>Wake</code> key.\nThe <code>WebBack</code> key.\nThe <code>WebFavorites</code> key.\nThe <code>WebForward</code> key.\nThe <code>WebHome</code> key.\nThe <code>WebRefresh</code> key.\nThe <code>WebSearch</code> key.\nThe <code>WebStop</code> key.\nThe <code>X</code> key.\nThe <code>Y</code> key.\nThe <code>Yen</code> key.\nThe <code>Z</code> key.\nThe state of the keyboard button.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe key code of the pressed key, if applicable.\nThe key events that have been detected this frame.\nThe scan code of the pressed key.\nThe left mouse button.\nThe number of lines scrolled.\nThe middle mouse button.\nA button on the mouse.\nA mouse button input event.\nResource containing the mouse input events made this frame.\nThe position of the mouse in screen-space.\nMouse scroll-wheel input event.\nThe unit that a <code>MouseScrollEvent</code> is in.\nThe position of the mouse in world-space.\nAnother mouse button with the associated number.\nThe number of pixels scrolled.\nThe right mouse button.\nThe button that the event refers to.\nThe mouse button events sent this frame.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe movement of the mouse this frame.\nthe scroll movement.\nWhether the button was pressed or released.\nThe unit the mouse scroll is in.\nThe mouse wheel event sent this frame.\nInformation about the window the game is running in.\nReturns the argument unchanged.\nMay be set to change whether or not the game is displayed …\nCalls <code>U::from(self)</code>.\nThe logical size of the window’s client area.\nThe default <code>SessionRunner</code>, which just runs the systems …\nThe <code>Game</code> encompasses a complete bones game’s logic, …\nTrait for plugins that can be installed into a <code>Game</code>.\nA system that runs directly on a <code>Game</code> instead of in a …\nA collection of systems associated directly to a <code>Game</code> as …\nA bones game. This includes all of the game worlds, and …\nType of session command\nResource that allows you to configure the current session.\nTrait for plugins that can be installed into a <code>Session</code>.\nA session runner is in charge of advancing a <code>Session</code> …\nContainer for multiple game sessions.\nWhether or not this session should have it’s systems run.\nWhether or not this session should be active after this …\nAdd a system that will run every time the named session is …\nAdd a system that will run on every step, after all of the …\nAdd a system that will run every time the named session is …\nAdd a system that will run on every step, before all of …\nAdd a <code>SessionCommand</code> to queue.\nAdd a system that will run only once, before all of the …\nGame systems that are run after sessions are run.\nGame systems that are run after a specific session is run.\nGame systems that are run before sessions are run.\nGame systems that are run before a specific session is run.\nCreate a new session, and borrow it mutably so it can be …\nDelete a session.\nWhether or not this session should be deleted.\nDisable the capture of local input by this session.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBorrow a session from the sessions list.\nBorrow a session from the sessions list.\nFlag which indicates whether or not the startup systems …\nInitialize a resource that will be shared across game …\nInsert a resource that will be shared across all game …\nInstall the plugin into the <code>Session</code>.\nInstall the plugin into the <code>Game</code>.\nInstall a plugin.\nInstall a <code>GamePlugin</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIterate over sessions.\nMutably iterate over sessions.\nCreate an empty <code>Session</code>.\nCreate an empty game with an asset server.\nBones lib prelude\nThe priority of this session relative to other sessions in …\nProvides an interface for resetting various internal parts …\nRestart Session Runner. This should reset accumulated …\nRestore the world state.\nThe session runner to use for this session.\nThe sessions that make up the game.\nSet the session runner for this session.\nGet the shared resource of a given type out of this <code>Game</code>s …\nGet the shared resource cell of a given type out of this …\nGet the shared resource of a given type out of this <code>Game</code>s …\nCollection of resources that will have a shared instance …\nSnapshot the world state.\nList of sorted session keys.\nThe system stages.\nStartup systems.\nStep the simulation once.\nStep the game simulation.\nThe collection of systems that are associated to the game …\nTime functionality for the Bones framework.\nWhether or not this session should be rendered.\nWhether or not this session should be visible.\nThe ECS world for the core.\nCreates an instance of the type this trait is implemented …\nHelper trait for unwraping each item in an array.\nThe <code>World</code> is simply a collection of <code>Resources</code>, and …\nAtomic Refcell implmentation.\nBitset implementation.\nBorrow a component store from the world.\nMutably borrow a component store from the world.\nECS component storage.\nStores the world components.\n<code>Entity</code> implementation, storage, and interation.\nGet an entity’s components.\nReturns the argument unchanged.\nCreates <code>Self</code> using data from the given <code>World</code>.\nGet an entity’s components.\nBorrow a resource from the world, if it exists.\nBorrow a resource from the world, if it exists.\nInitialize a resource of type <code>T</code> by inserting it’s …\nInsert a resource.\nCalls <code>U::from(self)</code>.\nRemove the component info for dead entities.\nCreate a new <code>World</code>.\nThe prelude.\nProvides an interface for resetting entities, and …\nBorrow a resource from the world.\nBorrow a resource from the world.\nWorld resource storage.\nStores the world resources.\nRun a system once.\nImplementation of stage abstraction for running …\nImplements the system API for the ECS.\nUnwrap all the items in an array.\nCreate a new world that uses the provided entities …\nA mutable memory location with dynamically checked borrow …\nWrapper for a borrowed <code>AtomicCell</code> that will released lock …\nWrapper for mutably borrowed <code>AtomicCell</code> that will released …\nBitSet formatter.\nThe BitSet API.\nThe type of bitsets used to track entities in component …\nReturns if all bits are set.\nBitwise AND.\nBitwise AND after NOT of rhs.\nReturns if any bits are set.\nConditionally sets or resets the given bit.\nCounts the number of set bits.\nReturns if the two bitsets have no bits in common.\nReturns if the two bitsets are equal.\nFlips the given bit.\nFormat the bits.\nInitializes all bits.\nReturns total number of bits.\nBitwise combine with MASK.\nReturns if none of the bits are set.\nBitwise NOT.\nBitwise OR.\nResets the given bit.\nSets the given bit.\nReturns if self is a subset of rhs.\nReturns if self is a superset of rhs.\nReturns if the given bit is set.\nBitwise XOR.\nShorthand for combining bitsets with bit_or.\nShorthand for setting bits on the bitset container.\nCreates a bitset big enough to contain the index of each …\nImplements the <code>BitSet</code> trait members for your type through …\nAn atomic component store.\nRead-only iterator over components matching a given bitset\nMutable iterator over components matching a given bitset\nRead-only iterator over components matching a given bitset.\nMutable iterator over components matching a given bitset. …\nThis trait factors out functions for iterating with bitset …\nA typed wrapper around <code>UntypedComponentStore</code>.\nA collection of <code>ComponentStore&lt;T&gt;</code>.\nAn untyped atomic component store.\nIterates over components using a provided bitset. Each …\nIterates over components using a provided bitset. Each …\nIterate over component store returning …\nIterate mutably over component store returning …\nHolds components of a given type indexed by <code>Entity</code>.\nMutable iterator over pointers in an untyped component …\nMutable iterator over pointers in an untyped component …\nGet bitset of <code>ComponentStore</code> / implementor.\nGet <code>ComponentStore</code> for usage with generic types …\nThe number of components (enabled bits in the <code>inner</code> …\nThe number of components (enabled bits in the <code>inner</code> …\nCheck whether or not this component store has data for the …\nThe number of enabled bits discovered in the query bitset. …\nThe number of enabled bits discovered in the query bitset. …\nGets a mutable reference to the component if there is …\nGets an immutable reference to the component if there is …\nThe component bitset iterator.\nThe component bitset iterator.\nIterates mutable over the components of this type where …\nIterates mutably over the components of this type where …\nIterates immutably over the components of this type where …\nIterates immutably over the components of this type where …\nThe number of enabled bits in the input bitset.\nThe number of enabled bits in the input bitset.\nHolds a list of alive entities.\nIterator over entities returned by <code>Entities::iter_with</code>.\nAn entity index.\nIterator over entities using the provided bitset.\nThe type of iterator this query item creates\nMore than one entity matches the query.\nNo entity matches the query.\nHelper func to construct a <code>OptionalQueryItem</code> wrapping a …\nHelper func to construct a <code>OptionalQueryItemMut</code> wrapping a …\nWrapper for the <code>Comp</code> <code>SystemParam</code> used as <code>QueryItem</code> to …\nWrapper for the <code>CompMut</code> <code>SystemParam</code> used as <code>QueryItem</code> to …\nA type representing a component-joining entity query.\nAn error that may occur when querying for a single entity. …\nModify the iteration bitset\nReturn the item that matches the query within the given …\nReturn an iterator over the provided bitset.\nA mutable memory location with dynamically checked borrow …\nAn atomic component store.\nA handle to a resource from a <code>Resources</code> collection.\nAn untyped, atomic resource cell.\nBitSet formatter.\nThe BitSet API.\nThe type of bitsets used to track entities in component …\nA <code>bool</code>\nA boolean.\nA <code>bool</code>\nThe represents a <code>SchemaBox</code> with given type inside.\nError thrown when a resource cell cannot be inserted …\nA resource containing the <code>Commands</code> command queue.\nA <code>SystemParam</code> that can be used to schedule systems that …\n<code>SystemParam</code> for getting read access to a <code>ComponentStore</code>.\n<code>SystemParam</code> for getting mutable access to a <code>ComponentStore</code>.\nRead-only iterator over components matching a given bitset\nMutable iterator over components matching a given bitset\nRead-only iterator over components matching a given bitset.\nMutable iterator over components matching a given bitset. …\nThis trait factors out functions for iterating with bitset …\nA typed wrapper around <code>UntypedComponentStore</code>.\nA collection of <code>ComponentStore&lt;T&gt;</code>.\nA <code>StageLabel</code> for the 5 core stages.\nError creating ID\nResource that is automatically added to the world while a …\nDerive macro for deriving <code>Deref</code> on structs with one field.\nDerive macro for deriving <code>DerefMut</code> on structs with one …\nHolds a list of alive entities.\nIterator over entities returned by <code>Entities::iter_with</code>.\nAn entity index.\nIterator over entities using the provided bitset.\nAccess an enum.\nType represents an enum, which in the C layout is called a …\nAccess an enum.\nHelper for accessing the inner data of a schema ref at …\nHelper for accessing the inner data of a schema ref at …\nSchema data for an enum.\nA type for an enum tag for <code>EnumSchemaInfo</code>.\nAn <code>f32</code>\n<code>f32</code>\nAn <code>f32</code>\nAn <code>f64</code>\n<code>f64</code>\nAn <code>f64</code>\nThe index of a field in a struct in a <code>Schema</code>.\nA wrapper type that implements […\nThe first stage\nTrait implemented for types that can produce an instance …\nCreates an instance of the type this trait is implemented …\nDetermines the kind of PRNG. <code>TurboKind::FAST</code> RNGs are …\nThis trait provides the means to easily generate all …\nTrait implemented for types that have a <code>Schema</code>.\nDerive macro for the HasSchema trait.\nA <code>HashMap</code> implementing aHash, a high speed keyed hashing …\nA <code>HashSet</code> implementing aHash, a high speed keyed hashing …\nAn <code>i128</code>\n<code>i128</code>\nAn <code>i128</code>\nAn <code>i16</code>\n<code>i16</code>\nAn <code>i16</code>\nAn <code>i32</code>\n<code>i32</code>\nAn <code>i32</code>\nAn <code>i64</code>\n<code>i64</code>\nAn <code>i64</code>\nAn <code>i8</code>\n<code>i8</code>\nAn <code>i8</code>\nThe index of a field. Works for tuple fields and named …\nThe system input parameter.\nConverts a function into a <code>System</code>.\nThe ID is in the wrong format.\nThe type of iterator this query item creates\nA <code>Ulid</code> with a human-readable ascii prefix.\nError creating a <code>LabeledId</code>.\nErrors that can happen while parsing a <code>LabeledId</code>.\nThe fifth stage\nAccess a map.\nType represents a <code>SchemaMap</code>.\nAccess a map.\nMore than one entity matches the query.\nThe name of a field.\nNo entity matches the query.\nAn opaque type\nOpaque data that cannot described by a schema.\nAn opaque type\nHelper func to construct a <code>OptionalQueryItem</code> wrapping a …\nHelper func to construct a <code>OptionalQueryItemMut</code> wrapping a …\nWrapper for the <code>Comp</code> <code>SystemParam</code> used as <code>QueryItem</code> to …\nWrapper for the <code>CompMut</code> <code>SystemParam</code> used as <code>QueryItem</code> to …\nThe type of the parameter, ranging over the lifetime of …\nThe fourth stage\nThe second stage\nThe prefix was not ASCII.\nThe prefix was too long ( greater than 63 chars ).\nA type of primitive.\nAccess a struct.\nThe type represents a primitive value.\nAccess a struct.\nHelper for accessing the inner data of a schema ref at …\nHelper for accessing the inner data of a schema ref at …\nA type representing a component-joining entity query.\nAn error that may occur when querying for a single entity. …\nWrapper for a borrowed <code>AtomicCell</code> that will released lock …\nWrapper for mutably borrowed <code>AtomicCell</code> that will released …\n<code>SystemParam</code> for getting read access to a resource.\n<code>SystemParam</code> for getting read access to a resource and …\n<code>SystemParam</code> for getting mutable access to a resource.\n<code>SystemParam</code> for getting mutable access to a resource and …\nA collection of resources.\nA typed version of <code>SchemaBox</code>.\nGlobal <code>SchemaRegistry</code> used to register <code>SchemaData</code>s and …\nTyped version of a <code>SchemaMap</code>.\nA typed version of a <code>SchemaVec</code>.\nA owning, type-erased <code>Box</code>-like container for types with a …\nSchema information describing the memory layout of a type.\nDerivable schema <code>type_data</code> for types that implement …\nA struct that implements <code>DeserializeSeed</code> and can be used …\nError returned when a field is not found in a schema.\nA unique identifier for a schema registered in the …\nA schema describes the data layout of a type, to enable …\nLayout information computed for <code>SchemaData</code>.\nUntyped schema-aware “HashMap”.\nAccess helper for a <code>SchemaMap</code>.\nMutable <code>SchemaMap</code> access helper.\nError type when attempting to cast between types with …\nAn untyped reference that knows the <code>Schema</code> of the pointee …\nHelper for accessing the inner data of a schema ref at …\nAn untyped mutable reference that knows the <code>Schema</code> of the …\nAccess a schema\nA schema registry that alloates <code>SchemaId</code>s for <code>SchemaData</code>s …\nA struct that implements <code>Serialize</code> and wraps around a …\nA type-erased <code>Vec</code>-like collection that for items with the …\nAccess helper for a <code>SchemaVec</code>.\nMutable <code>SchemaVec</code> access helper.\nA collection of systems that will be run in order.\nTrait for things that may be used to identify a system …\nThe intermediate state for the parameter, that may be …\nStruct containing a static system.\nA <code>String</code>\nA Rust <code>String</code>. Must be manipulated with Rust string …\nA <code>String</code>\nAccess a struct.\nThe type represents a struct.\nAccess a struct.\nA field in a <code>StructSchemaInfo</code>.\nHelper for accessing the inner data of a schema ref at …\nIterator for <code>StructRefAccess::fields()</code>.\nA field returned by <code>StructRefFieldIter</code>.\nHelper for accessing the inner data of a schema ref at …\nIterator for <code>StructRefAccess::fields()</code>.\nA field returned by <code>StructRefFieldIter</code>.\nSchema data for a struct.\nThe type of the system that is output\nTrait implemented by systems.\nTrait used to implement parameters for <code>System</code> functions.\nTrait for system stages. A stage is a\nAn ordered collection of <code>SystemStage</code>s.\nA fast, non-cryptographic, thread-local random number …\nExtension trait for automatically implementing all …\nA <code>u128</code>\n<code>u128</code>\nA <code>u128</code>\nA <code>u16</code>\nA <code>u16</code>.\n<code>u16</code>\nA <code>u16</code>\nA <code>u32</code>\nA <code>u32</code>.\n<code>u32</code>\nA <code>u32</code>\nA <code>u64</code>\n<code>u64</code>\nA <code>u64</code>\nA <code>u8</code>\nA <code>u8</code>.\n<code>u8</code>\nA <code>u8</code>\nA Ulid is a unique 128-bit lexicographically sortable …\nThe ULID could not be parsed.\nExtension trait for <code>Ulid</code>.\nA wrapper struct that marks it unsafe to both create and …\nAn untyped atomic component store.\nIterates over components using a provided bitset. Each …\nIterates over components using a provided bitset. Each …\nIterate over component store returning …\nIterate mutably over component store returning …\nHolds components of a given type indexed by <code>Entity</code>.\nMutable iterator over pointers in an untyped component …\nMutable iterator over pointers in an untyped component …\nAn untyped resource that may be inserted into …\nStorage for un-typed resources.\nHelper trait for unwraping each item in an array.\nThe third stage\nInformation about an enum variant for <code>EnumSchemaInfo</code>.\nAccess a vec.\nType represents a <code>SchemaVec</code>, where each item in the vec …\nAccess a vec.\nThe <code>World</code> is simply a collection of <code>Resources</code>, and …\nAdd a system to be run at the end of the stage.\nAdd a system that will run each frame until it succeeds …\nAdd a system that will run only once, before all of the …\nAdd a system to this stage.\nAdd a <code>System</code> to the stage with the given label.\nReturns a list of all <code>Entity</code>s cloned into a new vec.\nGenerates a random <code>char</code> in ranges a-z and A-Z.\nGenerates a random <code>char</code> in ranges a-z, A-Z and 0-9.\nModify the iteration bitset\nDereferences and returns result wrapped in the <code>Ref</code>.\nDereferences and returns result wrapped in the <code>RefMut</code>.\nConverts reference and returns result wrapped in the <code>RefMut</code>…\nReturns a raw pointer to the underlying data in this cell.\nConverts reference and returns result wrapped in the <code>Ref</code>.\nConverts a reference of <code>T</code> to a <code>SchemaRefMut</code>\nConverts a reference of <code>T</code> to a <code>SchemaRef</code>\nReturns if all bits are set.\nBitwise AND.\nBitwise AND after NOT of rhs.\nReturns if any bits are set.\nConditionally sets or resets the given bit.\nCounts the number of set bits.\nReturns if the two bitsets have no bits in common.\nReturns if the two bitsets are equal.\nFlips the given bit.\nFormat the bits.\nInitializes all bits.\nReturns total number of bits.\nBitwise combine with MASK.\nReturns if none of the bits are set.\nBitwise NOT.\nBitwise OR.\nResets the given bit.\nSets the given bit.\nReturns if self is a subset of rhs.\nReturns if self is a superset of rhs.\nReturns if the given bit is set.\nBitwise XOR.\nShorthand for combining bitsets with bit_or.\nGet bitset of <code>ComponentStore</code> / implementor.\nReturns the bitset indicating which entity indices have a …\nRead the bitset containing the list of entites with this …\nReturns a bitset where each index where the bit is set to …\nShorthand for setting bits on the bitset container.\nReturns a random boolean value.\nThis is used create an instance of the system parame, …\nImmutably borrows the wrapped value.\nBorrow the resource.\nLock the resource for reading.\nMutably borrows the wrapped value.\nMutably borrow the resource.\nLock the resource for read-writing.\nCast a reference of this type to a reference of another …\nCast a mutable reference of this type to a reference of …\nReturns a boolean value based on a rate. <code>rate</code> represents …\nGenerates a random <code>char</code> in the given range.\nClears the killed entity list.\nClone the inner data, creating a new copy instead of …\nThe function pointer that may be used to clone data with …\nGet <code>ComponentStore</code> for usage with generic types …\nStores the world components.\nThe number of components (enabled bits in the <code>inner</code> …\nThe number of components (enabled bits in the <code>inner</code> …\nCheck whether or not this component store has data for the …\nCheck whether or not the bitset contains the given entity.\nCheck whether or not this component store has data for the …\nCheck whether or not the resource with the given ID is …\nCheck whether or not a resource is in the store.\nCheck whether or not a cell for the given resource has …\nConstructor that) is the same as <code>Ulid::new()</code>, but that …\nCreates a new <code>Entity</code> and returns it.\nCreates a bitset big enough to contain the index of each …\nAn ergonomic abbreviation for <code>Default::default()</code> to make …\nThe function pointer that may be used to write a default …\nThe function that may be used to deserialize the type.\nGenerate a random digit in the given <code>radix</code>.\nThe function pointer that may be used to drop data with …\nInitialize a new, empty <code>UntypedResource</code>.\nCreate a new, empty resource cell.\nThe function pointer that may be used to compare two …\nReturns a random <code>f32</code> value between <code>0.0</code> and <code>1.0</code>.\nReturns a random <code>f32</code> value between <code>-1.0</code> and <code>1.0</code>.\nReturns a random <code>f32</code> value between <code>0.0</code> and <code>1.0</code>.\nReturns a random <code>f32</code> value between <code>-1.0</code> and <code>1.0</code>.\nIf this is a struct, then the field offsets will contain …\nThe fields in the struct, in the order they are defined.\nMakes a new <code>Ref</code> for an optional component of the borrowed …\nMakes a new <code>RefMut</code> for an optional component of the …\nGet the first entity and components in the given query.\nGet the first entity in the given bitset.\nCreate an <code>UntypedComponentStore</code> that is valid for the …\nThe number of enabled bits discovered in the query bitset. …\nThe number of enabled bits discovered in the query bitset. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new <code>UntypedResource</code> for the given schema, …\nReturn the data for the type.\nCreates a <code>ComponentStore</code> from an <code>UntypedComponentStore</code>.\nCreate from an <code>UntypedResource</code>.\nCreates <code>Self</code> using data from the given <code>World</code>.\nThe full name of the type, including any module specifiers.\nReturns an array of constant <code>SIZE</code> containing random <code>u8</code> …\nReturns a random <code>i128</code> value.\nReturns a random <code>i16</code> value.\nReturns a random <code>i32</code> value.\nReturns a random <code>i64</code> value.\nReturns a random <code>i8</code> value.\nReturns a random <code>isize</code> value.\nReturns a random <code>u128</code> value.\nReturns a random <code>u16</code> value.\nReturns a random <code>u32</code> value.\nReturns a random <code>u64</code> value.\nReturns a random <code>u8</code> value.\nReturns a random <code>usize</code> value.\nReturns the generation of this <code>Entity</code>.\nGet a reference to the component storage for the given …\nGets an immutable reference to the component of <code>Entity</code>.\nBorrow a component store.\nBorrow the resource for the given schema.\nBorrow a resource.\nGet the untyped component storage by the component’s …\nGet the components of a certain type\nGet a cell for the resource with the given schema.\nGets a clone of the resource cell for the resource of the …\nGet the untyped component storage by the component’s …\nGet the first entity and components in the given query.\nGet the first entity in the given bitset.\nGet mutable references s to the component data for …\nGet mutable references to the component data for multiple …\nGet <code>SchemaRefMut</code>s to the component data for multiple …\nReturns a mutable reference to the underlying data.\nGet a mutable reference to the component storage for the …\nGets a mutable reference to the component of <code>Entity</code>.\nBorrow a resource.\nGet a mutable reference to component storage for the given …\nGet a mutable reference to component if it exists. …\nGet a <code>SchemaRef</code> to the component for the given <code>Entity</code> if …\nGet a <code>SchemaRefMut</code> to the component for the given <code>Entity</code>\nShortens a type name to remove all module paths.\nGets a mutable reference to the component if there is …\nGets a mutable reference to the component if there is …\nGet a single entity and components in the given query if …\nGets an immutable reference to the component if there is …\nReturn the item that matches the query within the given …\nGet a reference to the component store if there is exactly …\nGets an immutable reference to the component if there is …\nGets an immutable reference to the component if there is …\nGet a mutable reference to the component store if there is …\nGets a mutable reference to the component if there is …\nThis is called to produce the intermediate state of the …\nWhether or not the startup systems have been run yet.\nThe function pointer that may be used to hash the value.\nReturns a random <code>i128</code> within a given range bound.\nReturns a random <code>i16</code> value.\nReturns a random <code>i32</code> value.\nReturns a random <code>i64</code> value.\nReturns a random <code>i8</code> value.\nThe unique identifier for the stage.\nReturns a unique identifier for the stage.\nThe unique identifier for the stage.\nImplements the <code>BitSet</code> trait members for your type through …\nReturns a <code>usize</code> value for stable indexing across different …\nReturns the index of this <code>Entity</code>.\nInitialize the resource using it’s <code>FromWorld</code> …\nBorrow the resource, initializing it if it doesn’t exist.\nBorrow the resource, initializing it if it doesn’t exist.\nThe component bitset iterator.\nThe component bitset iterator.\nInsert component data for the given entity and get the …\nInsert resource data into the cell, returning the previous …\nInserts a component for the given <code>Entity</code> index. Returns …\nInsert a resource.\nInsert component data for the given entity and get the …\nThis is an advanced use-case function that allows you to …\nReturns true if the entity already had a component of this …\nInsert a new stage, after another existing stage\nInsert a new stage, before another existing stage\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConsumes the <code>AtomicCell</code>, returning the wrapped value.\nSplits wrapper into two parts. One is reference to the …\nSplits wrapper into two parts. One is reference to the …\nConvert into a typed <code>ComponentStore</code>.\nConverts to the internal, untyped <code>ComponentStore</code>.\nConsume <code>Resources</code> and extract the underlying …\nConvert into an untyped resource.\nChecks if the <code>Entity</code> is still alive.\nReturns a random <code>isize</code> within a given range bound.\nIterates immutably over all components of this type.\nIterates immutably over all components of this type. Very …\nIterates over all alive entities.\nIterates mutably over all components of this type.\nIterates mutably over all components of this type. Very …\nIterates mutable over the components of this type where …\nIterates mutable over the components of this type where …\nIterates mutable over the components of this type where …\nIterates mutably over the components of this type where …\nIterates mutably over the components of this type where …\nIterates mutably over the components of this type where …\nIterate over the entities and components in the given …\nIterates immutably over the components of this type where …\nReturn an iterator over the provided bitset.\nIterates immutably over the components of this type where …\nIterates immutably over the components of this type where …\nIterates over entities using the provided bitset.\nIterates immutably over the components of this type where …\nIterates immutably over the components of this type where …\nIterates immutably over the components of this type where …\nKill an entity.\nKills all entities.\nReturns entities in the killed list.\nThe kind of schema.\nThe layout of the type.\nConvert into a reference to the underlying data.\nConvert into a reference to the underlying data.\nHints to the compiler that the branch condition is likely …\nGenerates a random <code>char</code> in the range a-z.\nMakes a new <code>Ref</code> for a component of the borrowed data.\nMakes a new <code>RefMut</code> for a component of the borrowed data.\nSplits a <code>Ref</code> into multiple <code>Ref</code>s for different components …\nSplits a <code>RefMut</code> into multiple <code>RefMut</code>s for different …\nThe human-readable name for the stage, used for error …\nReturns the human-readable name of the label, used in …\nGet a best-effort name for the system, used in diagnostics.\nThe human-readable name for the stage, used for error …\nA best-effort name for the system, for diagnostic purposes.\nThe name of the field, if set.\nThe name of the field, if set.\nThe short name of the type.\nThe name of the enum variant.\nThe name of the field. Will be <code>None</code> if this is a field of …\nCreates a new <code>AtomicCell</code> containing value.\nWraps external reference into <code>Ref</code>.\nCreate a arbitrary <code>UntypedComponentStore</code>.\nWraps external reference into <code>RefMut</code>.\nCreates a new <code>UntypedResource</code> storing the given data.\nCreate a new, empty stage, for the given label.\nCreates a new <code>Entity</code> from the provided index and …\nCreate an empty <code>UntypedResources</code>.\nCreate an empty <code>Resources</code>.\nCreate a new resource cell with the given data.\nPartially shuffles a slice by a given amount and returns …\nThe number of enabled bits in the input bitset.\nThe number of enabled bits in the input bitset.\nThe system queue that will be run at the end of the stage\nRegister this schema with the global schema registry.\nRemove the component data for the entity if it exists.\nRemove the resource data, returning what was stored in it.\nRemoves the component of <code>Entity</code>. Returns <code>Some(T)</code> if the …\nRemove a resource from the store, if it is present.\nRemove the resource from the cell, leaving the cell empty.\nRemove all systems from this stage.\nRemove all systems from all stages, including startup and …\nRemove the component data for the entity if it exists.\nIf there is a previous value, <code>true</code> will be returned.\nReplaces the wrapped value with a new one, returning the …\nReplaces the wrapped value with a new one computed from f, …\nRemove all systems from all stages, including startup and …\nStores the world resources.\nExecute the systems on the given <code>world</code>.\nRun the system.\nExecute the systems on the given <code>world</code>.\nThis is run every time the system is executed\nSamples a random item from a slice of values.\nSamples a random item from an iterator of values. <code>O(1)</code> if …\nSamples multiple unique items from a slice of values.\nSamples multiple unique items from an iterator of values.\nSamples multiple unique items from a mutable slice of …\nSamples a random <code>&amp;mut</code> item from a slice of values.\nGet this type’s <code>Schema</code>.\nGet the schema of the components stored.\nGet the schema of the resource.\nThe schema of this variant.\nThe schema of the field.\nThe registered schemas.\nSet an entity on the the bitset.\nShuffles a slice randomly in O(n) time.\nSystems that are continously run until they succeed(return …\nGet a single entity and components in the given query if …\nMakes a new <code>Ref</code> for a sub-slice of the borrowed slice.\nMakes a new <code>RefMut</code> for a sub-slice of the borrowed slice.\nThe stages in the collection, in the order that they will …\nThe systems that should run at startup.\nSwaps the wrapped value of self with the wrapped value of …\nConvert into a <code>System</code>.\nThe list of systems in the stage.\nThe layout of the enum tag.\nTakes the wrapped value, leaving <code>Default::default()</code> in its …\nTransposes a <code>Ref</code> of an <code>Option</code> into an <code>Option</code> of a <code>Ref</code>. …\nTransposes a <code>RefMut</code> of an <code>Option</code> into an <code>Option</code> of a <code>RefMut</code>…\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nImmutably borrows the wrapped value, returning <code>None</code> if the …\nMutably borrows the wrapped value, returning an error if …\nImmutably borrows the wrapped value, returning <code>None</code> if the …\nMutably borrows the wrapped value, returning <code>None</code> if the …\nCast a reference of this type to a reference of another …\nCast a mutable reference of this type to a reference of …\nGet a reference to the component storage for the given …\nGet mutable references s to the component data for …\nGet a mutable reference to the component storage for the …\nInsert component data for the given entity and get the …\nInsert component data for the given entity and get the …\nRemove the component data for the entity if it exists.\nContainer for storing <code>Schema</code> type datas.\nThe Rust <code>TypeId</code> that this <code>Schema</code> was created from, if it …\nReturns a random <code>u128</code> within a given range bound.\nReturns a random <code>u16</code> value.\nReturns a random <code>u32</code> value.\nReturns a random <code>u64</code> value.\nReturns a random <code>u8</code> value.\nUndo the effect of leaked guards on the borrow state of …\nHints to the compiler that the branch condition is …\nBorrow the underlying <code>UntypedResources</code> store.\nUnwrap all the items in an array.\nGenerates a random <code>char</code> in the range A-Z.\nReturns a random <code>usize</code> within a given range bound.\nThe field’s value.\nThe field’s value.\nInfo for the enum variants.\nStochastic Acceptance implementation of Roulette Wheel …\nStochastic Acceptance implementation of Roulette Wheel …\nWraps external reference into <code>Ref</code>. And associates it with …\nWraps external reference into <code>RefMut</code>. And associates it …\nCreate a <code>SystemStages</code> collection, initialized with a stage …\nThe alignment of the data.\nThe size of the data.\nThe align of the opaque type.\nThe schema ref.\nThe size of the opaque type.\nThe align of the opaque type.\nThe schema ref.\nThe size of the opaque type.\nThe schema of the key type.\nThe schema of the value type.\nA handle to a resource from a <code>Resources</code> collection.\nAn untyped, atomic resource cell.\nError thrown when a resource cell cannot be inserted …\nA collection of resources.\nAn untyped resource that may be inserted into …\nStorage for un-typed resources.\nA resource containing the <code>Commands</code> command queue.\nA <code>SystemParam</code> that can be used to schedule systems that …\nA <code>StageLabel</code> for the 5 core stages.\nResource that is automatically added to the world while a …\nThe first stage\nThe fifth stage\nThe fourth stage\nThe second stage\nA collection of systems that will be run in order.\nTrait for things that may be used to identify a system …\nTrait for system stages. A stage is a\nAn ordered collection of <code>SystemStage</code>s.\nThe third stage\nAdd a system to this stage.\nWhether or not the startup systems have been run yet.\nThe unique identifier for the stage.\nReturns a unique identifier for the stage.\nThe unique identifier for the stage.\nThe human-readable name for the stage, used for error …\nReturns the human-readable name of the label, used in …\nThe human-readable name for the stage, used for error …\nThe system queue that will be run at the end of the stage\nRemove all systems from this stage.\nExecute the systems on the given <code>world</code>.\nSystems that are continously run until they succeed(return …\nThe stages in the collection, in the order that they will …\nThe systems that should run at startup.\nThe list of systems in the stage.\n<code>SystemParam</code> for getting read access to a <code>ComponentStore</code>.\n<code>SystemParam</code> for getting mutable access to a <code>ComponentStore</code>.\nThe system input parameter.\nConverts a function into a <code>System</code>.\nThe type of the parameter, ranging over the lifetime of …\n<code>SystemParam</code> for getting read access to a resource.\n<code>SystemParam</code> for getting read access to a resource and …\n<code>SystemParam</code> for getting mutable access to a resource.\n<code>SystemParam</code> for getting mutable access to a resource and …\nThe intermediate state for the parameter, that may be …\nStruct containing a static system.\nThe type of the system that is output\nTrait implemented by systems.\nTrait used to implement parameters for <code>System</code> functions.\nThis is used create an instance of the system parame, …\nThis is called to produce the intermediate state of the …\nGet a best-effort name for the system, used in diagnostics.\nA best-effort name for the system, for diagnostic purposes.\nRun the system.\nThis is run every time the system is executed\nConvert into a <code>System</code>.\nA <code>Duration</code> type to represent a span of time, typically …\nThe maximum duration.\nThe duration of one microsecond.\nThe duration of one millisecond.\nThe duration of one nanosecond.\nThe duration of one second.\nA duration of zero time.\nComputes the absolute difference between <code>self</code> and <code>other</code>.\nPanics\nReturns the total number of whole microseconds contained …\nReturns the total number of whole milliseconds contained …\nReturns the number of milliseconds contained by this …\nReturns the number of milliseconds contained by this …\nReturns the total number of nanoseconds contained by this …\nReturns the number of <em>whole</em> seconds contained by this …\nReturns the number of seconds contained by this <code>Duration</code> …\nReturns the number of seconds contained by this <code>Duration</code> …\nChecked <code>Duration</code> addition. Computes <code>self + other</code>, …\nChecked <code>Duration</code> division. Computes <code>self / other</code>, …\nChecked <code>Duration</code> multiplication. Computes <code>self * other</code>, …\nChecked <code>Duration</code> subtraction. Computes <code>self - other</code>, …\nDivide <code>Duration</code> by <code>Duration</code> and return <code>f32</code>.\nDivide <code>Duration</code> by <code>Duration</code> and return <code>f64</code>.\nDivide <code>Duration</code> by <code>f32</code>.\nDivide <code>Duration</code> by <code>f64</code>.\nThe internal duration between this point and another.\nReturns the argument unchanged.\nCreates a new <code>Duration</code> from the specified number of days.\nCreates a new <code>Duration</code> from the specified number of hours.\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of whole …\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of weeks.\nCalls <code>U::from(self)</code>.\nReturns true if this <code>Duration</code> spans no time.\nMultiplies <code>Duration</code> by <code>f32</code>.\nMultiplies <code>Duration</code> by <code>f64</code>.\nCreates a new <code>Duration</code> from the specified number of whole …\nThe current time, expressed in milliseconds since the Unix …\nSaturating <code>Duration</code> addition. Computes <code>self + other</code>, …\nSaturating <code>Duration</code> multiplication. Computes <code>self * other</code>, …\nSaturating <code>Duration</code> subtraction. Computes <code>self - other</code>, …\nThe internal duration between this point and another.\nPanics\nPanics\nReturns the fractional part of this <code>Duration</code>, in whole …\nReturns the fractional part of this <code>Duration</code>, in whole …\nReturns the fractional part of this <code>Duration</code>, in …\nThe checked version of <code>from_secs_f32</code>.\nThe checked version of <code>from_secs_f64</code>.\nA mutable memory location with dynamically checked borrow …\nAn atomic component store.\nA handle to a resource from a <code>Resources</code> collection.\nAn untyped, atomic resource cell.\nBitSet formatter.\nThe BitSet API.\nThe type of bitsets used to track entities in component …\nA <code>bool</code>\nA boolean.\nA <code>bool</code>\nThe represents a <code>SchemaBox</code> with given type inside.\nError thrown when a resource cell cannot be inserted …\nA resource containing the <code>Commands</code> command queue.\nA <code>SystemParam</code> that can be used to schedule systems that …\n<code>SystemParam</code> for getting read access to a <code>ComponentStore</code>.\n<code>SystemParam</code> for getting mutable access to a <code>ComponentStore</code>.\nRead-only iterator over components matching a given bitset\nMutable iterator over components matching a given bitset\nRead-only iterator over components matching a given bitset.\nMutable iterator over components matching a given bitset. …\nThis trait factors out functions for iterating with bitset …\nA typed wrapper around <code>UntypedComponentStore</code>.\nA collection of <code>ComponentStore&lt;T&gt;</code>.\nA <code>StageLabel</code> for the 5 core stages.\nError creating ID\nResource that is automatically added to the world while a …\nDerive macro for deriving <code>Deref</code> on structs with one field.\nDerive macro for deriving <code>DerefMut</code> on structs with one …\nHolds a list of alive entities.\nIterator over entities returned by <code>Entities::iter_with</code>.\nAn entity index.\nIterator over entities using the provided bitset.\nAccess an enum.\nType represents an enum, which in the C layout is called a …\nAccess an enum.\nHelper for accessing the inner data of a schema ref at …\nHelper for accessing the inner data of a schema ref at …\nSchema data for an enum.\nA type for an enum tag for <code>EnumSchemaInfo</code>.\nAn <code>f32</code>\n<code>f32</code>\nAn <code>f32</code>\nAn <code>f64</code>\n<code>f64</code>\nAn <code>f64</code>\nThe index of a field in a struct in a <code>Schema</code>.\nA wrapper type that implements […\nThe first stage\nTrait implemented for types that can produce an instance …\nCreates an instance of the type this trait is implemented …\nDetermines the kind of PRNG. <code>TurboKind::FAST</code> RNGs are …\nThe <code>Game</code> encompasses a complete bones game’s logic, …\nTrait for plugins that can be installed into a <code>Game</code>.\nThis trait provides the means to easily generate all …\nTrait implemented for types that have a <code>Schema</code>.\nDerive macro for the HasSchema trait.\nA <code>HashMap</code> implementing aHash, a high speed keyed hashing …\nA <code>HashSet</code> implementing aHash, a high speed keyed hashing …\nAn <code>i128</code>\n<code>i128</code>\nAn <code>i128</code>\nAn <code>i16</code>\n<code>i16</code>\nAn <code>i16</code>\nAn <code>i32</code>\n<code>i32</code>\nAn <code>i32</code>\nAn <code>i64</code>\n<code>i64</code>\nAn <code>i64</code>\nAn <code>i8</code>\n<code>i8</code>\nAn <code>i8</code>\nThe index of a field. Works for tuple fields and named …\nThe system input parameter.\nConverts a function into a <code>System</code>.\nThe ID is in the wrong format.\nThe type of iterator this query item creates\nA <code>Ulid</code> with a human-readable ascii prefix.\nError creating a <code>LabeledId</code>.\nErrors that can happen while parsing a <code>LabeledId</code>.\nThe fifth stage\nAccess a map.\nType represents a <code>SchemaMap</code>.\nAccess a map.\nMore than one entity matches the query.\nThe name of a field.\nNo entity matches the query.\nAn opaque type\nOpaque data that cannot described by a schema.\nAn opaque type\nHelper func to construct a <code>OptionalQueryItem</code> wrapping a …\nHelper func to construct a <code>OptionalQueryItemMut</code> wrapping a …\nWrapper for the <code>Comp</code> <code>SystemParam</code> used as <code>QueryItem</code> to …\nWrapper for the <code>CompMut</code> <code>SystemParam</code> used as <code>QueryItem</code> to …\nThe type of the parameter, ranging over the lifetime of …\nThe fourth stage\nThe second stage\nThe prefix was not ASCII.\nThe prefix was too long ( greater than 63 chars ).\nA type of primitive.\nAccess a struct.\nThe type represents a primitive value.\nAccess a struct.\nHelper for accessing the inner data of a schema ref at …\nHelper for accessing the inner data of a schema ref at …\nA type representing a component-joining entity query.\nAn error that may occur when querying for a single entity. …\nWrapper for a borrowed <code>AtomicCell</code> that will released lock …\nWrapper for mutably borrowed <code>AtomicCell</code> that will released …\n<code>SystemParam</code> for getting read access to a resource.\n<code>SystemParam</code> for getting read access to a resource and …\n<code>SystemParam</code> for getting mutable access to a resource.\n<code>SystemParam</code> for getting mutable access to a resource and …\nA collection of resources.\nA typed version of <code>SchemaBox</code>.\nGlobal <code>SchemaRegistry</code> used to register <code>SchemaData</code>s and …\nTyped version of a <code>SchemaMap</code>.\nA typed version of a <code>SchemaVec</code>.\nA owning, type-erased <code>Box</code>-like container for types with a …\nSchema information describing the memory layout of a type.\nDerivable schema <code>type_data</code> for types that implement …\nA struct that implements <code>DeserializeSeed</code> and can be used …\nError returned when a field is not found in a schema.\nA unique identifier for a schema registered in the …\nA schema describes the data layout of a type, to enable …\nLayout information computed for <code>SchemaData</code>.\nUntyped schema-aware “HashMap”.\nAccess helper for a <code>SchemaMap</code>.\nMutable <code>SchemaMap</code> access helper.\nError type when attempting to cast between types with …\nAn untyped reference that knows the <code>Schema</code> of the pointee …\nHelper for accessing the inner data of a schema ref at …\nAn untyped mutable reference that knows the <code>Schema</code> of the …\nAccess a schema\nA schema registry that alloates <code>SchemaId</code>s for <code>SchemaData</code>s …\nA struct that implements <code>Serialize</code> and wraps around a …\nA type-erased <code>Vec</code>-like collection that for items with the …\nAccess helper for a <code>SchemaVec</code>.\nMutable <code>SchemaVec</code> access helper.\nA bones game. This includes all of the game worlds, and …\nType of session command\nResource that allows you to configure the current session.\nTrait for plugins that can be installed into a <code>Session</code>.\nA session runner is in charge of advancing a <code>Session</code> …\nContainer for multiple game sessions.\nA collection of systems that will be run in order.\nTrait for things that may be used to identify a system …\nThe intermediate state for the parameter, that may be …\nStruct containing a static system.\nA <code>String</code>\nA Rust <code>String</code>. Must be manipulated with Rust string …\nA <code>String</code>\nAccess a struct.\nThe type represents a struct.\nAccess a struct.\nA field in a <code>StructSchemaInfo</code>.\nHelper for accessing the inner data of a schema ref at …\nIterator for <code>StructRefAccess::fields()</code>.\nA field returned by <code>StructRefFieldIter</code>.\nHelper for accessing the inner data of a schema ref at …\nIterator for <code>StructRefAccess::fields()</code>.\nA field returned by <code>StructRefFieldIter</code>.\nSchema data for a struct.\nThe type of the system that is output\nTrait implemented by systems.\nTrait used to implement parameters for <code>System</code> functions.\nTrait for system stages. A stage is a\nAn ordered collection of <code>SystemStage</code>s.\nA fast, non-cryptographic, thread-local random number …\nA clock that tracks how much it has advanced (and how much …\nExtension trait for automatically implementing all …\nA <code>u128</code>\n<code>u128</code>\nA <code>u128</code>\nA <code>u16</code>\nA <code>u16</code>.\n<code>u16</code>\nA <code>u16</code>\nA <code>u32</code>\nA <code>u32</code>.\n<code>u32</code>\nA <code>u32</code>\nA <code>u64</code>\n<code>u64</code>\nA <code>u64</code>\nA <code>u8</code>\nA <code>u8</code>.\n<code>u8</code>\nA <code>u8</code>\nA Ulid is a unique 128-bit lexicographically sortable …\nThe ULID could not be parsed.\nExtension trait for <code>Ulid</code>.\nA wrapper struct that marks it unsafe to both create and …\nAn untyped atomic component store.\nIterates over components using a provided bitset. Each …\nIterates over components using a provided bitset. Each …\nIterate over component store returning …\nIterate mutably over component store returning …\nHolds components of a given type indexed by <code>Entity</code>.\nMutable iterator over pointers in an untyped component …\nMutable iterator over pointers in an untyped component …\nAn untyped resource that may be inserted into …\nStorage for un-typed resources.\nHelper trait for unwraping each item in an array.\nThe third stage\nA handle representing a string in the global string cache.\nA standard <code>HashMap</code> using <code>Ustr</code> as the key type with a …\nA standard <code>HashSet</code> using <code>Ustr</code> as the key type with a …\nInformation about an enum variant for <code>EnumSchemaInfo</code>.\nAccess a vec.\nType represents a <code>SchemaVec</code>, where each item in the vec …\nAccess a vec.\nThe <code>World</code> is simply a collection of <code>Resources</code>, and …\nWhether or not this session should have it’s systems run.\nWhether or not this session should be active after this …\nAdd a system to this stage.\nGenerates a random <code>char</code> in ranges a-z and A-Z.\nGenerates a random <code>char</code> in ranges a-z, A-Z and 0-9.\nModify the iteration bitset\nGet the cached string as a C char*.\nGet this ustr as a CStr\nConverts a reference of <code>T</code> to a <code>SchemaRefMut</code>\nConverts a reference of <code>T</code> to a <code>SchemaRef</code>\nGet the cached string as a &amp;str\nReturns if all bits are set.\nBitwise AND.\nBitwise AND after NOT of rhs.\nReturns if any bits are set.\nConditionally sets or resets the given bit.\nCounts the number of set bits.\nReturns if the two bitsets have no bits in common.\nReturns if the two bitsets are equal.\nFlips the given bit.\nFormat the bits.\nInitializes all bits.\nReturns total number of bits.\nBitwise combine with MASK.\nReturns if none of the bits are set.\nBitwise NOT.\nBitwise OR.\nResets the given bit.\nSets the given bit.\nReturns if self is a subset of rhs.\nReturns if self is a superset of rhs.\nReturns if the given bit is set.\nBitwise XOR.\nShorthand for combining bitsets with bit_or.\nGet bitset of <code>ComponentStore</code> / implementor.\nShorthand for setting bits on the bitset container.\nReturns a random boolean value.\nThis module contains types that can be used to implement …\nThis is used create an instance of the system parame, …\nCast a reference of this type to a reference of another …\nCast a mutable reference of this type to a reference of …\nReturns a boolean value based on a rate. <code>rate</code> represents …\nGenerates a random <code>char</code> in the given range.\nThe function pointer that may be used to clone data with …\nGet <code>ComponentStore</code> for usage with generic types …\nStores the world components.\nThe number of components (enabled bits in the <code>inner</code> …\nThe number of components (enabled bits in the <code>inner</code> …\nCheck whether or not this component store has data for the …\nConstructor that) is the same as <code>Ulid::new()</code>, but that …\nCreates a bitset big enough to contain the index of each …\nAn ergonomic abbreviation for <code>Default::default()</code> to make …\nThe function pointer that may be used to write a default …\nWhether or not this session should be deleted.\nThe function that may be used to deserialize the type.\nGenerate a random digit in the given <code>radix</code>.\nDisable the capture of local input by this session.\nThe function pointer that may be used to drop data with …\nThe function pointer that may be used to compare two …\nReturns a random <code>f32</code> value between <code>0.0</code> and <code>1.0</code>.\nReturns a random <code>f32</code> value between <code>-1.0</code> and <code>1.0</code>.\nReturns a random <code>f32</code> value between <code>0.0</code> and <code>1.0</code>.\nReturns a random <code>f32</code> value between <code>-1.0</code> and <code>1.0</code>.\nIf this is a struct, then the field offsets will contain …\nThe fields in the struct, in the order they are defined.\nThe number of enabled bits discovered in the query bitset. …\nThe number of enabled bits discovered in the query bitset. …\nCreate a new Ustr from the given &amp;str.\nReturns the argument unchanged.\nReturn the data for the type.\nCreates <code>Self</code> using data from the given <code>World</code>.\nThe full name of the type, including any module specifiers.\nReturns an array of constant <code>SIZE</code> containing random <code>u8</code> …\nReturns a random <code>i128</code> value.\nReturns a random <code>i16</code> value.\nReturns a random <code>i32</code> value.\nReturns a random <code>i64</code> value.\nReturns a random <code>i8</code> value.\nReturns a random <code>isize</code> value.\nReturns a random <code>u128</code> value.\nReturns a random <code>u16</code> value.\nReturns a random <code>u32</code> value.\nReturns a random <code>u64</code> value.\nReturns a random <code>u8</code> value.\nReturns a random <code>usize</code> value.\nShortens a type name to remove all module paths.\nGets a mutable reference to the component if there is …\nGets an immutable reference to the component if there is …\nReturn the item that matches the query within the given …\nThis is called to produce the intermediate state of the …\nWhether or not the startup systems have been run yet.\nThe function pointer that may be used to hash the value.\nReturns a random <code>i128</code> within a given range bound.\nReturns a random <code>i16</code> value.\nReturns a random <code>i32</code> value.\nReturns a random <code>i64</code> value.\nReturns a random <code>i8</code> value.\nThe unique identifier for the stage.\nReturns a unique identifier for the stage.\nThe unique identifier for the stage.\nImplements the <code>BitSet</code> trait members for your type through …\nReturns a <code>usize</code> value for stable indexing across different …\nThe component bitset iterator.\nThe component bitset iterator.\nInstall the plugin into the <code>Session</code>.\nInstall the plugin into the <code>Game</code>.\nCalls <code>U::from(self)</code>.\nReturns true if the length is zero.\nReturns a random <code>isize</code> within a given range bound.\nIterates mutable over the components of this type where …\nIterates mutably over the components of this type where …\nIterates immutably over the components of this type where …\nReturn an iterator over the provided bitset.\nIterates immutably over the components of this type where …\nThe kind of schema.\nThe layout of the type.\nGet the length (in bytes) of this string.\nHints to the compiler that the branch condition is likely …\nGenerates a random <code>char</code> in the range a-z.\nThe human-readable name for the stage, used for error …\nReturns the human-readable name of the label, used in …\nGet a best-effort name for the system, used in diagnostics.\nThe human-readable name for the stage, used for error …\nA best-effort name for the system, for diagnostic purposes.\nThe name of the field, if set.\nThe name of the field, if set.\nThe short name of the type.\nThe name of the enum variant.\nThe name of the field. Will be <code>None</code> if this is a field of …\nPartially shuffles a slice by a given amount and returns …\nGet the precomputed hash for this string\nThe priority of this session relative to other sessions in …\nThe number of enabled bits in the input bitset.\nThe number of enabled bits in the input bitset.\nThe system queue that will be run at the end of the stage\nRegister this schema with the global schema registry.\nRemove all systems from this stage.\nStores the world resources.\nRestart Session Runner. This should reset accumulated …\nExecute the systems on the given <code>world</code>.\nRun the system.\nThis is run every time the system is executed\nThe session runner to use for this session.\nSamples a random item from a slice of values.\nSamples a random item from an iterator of values. <code>O(1)</code> if …\nSamples multiple unique items from a slice of values.\nSamples multiple unique items from an iterator of values.\nSamples multiple unique items from a mutable slice of …\nSamples a random <code>&amp;mut</code> item from a slice of values.\nGet this type’s <code>Schema</code>.\nThe schema of this variant.\nThe schema of the field.\nThe registered schemas.\nThe sessions that make up the game.\nCollection of resources that will have a shared instance …\nShuffles a slice randomly in O(n) time.\nSystems that are continously run until they succeed(return …\nList of sorted session keys.\nThe system stages.\nThe stages in the collection, in the order that they will …\nThe systems that should run at startup.\nStep the simulation once.\nConvert into a <code>System</code>.\nThe collection of systems that are associated to the game …\nThe list of systems in the stage.\nThe layout of the enum tag.\nGet an owned String copy of this string.\nCast a reference of this type to a reference of another …\nCast a mutable reference of this type to a reference of …\nContainer for storing <code>Schema</code> type datas.\nThe Rust <code>TypeId</code> that this <code>Schema</code> was created from, if it …\nReturns a random <code>u128</code> within a given range bound.\nReturns a random <code>u16</code> value.\nReturns a random <code>u32</code> value.\nReturns a random <code>u64</code> value.\nReturns a random <code>u8</code> value.\nHints to the compiler that the branch condition is …\nUnwrap all the items in an array.\nGenerates a random <code>char</code> in the range A-Z.\nReturns a random <code>usize</code> within a given range bound.\nCreate a new Ustr from the given &amp;str.\nThe field’s value.\nThe field’s value.\nInfo for the enum variants.\nWhether or not this session should be rendered.\nWhether or not this session should be visible.\nStochastic Acceptance implementation of Roulette Wheel …\nStochastic Acceptance implementation of Roulette Wheel …\nThe ECS world for the core.\nThe alignment of the data.\nThe size of the data.\nThe align of the opaque type.\nThe schema ref.\nThe size of the opaque type.\nThe align of the opaque type.\nThe schema ref.\nThe size of the opaque type.\nThe schema of the key type.\nThe schema of the value type.\nA boolean.\nThe represents a <code>SchemaBox</code> with given type inside.\nType represents an enum, which in the C layout is called a …\nSchema data for an enum.\nA type for an enum tag for <code>EnumSchemaInfo</code>.\n<code>f32</code>\n<code>f64</code>\nTrait implemented for types that can produce an instance …\nTrait implemented for types that have a <code>Schema</code>.\nDerive macro for the HasSchema trait.\n<code>i128</code>\n<code>i16</code>\n<code>i32</code>\n<code>i64</code>\n<code>i8</code>\nType represents a <code>SchemaMap</code>.\nOpaque data that cannot described by a schema.\nA type of primitive.\nThe type represents a primitive value.\nSchema information describing the memory layout of a type.\nA schema describes the data layout of a type, to enable …\nLayout information computed for <code>SchemaData</code>.\nA Rust <code>String</code>. Must be manipulated with Rust string …\nThe type represents a struct.\nA field in a <code>StructSchemaInfo</code>.\nSchema data for a struct.\n<code>u128</code>\nA <code>u16</code>.\n<code>u16</code>\nA <code>u32</code>.\n<code>u32</code>\n<code>u64</code>\nA <code>u8</code>.\n<code>u8</code>\nA wrapper struct that marks it unsafe to both create and …\nInformation about an enum variant for <code>EnumSchemaInfo</code>.\nType represents a <code>SchemaVec</code>, where each item in the vec …\nAllocation and collection utilities.\nConverts a reference of <code>T</code> to a <code>SchemaRefMut</code>\nConverts a reference of <code>T</code> to a <code>SchemaRef</code>\nCast a reference of this type to a reference of another …\nCast a mutable reference of this type to a reference of …\nThe function pointer that may be used to clone data with …\nThe function pointer that may be used to write a default …\nThe function pointer that may be used to drop data with …\nThe function pointer that may be used to compare two …")