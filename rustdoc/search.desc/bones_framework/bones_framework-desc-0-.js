searchState.loadedDescShard("bones_framework", 0, "The bones framework for game development.\nExtension trait for the bones <code>AssetServer</code>.\nDefault plugins for bones framework games.\nDefault plugins for bones framework sessions.\nResource for exiting bones games.\nAnimation utilities and systems.\nAudio session, systems, and resources.\nImplements bones egui debug windows and tools. Requires ‘…\nExternal crate documentation.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInput resources.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLocalization module.\nLogging module for bones. Provides implementation of …\nNetworked multi-player plugin.\nBones ECS system parameters.\nThe prelude.\nRegister the default assets from <code>bones_framework</code>.\nRendering components.\n<code>setup_logs</code> is a macro for initializing logging in bones.\nPersistant storage API.\n<code>Timer</code> and <code>Stopwatch</code> utilities.\nMiscellaneous utilities.\nComponent that may be added to entities with an <code>AtlasSprite</code>…\nComponent that may be added to an <code>AtlasSprite</code> to control …\nSystem for automatically animating sprites with the …\nInstall animation utilities into the given <code>SystemStages</code>.\nThe collection of animations in this animation bank.\nThe current animation.\nThe frames per second to play the animation at.\nThe frames in the animation.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a reference to an animation in the bank\nGet a mutable reference to an animation in the bank\nGet the current animation\nGet a mutable reference to the current animation\nThe current frame in the animation.\nInsert a new animation into the bank\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe last animation that was playing.\nRemove an animation from the bank\nWhether or not to repeat the animation\nSet the current animation if it exists inside of <code>animations</code>…\nThe amount of time the current frame has been playing\nSystem for updating <code>AnimatedSprite</code>s based on thier …\nLet <code>Path</code> and <code>PathBuf</code> have <code>absolutize</code> and …\nHelper type for storing asset extensions.\nAn identifier for an asset.\n<code>AssetIo</code> is a trait that is implemented for backends …\nA type data that indicates how to load a type as an asset.\nContext provided to custom asset loaders in the …\nThe progress that has been made loading the game assets.\nA custom assset loader.\nContains that path to an asset, and the pack_dir that it …\nA borrowed version of <code>AssetLoc</code>.\nAn asset pack contains assets that are loaded by the game.\nThe unique ID for an asset pack.\nA requirement specifier for an asset pack, made up of the …\nSpecifies an asset pack, and it’s exact version.\nStruct responsible for loading assets into it’s …\nThe inner state of the asset server.\nStores assets for later retrieval.\nA <code>bool</code>\nA boolean.\nA <code>bool</code>\nThe represents a <code>SchemaBox</code> with given type inside.\nType alias for …\nThe <code>AssetPackId</code> of the core pack.\nAn ID for an asset that has changed.\nA unique content ID.\nYAML format for the core asset pack’s <code>pack.yaml</code> file.\nAn asset with a custom asset loader.\nDummy <code>AssetIo</code> implementation used for debugging or as a …\nAccess an enum.\nType represents an enum, which in the C layout is called a …\nAccess an enum.\nHelper for accessing the inner data of a schema ref at …\nHelper for accessing the inner data of a schema ref at …\nSchema data for an enum.\nA type for an enum tag for <code>EnumSchemaInfo</code>.\nAn <code>f32</code>\n<code>f32</code>\nAn <code>f32</code>\nAn <code>f64</code>\n<code>f64</code>\nAn <code>f64</code>\nThe index of a field in a struct in a <code>Schema</code>.\nA wrapper type that implements […\n<code>AssetIo</code> implementation that loads from the filesystem.\nTrait implemented for types that can produce an instance …\nA typed handle to an asset.\nThe <code>Cid</code> of an asset that has changed.\nTrait implemented for types that have a <code>Schema</code>.\nDerive macro for the HasSchema trait.\nAn <code>i128</code>\n<code>i128</code>\nAn <code>i128</code>\nAn <code>i16</code>\n<code>i16</code>\nAn <code>i16</code>\nAn <code>i32</code>\n<code>i32</code>\nAn <code>i32</code>\nAn <code>i64</code>\n<code>i64</code>\nAn <code>i64</code>\nAn <code>i8</code>\n<code>i8</code>\nAn <code>i8</code>\nThe index of a field. Works for tuple fields and named …\nAn error returned when an asset pack does not support the …\nAn asset that has been loaded.\nStruct containing all the game’s loaded assets, …\nThe location of an asset that has changed.\nThe display error message for this error type.\nAccess a map.\nType represents a <code>SchemaMap</code>.\nAccess a map.\nAn equivalent to <code>Option&lt;T&gt;</code> that has a stable memory layout …\nContext provided while loading a metadata asset.\nThis is a metadata asset that can be loaded from JSON or …\nThe name of a field.\nAsset handle that may be replicated over network and …\nAn opaque type\nOpaque data that cannot described by a schema.\nAn opaque type\nYAML format for asset packs’ <code>pack.yaml</code> file.\nA type of primitive.\nAccess a struct.\nThe type represents a primitive value.\nAccess a struct.\nHelper for accessing the inner data of a schema ref at …\nHelper for accessing the inner data of a schema ref at …\nA typed version of <code>SchemaBox</code>.\nGlobal <code>SchemaRegistry</code> used to register <code>SchemaData</code>s and …\nTyped version of a <code>SchemaMap</code>.\nA typed version of a <code>SchemaVec</code>.\nType data for asset handles.\nA owning, type-erased <code>Box</code>-like container for types with a …\nSchema information describing the memory layout of a type.\nDerivable schema <code>type_data</code> for types that implement …\nA struct that implements <code>DeserializeSeed</code> and can be used …\nError returned when a field is not found in a schema.\nA unique identifier for a schema registered in the …\nA schema describes the data layout of a type, to enable …\nLayout information computed for <code>SchemaData</code>.\nUntyped schema-aware “HashMap”.\nAccess helper for a <code>SchemaMap</code>.\nMutable <code>SchemaMap</code> access helper.\nA custom asset loader implementation for a metadata asset.\nError type when attempting to cast between types with …\nA schema reference, containing the ID of the pack that …\nThe load context for a <code>SchemaRefMut</code>.\nAn untyped reference that knows the <code>Schema</code> of the pointee …\nHelper for accessing the inner data of a schema ref at …\nAn untyped mutable reference that knows the <code>Schema</code> of the …\nAccess a schema\nA schema registry that alloates <code>SchemaId</code>s for <code>SchemaData</code>s …\nA struct that implements <code>Serialize</code> and wraps around a …\nA type-erased <code>Vec</code>-like collection that for items with the …\nAccess helper for a <code>SchemaVec</code>.\nMutable <code>SchemaVec</code> access helper.\nThe value is set.\nA <code>String</code>\nA Rust <code>String</code>. Must be manipulated with Rust string …\nA <code>String</code>\nAccess a struct.\nThe type represents a struct.\nAccess a struct.\nA field in a <code>StructSchemaInfo</code>.\nHelper for accessing the inner data of a schema ref at …\nIterator for <code>StructRefAccess::fields()</code>.\nA field returned by <code>StructRefFieldIter</code>.\nHelper for accessing the inner data of a schema ref at …\nIterator for <code>StructRefAccess::fields()</code>.\nA field returned by <code>StructRefFieldIter</code>.\nSchema data for a struct.\nA <code>u128</code>\n<code>u128</code>\nA <code>u128</code>\nA <code>u16</code>\nA <code>u16</code>.\n<code>u16</code>\nA <code>u16</code>\nA <code>u32</code>\nA <code>u32</code>.\n<code>u32</code>\nA <code>u32</code>\nA <code>u64</code>\n<code>u64</code>\nA <code>u64</code>\nA <code>u8</code>\nA <code>u8</code>.\n<code>u8</code>\nA <code>u8</code>\nA wrapper struct that marks it unsafe to both create and …\nThe value is not set.\nAn untyped handle to an asset.\nInformation about an enum variant for <code>EnumSchemaInfo</code>.\nAccess a vec.\nType represents a <code>SchemaVec</code>, where each item in the vec …\nAccess a vec.\n<strong>SemVer version</strong> as defined by https://semver.org.\nAsset IO implementation that loads assets from a URL.\nGet an absolute path. This works even if the path does not …\nGet an absolute path. This works even if the path does not …\nGet an absolute path. This works even if the path does not …\nGet a helper to access the inner data.\nGet a mutable access helper to this reference.\nReturns <code>Unset</code> if the option is <code>Unset</code>, otherwise returns …\nReturns <code>Unset</code> if the option is <code>Unset</code>, otherwise calls <code>f</code> …\nBorrow the schema ref as a <code>SchemaBox</code> if it is one.\nGet the enum, if this is a enum.\nBorrow the schema ref as a <code>SchemaMap</code> if it is one.\nBorrow this box as a <code>SchemaRefMut</code>.\nConverts from <code>&amp;mut Maybe&lt;T&gt;</code> to <code>Maybe&lt;&amp;mut T&gt;</code>.\nConvert back to a <code>SchemaRefMut</code>\nGet the primitive, if this is a primitive.\nGet the raw pointer\nGet a raw pointer to the box data.\nGet the pointer.\nBorrow as an <code>AssetLocRef</code>.\nBorrow this <code>SchemaRefMut</code> as a <code>SchemaRef</code>.\nBorrow this <code>SchemaRefMutAccess</code> as a <code>SchemaRefAccess</code>.\nConvert to an immutable <code>PrimitiveRef</code>.\nBorrow this box as a <code>SchemaRef</code>.\nConverts from <code>&amp;Maybe&lt;T&gt;</code> to <code>Maybe&lt;&amp;T&gt;</code>.\nConverts a reference of <code>T</code> to a <code>SchemaRefMut</code>\nConverts a reference of <code>T</code> to a <code>SchemaRef</code>\nConvert to a <code>SchemaRef</code>.\nGet the struct, if this is a struct.\nGet the schema of the items in the vector, if this is a …\nBorrow the schema ref as a <code>SchemaVec</code> if it is one.\nReceiver for asset changes, used to implement hot reloads.\nSender for asset changes, used by the <code>AssetIo</code> …\nContent addressed cache of raw bytes for asset data.\nMaps the handle of the asset to it’s content ID.\nHelper function to return type data for a custom asset …\nThe asset server.\nThe base URL to load assets from.\nMaps asset content IDs, to assets that have been loaded by …\nGet the capacity of the backing buffer.\nGet the capacity of the vec.\nCast a reference of this type to a reference of another …\nCast this pointer to a reference to a type with a matching …\nCast this box to it’s inner type and return it.\nCast this pointer to a mutable reference to a type with a …\nCast this pointer to a mutable reference.\nUnsafely convert this box into an owned T.\nUnsafely cast this pointer to a specifc Rust type.\nCast a mutable reference of this type to a reference of …\nCast this pointer to a reference to a type with a matching …\nCast this box to a mutable reference to a type with a …\nCast this pointer to a mutable reference.\nCast this box to a reference to a type with a …\nUnsafely cast this pointer to a specifc Rust type.\nThe content ID of the loaded asset.\nContent id of the asset, used to lookup asset from …\nClears the vector, removing all values.\nClears the vector, removing all values.\nThe function pointer that may be used to clone data with …\nClone this schema ref into a new box.\nCompare the major, minor, patch, and pre-release value of …\nCalculate the layout of the type represented by the schema.\nReturns <code>true</code> if the option is a <code>Set</code> value containing the …\nReturns true if the map contains a value for the specified …\nRead the core asset pack.\nThe directory to load the core asset pack.\nThe core asset pack, if it’s been loaded.\nThe metadata asset load context.\nThe loaded data of the asset.\nDebug format the value stored in the schema box.\nCreate a new <code>SchemaBox</code> for a type with a <code>Schema</code> that has a …\nThe game’s default asset pack.\nThe function pointer that may be used to write a default …\nThe <code>Cid</code>s of the assets this asset depends on.\nThe dependency list of this asset. This should be updated …\nThe content IDs of any assets needed by this asset as a …\nUse this <code>SchemaDeserialize</code> to deserialize data from the …\nThe function that may be used to deserialize the type.\nGet the number of assets that have had their data …\nThe function pointer that may be used to drop data with …\nList the names of the non-core asset pack folders that are …\nThe function pointer that may be used to compare two …\nGet the number of assets that have errored while loading.\nReturns the contained <code>Set</code> value, consuming the <code>self</code> value.\nExtends the vector with the contents of an iterator.\nGet the reference to a field.\nGet field with the given index.\nGet the reference to a field.\nGet field with the given index.\nAccess a field, if it exists.\nIf this is a struct, then the field offsets will contain …\nGet the field pointed to by the given path.\nGet the field pointed to by the given path.\nGet the field pointed to by the given path.\nGet the field pointed to by the given path.\nIterate over fields in the struct.\nInterate over the fields on the struct.\nThe fields in the struct, in the order they are defined.\nReturns <code>Unset</code> if the option is <code>Unset</code>, otherwise calls …\nReturns a reference to the first element of the vector, or …\nReturns a mutable reference to the first element of the …\nDeallocate the memory stored in the box, but don’t run …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate <code>NetworkHandle</code> from content id (<code>Cid</code>).\nCreate a new <code>SchemaRefMut</code> from a raw pointer and it’s …\nCreate a new <code>SchemaRef</code> from a raw pointer and it’s …\nCreate a new <code>SchemaBox</code> from raw parts.\nReturn the data for the type.\nThe full name of the type, including any module specifiers.\nGet the game version config, used when making sure asset …\nThe version of the game. This is used to evaluate whether …\nThe game <code>VersionReq</code> this asset pack is compatible with.\nThe required game version to be compatible with this asset …\nThe version of the game that the pack is not compatible …\nGet an item in the vec.\nGet a reference to an item in the map.\nUnsafely get the inner value.\nBorrow a loaded asset.\nGet an item from the vec.\nGet a value out of the map for the given key.\nBorrow a <code>LoadedAsset</code> associated to the given handle.\nBorrow a <code>LoadedAsset</code> associated to the given handle.\nGet handle of loaded asset from content id <code>Cid</code>.\nGet an item in the vec.\nGet a mutable reference to an item in the map.\nMutably borrow a loaded asset.\nGet an item from the vec.\nGet a value out of the map for the given key.\nInserts <code>v</code> into the option if it is <code>Unset</code>, then returns a …\nInserts a value computed from <code>f</code> into the option if it is …\nGet the item with the given index.\nGet an untyped reference to an item in the map.\nGet an item with the given index.\nGet an untyped reference to an item in the map.\nSafety\nSafety\nBorrow a loaded asset.\nGet untyped handle of loaded asset from content id <code>Cid</code>.\nBorrow a loaded asset.\nResponds to any asset changes reported by the <code>AssetIo</code> …\nRecursively checks whether or not the schema contains any …\nGet the hash of this <code>SchemaVec</code>.\nGet the hash of this schema box, if supported.\nGet the hash of this schema box.\nGet the hash of the <code>SVec</code>.\nGet the hash of this schema box, if supported.\nThe function pointer that may be used to hash the value.\nThe runtime ID of the asset.\nThe unique ID of the asset pack.\nThe ID of the asset pack.\nThe asset pack ID.\nThe unique ID of the asset pack.\nIncrement the number of assets that have been downloaded …\nIncrement the number of assets that have errored during …\nIncrement the number of assets that have been loaded by …\nIncrement the number of assets that need to be loaded by …\nLists the packs that have not been loaded due to an …\nGet the <code>StructSchemaInfo</code> for this struct.\nGet the enum schema info.\nGet the <code>StructSchemaInfo</code> for this struct.\nGet the enum schema info.\nThe asset server inner state.\nReturns the schema of the type pointed to by the handle, …\nInsert an entry into the map, returning the previous …\nInsert an item into the map.\nInsert an untyped item into the map.\nSafety\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert into an accessor for the inner data.\nBorrow the schema ref as a <code>SchemaBox</code> if it is one.\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nGet the reference to a field.\nAccess a field, if it exists.\nGet the field pointed to by the given path.\nConsume to create an iterator over fields in the struct.\nCreate asset <code>Handle</code> by looking up <code>NetworkHandle</code>’s <code>Cid</code> in …\nBorrow the schema ref as a <code>SchemaMap</code> if it is one.\nConvert into an <code>SBox</code> if the schema of T matches.\nConvert into a <code>SchemaBox</code>\nConvert into an untyped <code>SchemaMap</code>.\nBorrow this <code>SchemaRefMutAccess</code> as a <code>SchemaRefAccess</code>.\nConvert back to a <code>SchemaRefMut</code>\nConvert back to a <code>SchemaRefMut</code>\nConvert this to a <code>SchemaRefMut</code>.\nConvert back to a <code>SchemaRefMut</code>\nConvert to an untyped <code>SchemaVec</code>.\nConvert into a typed <code>SMap</code>.\nConvert into a typed <code>SVec</code>.\nConvert into <code>UntypedHandle</code>. Panics if <code>AssetServer</code> fails to …\nBorrow the schema ref as a <code>SchemaVec</code> if it is one.\nThe <code>AssetIo</code> implementation used to load assets.\nReturns <code>true</code> if the vector has zero items in it.\nReturns true if the map contains no elements.\nReturns <code>true</code> if there are no items in the vector.\nReturns <code>true</code> if the map is empty.\nGet whether or not all the assets are done loading.\nReturns <code>true</code> if the option is an <code>Unset</code> value.\nReturns <code>true</code> if the option is a <code>Set</code> value.\nReturns <code>true</code> if the option is a <code>Set</code> value.\nReturns <code>true</code> if the option is an <code>Unset</code> value.\nIterate over values in the vec\nIterate over entries in the map.\nIterate over references to the items in the vec.\nIterate over entries in the map.\nIterate mutably over values in the vec\nIterate over entries in the map.\nIterate over mutable references to the items in the vec.\nIterate over entries in the map.\nGet the schema for the map keys.\nIterate over keys in the map.\nIterate over keys in the map.\nThe kind of schema.\nReturns a reference to the last element of the vector, or …\nReturns a mutable reference to the last element of the …\nGet the memory layout of the enum tag.\nThe layout of the type.\nGet the number of items in the vector.\nReturns the number of elements in the map.\nGet the length of the vector.\nGet the number of entries in the map.\nGet an event listener that will be notified each time …\nLoad the asset from raw bytes.\nLoad the asset\nLoad another asset as a child of this asset.\nLoad an asset.\nLoad the bytes of the asset at the given path, but return …\nLike <code>load_asset()</code> but forces the asset to reload, even it …\nLoad all assets. This is usually done in an async task.\nLoad the core asset pack.\nGet the binary contents of an asset.\nLoad the asset pack with the given folder name, or else …\nThe asset load progress.\nGet the number of assets that have been downloaded and …\nThe location of the asset.\nThe location that the asset is being loaded from.\nThe pack and path the asset was loaded from.\nMaps a <code>Maybe&lt;T&gt;</code> to <code>Maybe&lt;U&gt;</code> by applying a function to a …\nMaps a <code>Maybe&lt;T&gt;</code> to <code>U</code> by applying a function to a contained …\nMaps a <code>Maybe&lt;T&gt;</code> to <code>U</code> by applying a function to a contained …\nHelper function to return type data for a metadata asset.\nThe display name of the asset pack.\nThe name of the schema.\nThe name of the field, if set.\nThe name of the field, if set.\nUser friendly pack name.\nThe short name of the type.\nThe name of the enum variant.\nThe name of the field. Will be <code>None</code> if this is a field of …\nGet a <code>NetworkHandle</code> that can be Serialized and replicated …\nInitialize an empty <code>SchemaVec</code> for items with the given …\nCreate a new <code>FileAssetIo</code>.\nCreate a new <code>WebAssetIo</code> with the given URL as the core …\nInitialize a new <code>DummyIo</code> from an iterator of …\nCreate <code>Version</code> with an empty pre-release and build …\nInitialize the <code>SMap</code>.\nCreate a new <code>SchemaRefMut</code> from a reference to a type that …\nCreate a new <code>SchemaRefAccess</code> for the given <code>SchemaRef</code>.\nCreate a new <code>SchemaBox</code> from an owned type.\nCreate a new <code>SBox</code>.\nCreate a new <code>Unsafe</code> contianing the <code>value</code>.\nInitialize a new <code>AssetServer</code>.\nCreate a new, empty <code>SVec</code>.\nCreate a new map, with the given key and value schemas.\nCreate a new <code>SchemaRef</code> from a reference to a type that …\nCreate a new <code>SchemaRefAccess</code> for the given <code>SchemaRef</code>.\nCreate a new <code>SchemaRefAccess</code> for the given <code>SchemaRef</code> that …\nCreate a new <code>SchemaRefAccess</code> for the given <code>SchemaRef</code> that …\nTransforms the <code>Maybe&lt;T&gt;</code> into a <code>Result&lt;T, E&gt;</code>, mapping <code>Set(v)</code>…\nTransforms the <code>Maybe&lt;T&gt;</code> into a <code>Result&lt;T, E&gt;</code>, mapping <code>Set(v)</code>…\nConvert this <code>Maybe</code> into an <code>Option</code>.\nReturns the option if it contains a value, otherwise …\nReturns the option if it contains a value, otherwise calls …\nThe ID of the pack, or <code>None</code> if it refers to the core pack.\nThe pack_dir of the pack that the asset is in.\nThe pack_dir of the pack that the asset is in.\nThe unique ID of the asset pack this asset is located in.\nThe directory of the pack that\nMaps the directory names of asset packs to their …\nThe metadata of the pack that could not be loaded.\nThe asset pack this was loaded from, or <code>None</code> if it is from …\nRead the loaded asset packs.\nExtra asset packs. The key is the the name of the asset …\nThe asset packs that have been loaded.\nThe directory to load the asset packs from.\nCreate <code>Version</code> by parsing from string representation.\nThe path to the asset in it’s pack.\nThe path to the asset in it’s pack.\nThe path to the asset, relative to the root of the asset …\nMaps the asset <code>AssetLoc</code> to it’s handle.\nPop an item off the vec.\nPop an item off of the vector.\nPop the last item off of the end of the vector.\nRemoves and returns the last element of the vector if the …\nThe prelude.\nThe pointer to load.\nPush an item to the vec.\nPush an item onto the vector.\nPush the item into the end of the vector.\nRaw version of the <code>eq()</code> function. Not meant for normal use.\nRaw version of the <code>hash()</code> function. Not meant for normal …\nConvert a borrowed <code>SchemaRefMut</code> to an owned <code>SchemaRefMut</code> …\nRegister a schema with the registry.\nRegister this schema with the global schema registry.\nRemove and return the element at position <code>index</code> within the …\nRemove an item from the map.\nRemove and return the element at position <code>index</code> within the …\nRemove an item.\nUntypededly remove an item.\nSafety\nReplaces the actual value in the option by the value given …\nRetains only the elements specified by the predicate.\nRetains only the elements specified by the predicate, …\nReverses the order of elements in the vector, in place.\nList of assets that depend on the given assets.\nThe runtime ID of the handle\nGet the core asset pack’s root asset.\nThe root asset for the asset pack.\nThe path to the root asset for the pack.\nThe path to the root asset for the pack.\nGet this type’s <code>Schema</code>.\nGet the schema of items in this <code>SchemaVec</code>.\nGet the <code>Schema</code> for the pointer.\nGet the struct’s schema.\nGet the enum’s schema.\nGet the <code>Schema</code> for the pointer.\nGet the <code>Schema</code> for the pointer.\nGet the struct’s schema.\nGet the enum’s schema.\nThe schema of the asset being loaded.\nThe schema of this variant.\nThe schema of the field.\nSchemas provided in the asset pack.\nThe registered schemas.\nThe paths to schema definitions to be loaded from this …\nThe paths to schema definitions to be loaded from this …\nThe asset server.\nSet the game version config, used when making sure asset …\nSet the <code>AssetIo</code> implementation.\nThe asset store.\nThe layout of the enum tag.\nTakes the value out of the option, leaving an <code>Unset</code> in its …\nGet the number of assets that must be loaded.\nClone data to an owned <code>AssetLoc</code>.\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nShortens the vector, keeping the first <code>len</code> elements and …\nShortens the vector, keeping the first <code>len</code> elements and …\nCast a reference of this type to a reference of another …\nCast this pointer to a reference to a type with a matching …\nCast this box to it’s inner type and return it.\nCast this pointer to a mutable reference to a type with a …\nCast a mutable reference of this type to a reference of …\nCast this pointer to a mutable reference to a type with a …\nCast this box to a mutable reference to a type with a …\nCast this box to a reference to a type with a …\nGet an item in the vec.\nBorrow a loaded asset.\nGet a value out of the map for the given key.\nTry to get handle of loaded asset from content id <code>Cid</code>.\nGet an item in the vec.\nGet a value out of the map for the given key.\nGet an untyped reference to an item in the map.\nGet an untyped reference to an item in the map.\nBorrow a loaded asset.\nTry to get untyped handle of loaded asset from content id …\nBorrow a loaded asset.\nGet the hash of this schema box, if supported.\nInsert an item into the map.\nInsert an untyped item into the map.\nConvert into an <code>SBox</code> if the schema of T matches.\nConvert into a typed <code>SMap</code>.\nTry to convert into a typed <code>SVec</code>.\nPop an item off the vec.\nPush an item to the vec.\nPush the item into the end of the vector.\nRemove an item.\nUntypededly remove an item.\nContainer for storing <code>Schema</code> type datas.\nThe Rust <code>TypeId</code> that this <code>Schema</code> was created from, if it …\nCreate a typed <code>Handle&lt;T&gt;</code> from this <code>UntypedHandle</code>.\nAllocates a <code>SchemaBox</code> for the given <code>Schema</code>, but <strong>doesn’t </strong>…\nConvert the handle to an <code>UntypedHandle</code>.\nGet the core asset pack’s root asset as a type-erased …\nReturns the contained <code>Set</code> value, consuming the <code>self</code> value.\nReturns the contained <code>Set</code> value or a provided default.\nReturns the contained <code>Set</code> value or a default.\nReturns the contained <code>Set</code> value or computes it from a …\nReturns the contained <code>Set</code> value, consuming the <code>self</code> value, …\nUpdate the CID by combining it’s current data with the …\nGet a reference to the enum’s currently selected value.\nGet a reference to the enum’s currently selected value.\nThe field’s value.\nThe field’s value.\nGet the schema for the map values.\nIterate over values in the map.\nIterate over values in the map.\nIterate over values in the map.\nIterate over values in the map.\nGet the currently-selected variant index.\nGet the currently-selected variant index.\nGet the <code>VariantInfo</code> for the current variant.\nGet the name of the currently selected variant.\nGet the name of the currently selected variant.\nGet the <code>StructSchemaInfo</code> for the current variant.\nInfo for the enum variants.\nThe version number of the asset pack.\nThe version of the asset pack.\nThe version of the asset pack.\nThe version of the asset pack.\nSubscribe to asset changes.\nTell the asset backend to watch for changes and trigger …\nFilesystem watcher if enabled.\nClone <code>other</code> and write it’s data to <code>self</code>. Panics if this …\nReturns <code>Set</code> if exactly one of <code>self</code>, <code>optb</code> is <code>Set</code>, otherwise …\nZips <code>self</code> with another <code>Maybe</code>.\nThe <code>extension</code> is the portion of the extension that comes …\nThe list of file extensions to load this asset from.\nThe loader implementation for the asset.\nThe alignment of the data.\nThe size of the data.\nThe align of the opaque type.\nThe schema ref.\nThe size of the opaque type.\nThe align of the opaque type.\nThe schema ref.\nThe size of the opaque type.\nThe schema of the key type.\nThe schema of the value type.\nLet <code>Path</code> and <code>PathBuf</code> have <code>absolutize</code> and …\nHelper type for storing asset extensions.\nAn identifier for an asset.\n<code>AssetIo</code> is a trait that is implemented for backends …\nA type data that indicates how to load a type as an asset.\nContext provided to custom asset loaders in the …\nThe progress that has been made loading the game assets.\nA custom assset loader.\nContains that path to an asset, and the pack_dir that it …\nA borrowed version of <code>AssetLoc</code>.\nAn asset pack contains assets that are loaded by the game.\nThe unique ID for an asset pack.\nA requirement specifier for an asset pack, made up of the …\nSpecifies an asset pack, and it’s exact version.\nStruct responsible for loading assets into it’s …\nThe inner state of the asset server.\nStores assets for later retrieval.\nA <code>bool</code>\nA boolean.\nA <code>bool</code>\nThe represents a <code>SchemaBox</code> with given type inside.\nType alias for …\nThe <code>AssetPackId</code> of the core pack.\nAn ID for an asset that has changed.\nA unique content ID.\nYAML format for the core asset pack’s <code>pack.yaml</code> file.\nAn asset with a custom asset loader.\nDummy <code>AssetIo</code> implementation used for debugging or as a …\nAccess an enum.\nType represents an enum, which in the C layout is called a …\nAccess an enum.\nHelper for accessing the inner data of a schema ref at …\nHelper for accessing the inner data of a schema ref at …\nSchema data for an enum.\nA type for an enum tag for <code>EnumSchemaInfo</code>.\nAn <code>f32</code>\n<code>f32</code>\nAn <code>f32</code>\nAn <code>f64</code>\n<code>f64</code>\nAn <code>f64</code>\nThe index of a field in a struct in a <code>Schema</code>.\nA wrapper type that implements […\n<code>AssetIo</code> implementation that loads from the filesystem.\nTrait implemented for types that can produce an instance …\nA typed handle to an asset.\nThe <code>Cid</code> of an asset that has changed.\nTrait implemented for types that have a <code>Schema</code>.\nDerive macro for the HasSchema trait.\nAn <code>i128</code>\n<code>i128</code>\nAn <code>i128</code>\nAn <code>i16</code>\n<code>i16</code>\nAn <code>i16</code>\nAn <code>i32</code>\n<code>i32</code>\nAn <code>i32</code>\nAn <code>i64</code>\n<code>i64</code>\nAn <code>i64</code>\nAn <code>i8</code>\n<code>i8</code>\nAn <code>i8</code>\nThe index of a field. Works for tuple fields and named …\nAn error returned when an asset pack does not support the …\nAn asset that has been loaded.\nStruct containing all the game’s loaded assets, …\nThe location of an asset that has changed.\nAccess a map.\nType represents a <code>SchemaMap</code>.\nAccess a map.\nAn equivalent to <code>Option&lt;T&gt;</code> that has a stable memory layout …\nContext provided while loading a metadata asset.\nThis is a metadata asset that can be loaded from JSON or …\nThe name of a field.\nAsset handle that may be replicated over network and …\nAn opaque type\nOpaque data that cannot described by a schema.\nAn opaque type\nYAML format for asset packs’ <code>pack.yaml</code> file.\nA type of primitive.\nAccess a struct.\nThe type represents a primitive value.\nAccess a struct.\nHelper for accessing the inner data of a schema ref at …\nHelper for accessing the inner data of a schema ref at …\nA typed version of <code>SchemaBox</code>.\nGlobal <code>SchemaRegistry</code> used to register <code>SchemaData</code>s and …\nTyped version of a <code>SchemaMap</code>.\nA typed version of a <code>SchemaVec</code>.\nType data for asset handles.\nA owning, type-erased <code>Box</code>-like container for types with a …\nSchema information describing the memory layout of a type.\nDerivable schema <code>type_data</code> for types that implement …\nA struct that implements <code>DeserializeSeed</code> and can be used …\nError returned when a field is not found in a schema.\nA unique identifier for a schema registered in the …\nA schema describes the data layout of a type, to enable …\nLayout information computed for <code>SchemaData</code>.\nUntyped schema-aware “HashMap”.\nAccess helper for a <code>SchemaMap</code>.\nMutable <code>SchemaMap</code> access helper.\nA custom asset loader implementation for a metadata asset.\nError type when attempting to cast between types with …\nA schema reference, containing the ID of the pack that …\nThe load context for a <code>SchemaRefMut</code>.\nAn untyped reference that knows the <code>Schema</code> of the pointee …\nHelper for accessing the inner data of a schema ref at …\nAn untyped mutable reference that knows the <code>Schema</code> of the …\nAccess a schema\nA schema registry that alloates <code>SchemaId</code>s for <code>SchemaData</code>s …\nA struct that implements <code>Serialize</code> and wraps around a …\nA type-erased <code>Vec</code>-like collection that for items with the …\nAccess helper for a <code>SchemaVec</code>.\nMutable <code>SchemaVec</code> access helper.\nThe value is set.\nA <code>String</code>\nA Rust <code>String</code>. Must be manipulated with Rust string …\nA <code>String</code>\nAccess a struct.\nThe type represents a struct.\nAccess a struct.\nA field in a <code>StructSchemaInfo</code>.\nHelper for accessing the inner data of a schema ref at …\nIterator for <code>StructRefAccess::fields()</code>.\nA field returned by <code>StructRefFieldIter</code>.\nHelper for accessing the inner data of a schema ref at …\nIterator for <code>StructRefAccess::fields()</code>.\nA field returned by <code>StructRefFieldIter</code>.\nSchema data for a struct.\nA <code>u128</code>\n<code>u128</code>\nA <code>u128</code>\nA <code>u16</code>\nA <code>u16</code>.\n<code>u16</code>\nA <code>u16</code>\nA <code>u32</code>\nA <code>u32</code>.\n<code>u32</code>\nA <code>u32</code>\nA <code>u64</code>\n<code>u64</code>\nA <code>u64</code>\nA <code>u8</code>\nA <code>u8</code>.\n<code>u8</code>\nA <code>u8</code>\nA wrapper struct that marks it unsafe to both create and …\nThe value is not set.\nAn untyped handle to an asset.\nInformation about an enum variant for <code>EnumSchemaInfo</code>.\nAccess a vec.\nType represents a <code>SchemaVec</code>, where each item in the vec …\nAccess a vec.\n<strong>SemVer version</strong> as defined by https://semver.org.\nAsset IO implementation that loads assets from a URL.\nGet an absolute path. This works even if the path does not …\nGet an absolute path. This works even if the path does not …\nGet an absolute path. This works even if the path does not …\nConverts a reference of <code>T</code> to a <code>SchemaRefMut</code>\nConverts a reference of <code>T</code> to a <code>SchemaRef</code>\nReceiver for asset changes, used to implement hot reloads.\nSender for asset changes, used by the <code>AssetIo</code> …\nContent addressed cache of raw bytes for asset data.\nMaps the handle of the asset to it’s content ID.\nHelper function to return type data for a custom asset …\nThe asset server.\nThe base URL to load assets from.\nMaps asset content IDs, to assets that have been loaded by …\nCast a reference of this type to a reference of another …\nCast a mutable reference of this type to a reference of …\nThe content ID of the loaded asset.\nContent id of the asset, used to lookup asset from …\nThe function pointer that may be used to clone data with …\nThe directory to load the core asset pack.\nThe core asset pack, if it’s been loaded.\nThe metadata asset load context.\nThe loaded data of the asset.\nThe game’s default asset pack.\nThe function pointer that may be used to write a default …\nThe <code>Cid</code>s of the assets this asset depends on.\nThe dependency list of this asset. This should be updated …\nThe content IDs of any assets needed by this asset as a …\nThe function that may be used to deserialize the type.\nThe function pointer that may be used to drop data with …\nList the names of the non-core asset pack folders that are …\nThe function pointer that may be used to compare two …\nIf this is a struct, then the field offsets will contain …\nThe fields in the struct, in the order they are defined.\nReturn the data for the type.\nThe full name of the type, including any module specifiers.\nThe version of the game. This is used to evaluate whether …\nThe game <code>VersionReq</code> this asset pack is compatible with.\nThe required game version to be compatible with this asset …\nThe version of the game that the pack is not compatible …\nThe function pointer that may be used to hash the value.\nThe runtime ID of the asset.\nThe unique ID of the asset pack.\nThe ID of the asset pack.\nThe asset pack ID.\nThe unique ID of the asset pack.\nLists the packs that have not been loaded due to an …\nThe asset server inner state.\nThe <code>AssetIo</code> implementation used to load assets.\nThe kind of schema.\nThe layout of the type.\nLoad the asset from raw bytes.\nGet the binary contents of an asset.\nThe asset load progress.\nThe location of the asset.\nThe location that the asset is being loaded from.\nThe pack and path the asset was loaded from.\nHelper function to return type data for a metadata asset.\nThe display name of the asset pack.\nThe name of the schema.\nThe name of the field, if set.\nThe name of the field, if set.\nUser friendly pack name.\nThe short name of the type.\nThe name of the enum variant.\nThe name of the field. Will be <code>None</code> if this is a field of …\nThe ID of the pack, or <code>None</code> if it refers to the core pack.\nThe pack_dir of the pack that the asset is in.\nThe pack_dir of the pack that the asset is in.\nThe unique ID of the asset pack this asset is located in.\nThe directory of the pack that\nMaps the directory names of asset packs to their …\nThe metadata of the pack that could not be loaded.\nThe asset pack this was loaded from, or <code>None</code> if it is from …\nExtra asset packs. The key is the the name of the asset …\nThe asset packs that have been loaded.\nThe directory to load the asset packs from.\nThe path to the asset in it’s pack.\nThe path to the asset in it’s pack.\nThe path to the asset, relative to the root of the asset …\nMaps the asset <code>AssetLoc</code> to it’s handle.\nThe pointer to load.\nRegister this schema with the global schema registry.\nList of assets that depend on the given assets.\nThe runtime ID of the handle\nThe root asset for the asset pack.\nThe path to the root asset for the pack.\nThe path to the root asset for the pack.\nGet this type’s <code>Schema</code>.\nThe schema of the asset being loaded.\nThe schema of this variant.\nThe schema of the field.\nSchemas provided in the asset pack.\nThe registered schemas.\nThe paths to schema definitions to be loaded from this …\nThe paths to schema definitions to be loaded from this …\nThe asset server.\nThe asset store.\nThe layout of the enum tag.\nCast a reference of this type to a reference of another …\nCast a mutable reference of this type to a reference of …\nContainer for storing <code>Schema</code> type datas.\nThe Rust <code>TypeId</code> that this <code>Schema</code> was created from, if it …\nThe field’s value.\nThe field’s value.\nInfo for the enum variants.\nThe version number of the asset pack.\nThe version of the asset pack.\nThe version of the asset pack.\nThe version of the asset pack.\nSubscribe to asset changes.\nFilesystem watcher if enabled.\nThe <code>extension</code> is the portion of the extension that comes …\nThe list of file extensions to load this asset from.\nThe loader implementation for the asset.\nThe alignment of the data.\nThe size of the data.\nThe align of the opaque type.\nThe schema ref.\nThe size of the opaque type.\nThe align of the opaque type.\nThe schema ref.\nThe size of the opaque type.\nThe schema of the key type.\nThe schema of the value type.\nIterator of a chain of source errors.\nProvides the <code>context</code> method for <code>Result</code>.\nContains the error value\nThe <code>Error</code> type, a wrapper around a dynamic error type.\nEquivalent to Ok::&lt;_, anyhow::Error&gt;(value).\nContains the success value\n<code>Result&lt;T, Error&gt;</code>\nConstruct an ad-hoc error from a string or existing non-…\nGet the backtrace for this Error.\nReturn early with an error.\nAn iterator of the chain of source errors contained by …\nWrap the error value with additional context.\nWrap the error value with additional context.\nAttempt to downcast the error object to a concrete type.\nDowncast this error object by mutable reference.\nDowncast this error object by reference.\nReturn early with an error if a condition is not satisfied.\nConstruct an ad-hoc error from a string or existing non-…\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nReturns true if <code>E</code> is the type held by this error object.\nCreate a new error object from a printable error message.\nCreate a new error object from any error type.\nThe lowest level cause of this error — this error’s …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nWrap the error value with additional context that is …\nError creating ID\nDerive macro for deriving <code>Deref</code> on structs with one field.\nDerive macro for deriving <code>DerefMut</code> on structs with one …\nDetermines the kind of PRNG. <code>TurboKind::FAST</code> RNGs are …\nThis trait provides the means to easily generate all …\nA <code>HashMap</code> implementing aHash, a high speed keyed hashing …\nA <code>HashSet</code> implementing aHash, a high speed keyed hashing …\nThe ID is in the wrong format.\nA <code>Ulid</code> with a human-readable ascii prefix.\nError creating a <code>LabeledId</code>.\nErrors that can happen while parsing a <code>LabeledId</code>.\nThe prefix was not ASCII.\nThe prefix was too long ( greater than 63 chars ).\nThe number of bits in a Ulid’s random portion\nA fast, non-cryptographic, thread-local random number …\nThe number of bits in a Ulid’s time portion\nExtension trait for automatically implementing all …\nA Ulid is a unique 128-bit lexicographically sortable …\nThe ULID could not be parsed.\nExtension trait for <code>Ulid</code>.\nGenerates a random <code>char</code> in ranges a-z and A-Z.\nGenerates a random <code>char</code> in ranges a-z, A-Z and 0-9.\nCreates a Crockford Base32 encoded string that represents …\nReturns a random boolean value.\nReturns a boolean value based on a rate. <code>rate</code> represents …\nGenerates a random <code>char</code> in the given range.\nConstructor that) is the same as <code>Ulid::new()</code>, but that …\nGets the datetime of when this Ulid was created accurate …\nAn ergonomic abbreviation for <code>Default::default()</code> to make …\nGenerate a random digit in the given <code>radix</code>.\nReturns a random <code>f32</code> value between <code>0.0</code> and <code>1.0</code>.\nReturns a random <code>f32</code> value between <code>-1.0</code> and <code>1.0</code>.\nReturns a random <code>f32</code> value between <code>0.0</code> and <code>1.0</code>.\nReturns a random <code>f32</code> value between <code>-1.0</code> and <code>1.0</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a Ulid using the provided bytes array.\nCreates a new Ulid with the given datetime\nCreates a new Ulid with the given datetime and random …\nCreate a Ulid from separated parts.\nCreates a Ulid from a Crockford Base32 encoded string\nReturns an array of constant <code>SIZE</code> containing random <code>u8</code> …\nReturns a random <code>i128</code> value.\nReturns a random <code>i16</code> value.\nReturns a random <code>i32</code> value.\nReturns a random <code>i64</code> value.\nReturns a random <code>i8</code> value.\nReturns a random <code>isize</code> value.\nReturns a random <code>u128</code> value.\nReturns a random <code>u16</code> value.\nReturns a random <code>u32</code> value.\nReturns a random <code>u64</code> value.\nReturns a random <code>u8</code> value.\nReturns a random <code>usize</code> value.\nShortens a type name to remove all module paths.\nReturns a random <code>i128</code> within a given range bound.\nReturns a random <code>i16</code> value.\nReturns a random <code>i32</code> value.\nReturns a random <code>i64</code> value.\nReturns a random <code>i8</code> value.\nIncrement the random number, make sure that the ts millis …\nReturns a <code>usize</code> value for stable indexing across different …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTest if the Ulid is nil\nReturns a random <code>isize</code> within a given range bound.\nGenerates a random <code>char</code> in the range a-z.\nCreate a new labeled ID with the given prefix.\nCreates a new Ulid with the current time (UTC)\nCreate a new labeled ID with the given prefix and ULID.\nThe ‘nil Ulid’.\nPartially shuffles a slice by a given amount and returns …\nGet the prefix of the ID.\nThe prelude.\nGets the random section of this ulid\nSamples a random item from a slice of values.\nSamples a random item from an iterator of values. <code>O(1)</code> if …\nSamples multiple unique items from a slice of values.\nSamples multiple unique items from an iterator of values.\nSamples multiple unique items from a mutable slice of …\nSamples a random <code>&amp;mut</code> item from a slice of values.\nShuffles a slice randomly in O(n) time.\nGets the timestamp section of this ulid\nReturns the bytes of the Ulid in big-endian order.\nCreates a Crockford Base32 encoded string that represents …\nCreates a Crockford Base32 encoded string that represents …\nReturns a random <code>u128</code> within a given range bound.\nReturns a random <code>u16</code> value.\nReturns a random <code>u32</code> value.\nReturns a random <code>u64</code> value.\nReturns a random <code>u8</code> value.\nGet the <code>Ulid</code> of the ID.\nGenerates a random <code>char</code> in the range A-Z.\nReturns a random <code>usize</code> within a given range bound.\nStochastic Acceptance implementation of Roulette Wheel …\nStochastic Acceptance implementation of Roulette Wheel …\nCreates a new Ulid using data from the given random number …\nError creating ID\nDerive macro for deriving <code>Deref</code> on structs with one field.\nDerive macro for deriving <code>DerefMut</code> on structs with one …\nDetermines the kind of PRNG. <code>TurboKind::FAST</code> RNGs are …\nThis trait provides the means to easily generate all …\nA <code>HashMap</code> implementing aHash, a high speed keyed hashing …\nA <code>HashSet</code> implementing aHash, a high speed keyed hashing …\nThe ID is in the wrong format.\nA <code>Ulid</code> with a human-readable ascii prefix.\nError creating a <code>LabeledId</code>.\nErrors that can happen while parsing a <code>LabeledId</code>.\nThe prefix was not ASCII.\nThe prefix was too long ( greater than 63 chars ).\nA fast, non-cryptographic, thread-local random number …\nExtension trait for automatically implementing all …\nA Ulid is a unique 128-bit lexicographically sortable …\nThe ULID could not be parsed.\nExtension trait for <code>Ulid</code>.\nGenerates a random <code>char</code> in ranges a-z and A-Z.\nGenerates a random <code>char</code> in ranges a-z, A-Z and 0-9.\nReturns a random boolean value.\nReturns a boolean value based on a rate. <code>rate</code> represents …\nGenerates a random <code>char</code> in the given range.\nConstructor that) is the same as <code>Ulid::new()</code>, but that …\nAn ergonomic abbreviation for <code>Default::default()</code> to make …\nGenerate a random digit in the given <code>radix</code>.\nReturns a random <code>f32</code> value between <code>0.0</code> and <code>1.0</code>.\nReturns a random <code>f32</code> value between <code>-1.0</code> and <code>1.0</code>.\nReturns a random <code>f32</code> value between <code>0.0</code> and <code>1.0</code>.\nReturns a random <code>f32</code> value between <code>-1.0</code> and <code>1.0</code>.\nReturns an array of constant <code>SIZE</code> containing random <code>u8</code> …\nReturns a random <code>i128</code> value.\nReturns a random <code>i16</code> value.\nReturns a random <code>i32</code> value.\nReturns a random <code>i64</code> value.\nReturns a random <code>i8</code> value.\nReturns a random <code>isize</code> value.\nReturns a random <code>u128</code> value.\nReturns a random <code>u16</code> value.\nReturns a random <code>u32</code> value.\nReturns a random <code>u64</code> value.\nReturns a random <code>u8</code> value.\nReturns a random <code>usize</code> value.\nShortens a type name to remove all module paths.\nReturns a random <code>i128</code> within a given range bound.\nReturns a random <code>i16</code> value.\nReturns a random <code>i32</code> value.\nReturns a random <code>i64</code> value.\nReturns a random <code>i8</code> value.\nReturns a <code>usize</code> value for stable indexing across different …\nReturns a random <code>isize</code> within a given range bound.\nGenerates a random <code>char</code> in the range a-z.\nPartially shuffles a slice by a given amount and returns …\nSamples a random item from a slice of values.\nSamples a random item from an iterator of values. <code>O(1)</code> if …\nSamples multiple unique items from a slice of values.\nSamples multiple unique items from an iterator of values.\nSamples multiple unique items from a mutable slice of …\nSamples a random <code>&amp;mut</code> item from a slice of values.\nShuffles a slice randomly in O(n) time.\nReturns a random <code>u128</code> within a given range bound.\nReturns a random <code>u16</code> value.\nReturns a random <code>u32</code> value.\nReturns a random <code>u64</code> value.\nReturns a random <code>u8</code> value.\nGenerates a random <code>char</code> in the range A-Z.\nReturns a random <code>usize</code> within a given range bound.\nStochastic Acceptance implementation of Roulette Wheel …\nStochastic Acceptance implementation of Roulette Wheel …\nDashMap is an implementation of a concurrent associative …\nDashSet is a thin wrapper around <code>DashMap</code> using <code>()</code> as the …\nImplementation detail that is exposed due to generic …\nA read-only view into a <code>DashMap</code>. Allows to obtain raw …\nSafety\nSafety\nSafety\nSafety\nSafety\nModify a specific value according to a function.\nModify every value in the map according to a function.\nReturns the number of elements the map can hold without …\nReturns how many keys the set can store without …\nReturns how many key-value pairs the map can store without …\nRemoves all keys in the set.\nRemoves all key-value pairs in the map.\nChecks if the set contains a specific key.\nReturns <code>true</code> if the map contains a value for the specified …\nChecks if the map contains a specific key.\nAdvanced entry API that tries to mimic …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a reference to the value corresponding to the key.\nGet a reference to an entry in the set\nGet an immutable reference to an entry in the map\nReturns the key-value pair corresponding to the supplied …\nGet a mutable reference to an entry in the map\nHash a given item to produce a usize. Uses the provided or …\nHash a given item to produce a usize. Uses the provided or …\nReturns a reference to the map’s <code>BuildHasher</code>.\nInserts a key into the set. Returns true if the key was …\nInserts a key and a value into the map. Returns the old …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes this <code>ReadOnlyView</code>, returning the underlying …\nWraps this <code>DashMap</code> into a read-only view. This view allows …\nReturns <code>true</code> if the map contains no elements.\nChecks if the set is empty or not.\nChecks if the map is empty or not.\nAn iterator visiting all key-value pairs in arbitrary …\nCreates an iterator over a DashMap yielding immutable …\nCreates an iterator over a DashMap yielding immutable …\nIterator over a DashMap yielding mutable references.\nAn iterator visiting all keys in arbitrary order. The …\nReturns the number of elements in the map.\nFetches the total number of keys stored in the set.\nFetches the total number of key-value pairs stored in the …\nCreates a new DashSet with a capacity of 0.\nCreates a new DashMap with a capacity of 0.\nRemoves an entry from the map, returning the key if it …\nRemoves an entry from the map, returning the key and value …\nRemoves an entry from the set, returning the key if the …\nRemoves an entry from the map, returning the key and value …\nRetain elements that whose predicates return true and …\nRetain elements that whose predicates return true and …\nRemove excess capacity to reduce memory usage.\nRemove excess capacity to reduce memory usage.\nAdvanced entry API that tries to mimic …\nGet an immutable reference to an entry in the map, if the …\nGet a mutable reference to an entry in the map, if the …\nAdvanced entry API that tries to mimic …\nAn iterator visiting all values in arbitrary order. The …\nScoped access into an item of the map according to a …\nCreates a new DashMap with a specified starting capacity.\nCreates a new DashMap with a specified starting capacity.\nCreates a new DashMap with a specified starting capacity …\nCreates a new DashMap with a specified starting capacity …\nCreates a new DashMap with a specified starting capacity, …\nCreates a new DashMap with a specified capacity and shard …\nCreates a new DashMap with a capacity of 0 and the …\nCreates a new DashMap with a capacity of 0 and the …\nCreates a new DashMap with a specified hasher and shard …\nCreates a new DashMap with a specified shard amount\nIterator over a DashMap yielding immutable references.\nIterator over a DashMap yielding mutable references.\nIterator over a DashMap yielding key value pairs.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nApply a function to the stored value if it exists.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSets the value of the entry, and returns a reference to …\nSets the value of the entry, and returns an OccupiedEntry.\nSets the value of the entry with the VacantEntry’s key, …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInto the key of the entry.\nGet the key of the entry.\nReturn a mutable reference to the element if it exists, …\nReturn a mutable reference to the element if it exists, …\nReturn a mutable reference to the element if it exists, …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe shard wasn’t locked, and the value wasn’t present …\nThe shard was locked.\nThe value was present in the map, and the lock for the …\nRepresents the result of a non-blocking read from a DashMap…\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if the shard wasn’t locked, and the value …\nReturns <code>true</code> if the shard was locked.\nReturns <code>true</code> if the value was present in the map, and the …\nIf <code>self</code> is Present, returns the reference to the value in …\nIf <code>self</code> is Present, returns the reference to the value in …\nHolds the handles and the volume to be played for a piece …\nName of the default bones audio session\nA piece of audio loaded into memory all at once.\nAudio Center resource and systems.\nAudio Manager resource and systems.\nReturns the duration of the audio.\nSets the tween used to fade in the sound from silence.\nReturns the nth <code>Frame</code> of audio in the <code>StaticSoundData</code>.\nThe raw samples that make up the audio.\nReturns the argument unchanged.\nReturns the argument unchanged.\nLoads a cursor wrapping audio file data into a …\nLoads an audio file into a <code>StaticSoundData</code>.\nLoads an audio file from a type that implements Symphonia…\nSets up audio-related resources and the default bones …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSets the portion of the sound that should be looped.\nReturns the number of frames in the <code>StaticSoundData</code>.\nSets the destination that this sound should be routed to.\nSets the panning of the sound, where 0 is hard left and 1 …\nSets the playback rate of the sound.\nSets whether the sound should be played in reverse.\nThe sample rate of the audio (in Hz).\nSettings for the sound.\nSets the portion of the audio this <code>StaticSoundData</code> …\nThe portion of the sound this <code>StaticSoundData</code> represents.\nSets where in the sound playback should start.\nSets when the sound should start playing.\nSets the volume of the sound.\nReturns a cheap clone of the <code>StaticSoundData</code> with the …\nA resource that can be used to control game audios.\nAn audio event that may be sent to the <code>AudioCenter</code> …\nPlay some music.\nPlay a sound.\nStop all currently playing sounds.\nStop the currently playing music.\nUpdate the volume of all audios using the new scale values.\nInternally used sytem for killing finished audios …\nInternally used sytem for processing audio events in the …\nReturns the volume scale for sound effects.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the main volume scale (which impacts all other …\nReturns the currently played music.\nReturns the duration for music fade out.\nGet the playback state of the current music.\nReturns the music volume scale.\nPlays music, forcibly stopping any current music. Volume …\nPlays music with advanced settings. Volume is scaled by …\nPlays music with custom StaticSoundSettings. Volume is …\nPlay a sound. These are usually short audios that indicate …\nPush an audio event to the queue for later processing.\nSets the volume scale for effects within the range of 0.0 …\nSets the volume scale for main audio within the range of …\nSets the duration for music fade out.\nSets the volume scale for music within the range of 0.0 to …\nSets the duration for audio fade out.\nSets the volume scales for main, music, and effects within …\nReturns the duration for audio fade out.\nStops all currently playing sounds.\nStops the currently playing music\nThe effects volume scale factor.\nWhether to fade out the sounds or stop them instantly.\nWhether to fade out the sounds or stop them instantly.\nWhether to force restart the music even if it’s the same …\nThe main volume scale factor.\nThe music volume scale factor.\nThe settings for the music.\nThe handle for the music.\nThe handle to the sound to play.\nThe volume to play the sound at.\nThe audio file asset loader.\nThe audio manager resource which can be used to play …\nThe audio source asset type, contains no data, but …\nThis is a working Cpal backend.\nKira audio backend that will fall back to a dummy backend …\nThis is a dummy backend since Cpal didn’t work.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTrack frame time state synced from bevy frame time …\nState of frame time diagnostic window. Stored in <code>EguiCtx</code> …\nRenders frame time diagnostic window in Egui if window is …\nIf installed, allows opening egui window with …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIs window open?\nReset min/max values to default\nThe connection has been accepted\nSend the message to all connected clients.\nRequest to create a new lobby\nAn error message\nA unique identifier for a game\nRequest to join an existing lobby for a specific gameid, …\nRequest a list of lobbies for a specific game\nA list of available lobbies\nConfirmation that a lobby has been created\nA unique identifier for a lobby\nInformation about a lobby\nConfirmation that a client has joined a lobby\nInformation about a lobby for the lobby list\nResponse that specifies updates about the current lobby …\nALPN used for the matchmaking protocol.\nInformation about a match that is being requested\nRequests that may be made in matchmaking mode\nResponses that may be returned in matchmaking mode\nResponse that specifies updates about the current …\nSend the message to the client with the specified index.\nThe players will be assigned an idx based on the order …\nALPN used for the direct connections between players.\nChoose how player_idx should be assigned to each player …\nThe players will randomly be assigned an idx\nThe format of a message forwarded by the proxy to a client.\nRequest to have the client join matchmaking queue\nThe format of a message sent by a client to the proxy, so …\nThe order specified in the Vec will be assigned to the …\nRequest to remove the client from the matchmaking queue\nThe desired client count has been reached, and the match …\nThe client to send a network message to.\nThe current number of players in the lobby\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe client that the message came from.\nThe unique identifier for the game\nThe unique identifier for the game\nThe unique identifier for the game this lobby belongs to\nWhether the lobby is password protected\nThe unique identifier of the lobby\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThis is an arbitrary set of bytes that must match exactly …\nThis is an arbitrary set of bytes that the lobby creator …\nThe maximum number of players to have in a match.\nThe maximum number of players allowed in the lobby\nThe maximum number of players allowed in the lobby\nThe message data.\nThe message data.\nThe name of the lobby\nThe name of the lobby\nThe hashed password for the lobby, if any\nEnables choosing how player_idx should be assigned to each …\nEnables choosing how player_idx should be assigned to each …\nThe client that the message should go to.\nThe number of connected clients in the match\nThe node ids of all players.\nThe client idx of the current client\nThe random seed that each client should use.\nThe address type which identifies the remote clients\nYou should advance the gamestate with the <code>inputs</code> provided …\nCompile time parameterization for sessions.\nThe input of this player for this frame is an actual …\nSent whenever GGRS locally detected a discrepancy between …\nDesync detection by comparing checksums between peers.\nThe player has disconnected at or prior to this frame, so …\nThe remote client has disconnected.\nA frame is a single step of execution.\nAn <code>Arc&lt;Mutex&gt;</code> that you can <code>save()</code>/<code>load()</code> a <code>T</code> to/from. …\nThis enum contains all error messages this library can …\nNotifications that you can receive from the session. …\nRequests that you can receive from the session. Handling …\nThe input type for a session. This is the only …\n<code>InputStatus</code> will always be given together with player …\nYou made an invalid request, usually by using wrong …\nYou should load the gamestate in the <code>cell</code> provided to you. …\nThis player plays on the local device.\nA messages that <code>NonBlockingSocket</code> sends and receives. When …\nIn a <code>SyncTestSession</code>, this error is returned if checksums …\nInternally, -1 represents no frame / invalid frame.\nThe session has not received packets from the remote …\nSent only after a <code>GgrsEvent::NetworkInterrupted</code> event, if …\nThe <code>NetworkStats</code> struct contains statistics about the …\nThis <code>NonBlockingSocket</code> trait is used when you want to use …\nThe Session is not synchronized yet. Please start the …\nDesync detection is turned off\nDesync detection is turned on with a specified interval …\nA <code>P2PSession</code> provides all functionality to connect to …\nEach player is identified by a player handle.\nDefines the three types of players that GGRS considers:\nThe input of this player for this frame is predicted.\nWhen the prediction threshold has been reached, we cannot …\nThis player plays on a remote device identified by the …\nWhen running, the session has synchronized and is ready to …\nYou should save the current gamestate in the <code>cell</code> provided …\nThe <code>SessionBuilder</code> builds all GGRS Sessions. After setting …\nA session is always in one of these states. You can query …\nThis player spectates on a remote device identified by the …\n<code>SpectatorSession</code> provides all functionality to connect to …\nThe spectator got so far behind the host that catching up …\nThe save state type for the session.\nDuring a <code>SyncTestSession</code>, GGRS will simulate a rollback …\nThe session is now synchronized with the remote client.\nWhen synchronizing, the session attempts to establish a …\nThe session made progress in synchronizing. After <code>total</code> …\nA simple non-blocking UDP socket tu use with GGRS …\nSent out if GGRS recommends skipping a few frames to let …\nRegisters local input for a player for the current frame. …\nRegisters local input for a player for the current frame. …\nMust be called for each player in the session (e.g. in a 3 …\nYou should call this to notify GGRS that you are ready to …\nYou should call this to notify GGRS that you are ready to …\nIn a sync test, this will advance the state by a single …\nBinds an UDP Socket to 0.0.0.0:port and set it to …\nReturns the check distance set on creation, i.e. the …\nReturns the highest confirmed frame. We have received all …\nReturns the current frame of a session.\nReturns the current <code>SessionState</code> of a session.\nReturns the current <code>SessionState</code> of a session.\nDisconnects a remote player and all other remote players …\nReturns all events that happened since last queried for …\nReturns all events that happened since last queried for …\nReturns the number of frames this session is estimated to …\nReturns the number of frames behind the host\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns all handles associated to a certain address\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe estimated bandwidth used between the two clients, in …\nLoads a <code>T</code> that the user previously saved into.\nThe number of frames GGRS calculates that the local client …\nReturns the handles of local players that have been added\nReturns the maximum prediction window of a session.\nReturns the maximum prediction window of a session.\nReturns a <code>NetworkStats</code> struct that gives information about …\nUsed to fetch some statistics about the quality of the …\nConstruct a new builder with all values set to their …\nCreates a new <code>NetworkStats</code> instance with default values.\nReturns the number of players added to this session\nReturns the number of players this session was constructed …\nReturns the number of players this session was constructed …\nReturn the number of spectators currently registered\nThe roundtrip packet transmission time as calculated by …\nShould be called periodically by your application to give …\nReceive UDP packages, distribute them to corresponding UDP …\nThis method should return all messages received since the …\nThe same as <code>local_frames_behind</code>, but calculated from the …\nReturns the handles of remote players that have been added\nSaves a <code>T</code> the user creates into the cell.\nThe length of the queue containing UDP packets which have …\nTakes a <code>Message</code> and sends it to the given address.\nReturns the handles of spectators that have been added\nConsumes the builder to construct a <code>P2PSession</code> and starts …\nConsumes the builder to create a new <code>SpectatorSession</code>. A …\nConsumes the builder to construct a new <code>SyncTestSession</code>. …\nSets the catchup speed. Per default, this is set to 1, so …\nChange the check distance. Default is 2.\nSets the desync detection mode. With desync detection, the …\nSets the time before the first notification will be sent …\nSets the disconnect timeout. The session will …\nSets the FPS this session is used with. This influences …\nChange the amount of frames GGRS will delay the inputs for …\nSets the maximum frames behind. If the spectator is more …\nChange the maximum prediction window. Default is 8.\nChange number of total players. Default is 2.\nSets the sparse saving mode. With sparse saving turned on, …\ninterval rate given by the user. e.g. at 60hz an interval …\nThe frame at which the mismatch occurred.\nFurther specifies why the request was invalid.\nThe frames with mismatched checksums (one or more)\nThe address of the endpoint.\nThe address of the endpoint.\nThe address of the endpoint.\nThe address of the endpoint.\nThe address of the endpoint.\nremote address of the endpoint.\nCurrent number of successful synchronization steps.\nThe client will be disconnected in this amount of ms.\nFrame of the checksums\nlocal checksum for the given frame\nremote checksum for the given frame\nAmount of frames recommended to be skipped in order to let …\nTotal number of required successful synchronization steps.\nUse <code>cell.save(...)</code> to save your state.\nUse <code>cell.load()</code> to load your state.\nThe given <code>frame</code> is a sanity check: The gamestate you save …\nThe given <code>frame</code> is a sanity check: The gamestate you load …\nContains inputs and input status for each player.\nThe unit axes.\nThe unit axes.\nThe unit axes.\nThe unit axes.\nThe unit axes.\nThe unit axes.\nThe unit axes.\nThe unit axes.\nThe unit axes.\nThe unit axes.\nThe unit axes.\nThe unit axes.\nThe unit axes.\nThe unit axes.\nThe unit axes.\nThe unit axes.\nThe unit axes.\nThe unit axes.\nThe unit axes.\nA 2D affine transform, which can represent translation, …\nA 3D affine transform, which can represent translation, …\nA 2-dimensional <code>bool</code> vector mask.\nA 3-dimensional <code>bool</code> vector mask.\nA 3-dimensional SIMD vector mask.\nA 4-dimensional <code>bool</code> vector mask.\nA 4-dimensional SIMD vector mask.\nA 2D affine transform, which can represent translation, …\nA 3D affine transform, which can represent translation, …\nA 2x2 column major matrix.\nA 3x3 column major matrix.\nA 4x4 column major matrix.\nA quaternion representing an orientation.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nEuler rotation sequences.\nAll false.\nAll false.\nAll false.\nAll false.\nAll false.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nThe identity transform.\nThe identity transform.\nA 3x3 identity matrix, where all diagonal elements are <code>1</code>, …\nA 2x2 identity matrix, where all diagonal elements are <code>1</code>, …\nA 3x3 identity matrix, where all diagonal elements are <code>1</code>, …\nA 4x4 identity matrix, where all diagonal elements are <code>1</code>, …\nThe identity quaternion. Corresponds to no rotation.\nThe identity transform.\nThe identity transform.\nA 2x2 identity matrix, where all diagonal elements are <code>1</code>, …\nA 3x3 identity matrix, where all diagonal elements are <code>1</code>, …\nA 4x4 identity matrix, where all diagonal elements are <code>1</code>, …\nThe identity quaternion. Corresponds to no rotation.\nAll <code>f32::INFINITY</code>.\nAll <code>f32::INFINITY</code>.\nAll <code>f32::INFINITY</code>.\nAll <code>f32::INFINITY</code>.\nAll <code>f64::INFINITY</code>.\nAll <code>f64::INFINITY</code>.\nAll <code>f64::INFINITY</code>.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nAll <code>f32::MAX</code>.\nAll <code>f32::MAX</code>.\nAll <code>f32::MAX</code>.\nAll <code>f32::MAX</code>.\nAll <code>f64::MAX</code>.\nAll <code>f64::MAX</code>.\nAll <code>f64::MAX</code>.\nAll <code>i32::MAX</code>.\nAll <code>i32::MAX</code>.\nAll <code>i32::MAX</code>.\nAll <code>u32::MAX</code>.\nAll <code>u32::MAX</code>.\nAll <code>u32::MAX</code>.\nAll <code>i64::MAX</code>.\nAll <code>i64::MAX</code>.\nAll <code>i64::MAX</code>.\nAll <code>u64::MAX</code>.\nAll <code>u64::MAX</code>.\nAll <code>u64::MAX</code>.\nAll <code>f32::MIN</code>.\nAll <code>f32::MIN</code>.\nAll <code>f32::MIN</code>.\nAll <code>f32::MIN</code>.\nAll <code>f64::MIN</code>.\nAll <code>f64::MIN</code>.\nAll <code>f64::MIN</code>.\nAll <code>i32::MIN</code>.\nAll <code>i32::MIN</code>.\nAll <code>i32::MIN</code>.\nAll <code>u32::MIN</code>.\nAll <code>u32::MIN</code>.\nAll <code>u32::MIN</code>.\nAll <code>i64::MIN</code>.\nAll <code>i64::MIN</code>.\nAll <code>i64::MIN</code>.\nAll <code>u64::MIN</code>.\nAll <code>u64::MIN</code>.\nAll <code>u64::MIN</code>.\nA 2x2 column major matrix.\nA 3x3 column major matrix.\nA 3x3 column major matrix.\nA 4x4 column major matrix.\nAll NAN:s.\nAll NAN:s.\nAll NAN:s.\nAll <code>f32::NAN</code>.\nAll <code>f32::NAN</code>.\nAll NAN:s.\nAll NAN:s.\nAll NAN:s.\nAll NANs.\nAll <code>f32::NAN</code>.\nAll <code>f32::NAN</code>.\nAll NAN:s.\nAll NAN:s.\nAll NAN:s.\nAll NAN:s.\nAll NAN:s.\nAll NANs.\nAll <code>f64::NAN</code>.\nAll <code>f64::NAN</code>.\nAll <code>f64::NAN</code>.\nAll <code>f32::NEG_INFINITY</code>.\nAll <code>f32::NEG_INFINITY</code>.\nAll <code>f32::NEG_INFINITY</code>.\nAll <code>f32::NEG_INFINITY</code>.\nAll <code>f64::NEG_INFINITY</code>.\nAll <code>f64::NEG_INFINITY</code>.\nAll <code>f64::NEG_INFINITY</code>.\nAll negative ones.\nAll negative ones.\nAll negative ones.\nAll negative ones.\nAll negative ones.\nAll negative ones.\nAll negative ones.\nAll negative ones.\nAll negative ones.\nAll negative ones.\nAll negative ones.\nAll negative ones.\nAll negative ones.\nA unit vector pointing along the negative W axis.\nA unit vector pointing along the negative W axis.\nA unit vector pointing along the negative W axis.\nA unit vector pointing along the negative W axis.\nA unit vector pointing along the negative X axis.\nA unit vector pointing along the negative X axis.\nA unit vector pointing along the negative X axis.\nA unit vector pointing along the negative X axis.\nA unit vector pointing along the negative X axis.\nA unit vector pointing along the negative X axis.\nA unit vector pointing along the negative X axis.\nA unit vector pointing along the negative X axis.\nA unit vector pointing along the negative X axis.\nA unit vector pointing along the negative X axis.\nA unit vector pointing along the negative X axis.\nA unit vector pointing along the negative X axis.\nA unit vector pointing along the negative X axis.\nA unit vector pointing along the negative Y axis.\nA unit vector pointing along the negative Y axis.\nA unit vector pointing along the negative Y axis.\nA unit vector pointing along the negative Y axis.\nA unit vector pointing along the negative Y axis.\nA unit vector pointing along the negative Y axis.\nA unit vector pointing along the negative Y axis.\nA unit vector pointing along the negative Y axis.\nA unit vector pointing along the negative Y axis.\nA unit vector pointing along the negative Y axis.\nA unit vector pointing along the negative Y axis.\nA unit vector pointing along the negative Y axis.\nA unit vector pointing along the negative Y axis.\nA unit vector pointing along the negative Z axis.\nA unit vector pointing along the negative Z axis.\nA unit vector pointing along the negative Z axis.\nA unit vector pointing along the negative Z axis.\nA unit vector pointing along the negative Z axis.\nA unit vector pointing along the negative Z axis.\nA unit vector pointing along the negative Z axis.\nA unit vector pointing along the negative Z axis.\nA unit vector pointing along the negative Z axis.\nAll ones.\nAll ones.\nAll ones.\nAll ones.\nAll ones.\nAll ones.\nAll ones.\nAll ones.\nAll ones.\nAll ones.\nAll ones.\nAll ones.\nAll ones.\nAll ones.\nAll ones.\nAll ones.\nAll ones.\nAll ones.\nAll ones.\nA quaternion representing an orientation.\nAll true.\nAll true.\nAll true.\nAll true.\nAll true.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nA unit vector pointing along the positive W axis.\nA unit vector pointing along the positive W axis.\nA unit vector pointing along the positive W axis.\nA unit vector pointing along the positive W axis.\nA unit vector pointing along the positive W axis.\nA unit vector pointing along the positive W axis.\nA unit vector pointing along the positive X axis.\nA unit vector pointing along the positive X axis.\nA unit vector pointing along the positive X axis.\nA unit vector pointing along the positive X axis.\nA unit vector pointing along the positive X axis.\nA unit vector pointing along the positive X axis.\nA unit vector pointing along the positive X axis.\nA unit vector pointing along the positive X axis.\nA unit vector pointing along the positive X axis.\nA unit vector pointing along the positive X axis.\nA unit vector pointing along the positive X axis.\nA unit vector pointing along the positive X axis.\nA unit vector pointing along the positive X axis.\nA unit vector pointing along the positive X axis.\nA unit vector pointing along the positive X axis.\nA unit vector pointing along the positive X axis.\nA unit vector pointing along the positive X axis.\nA unit vector pointing along the positive X axis.\nA unit vector pointing along the positive X axis.\nIntrinsic three-axis rotation XYZ\nIntrinsic three-axis rotation XZY\nA unit vector pointing along the positive Y axis.\nA unit vector pointing along the positive Y axis.\nA unit vector pointing along the positive Y axis.\nA unit vector pointing along the positive Y axis.\nA unit vector pointing along the positive Y axis.\nA unit vector pointing along the positive Y axis.\nA unit vector pointing along the positive Y axis.\nA unit vector pointing along the positive Y axis.\nA unit vector pointing along the positive Y axis.\nA unit vector pointing along the positive Y axis.\nA unit vector pointing along the positive Y axis.\nA unit vector pointing along the positive Y axis.\nA unit vector pointing along the positive Y axis.\nA unit vector pointing along the positive Y axis.\nA unit vector pointing along the positive Y axis.\nA unit vector pointing along the positive Y axis.\nA unit vector pointing along the positive Y axis.\nA unit vector pointing along the positive Y axis.\nA unit vector pointing along the positive Y axis.\nIntrinsic three-axis rotation YXZ\nIntrinsic three-axis rotation YZX\nA unit vector pointing along the positive Z axis.\nA unit vector pointing along the positive Z axis.\nA unit vector pointing along the positive Z axis.\nA unit vector pointing along the positive Z axis.\nA unit vector pointing along the positive Z axis.\nA unit vector pointing along the positive Z axis.\nA unit vector pointing along the positive Z axis.\nA unit vector pointing along the positive Z axis.\nA unit vector pointing along the positive Z axis.\nA unit vector pointing along the positive Z axis.\nA unit vector pointing along the positive Z axis.\nA unit vector pointing along the positive Z axis.\nA unit vector pointing along the positive Z axis.\nThe degenerate zero transform.\nThe degenerate zero transform.\nA 3x3 matrix with all elements set to <code>0.0</code>.\nAll zeroes.\nAll zeroes.\nA 2x2 matrix with all elements set to <code>0.0</code>.\nA 3x3 matrix with all elements set to <code>0.0</code>.\nA 4x4 matrix with all elements set to <code>0.0</code>.\nAll zeroes.\nAll zeroes.\nThe degenerate zero transform.\nThe degenerate zero transform.\nA 2x2 matrix with all elements set to <code>0.0</code>.\nA 3x3 matrix with all elements set to <code>0.0</code>.\nA 4x4 matrix with all elements set to <code>0.0</code>.\nAll zeroes.\nAll zeroes.\nAll zeroes.\nAll zeroes.\nAll zeroes.\nAll zeroes.\nAll zeroes.\nAll zeroes.\nAll zeroes.\nAll zeroes.\nAll zeroes.\nAll zeroes.\nAll zeroes.\nAll zeroes.\nAll zeroes.\nIntrinsic three-axis rotation ZXY\nIntrinsic three-axis rotation ZYX\nReturns a vector containing the absolute value of each …\nReturns a vector containing the absolute value of each …\nReturns a vector containing the absolute value of each …\nReturns a vector containing the absolute value of each …\nReturns a vector containing the absolute value of each …\nReturns a vector containing the absolute value of each …\nReturns a vector containing the absolute value of each …\nReturns a vector containing the absolute value of each …\nReturns a vector containing the absolute value of each …\nReturns a vector containing the absolute value of each …\nReturns a vector containing the absolute value of each …\nReturns a vector containing the absolute value of each …\nReturns a vector containing the absolute value of each …\nReturns true if the absolute difference of all elements …\nReturns true if the absolute difference of all elements …\nReturns true if the absolute difference of all elements …\nReturns true if the absolute difference of all elements …\nReturns true if the absolute difference of all elements …\nReturns true if the absolute difference of all elements …\nReturns true if the absolute difference of all elements …\nReturns true if the absolute difference of all elements …\nReturns true if the absolute difference of all elements …\nReturns true if the absolute difference of all elements …\nReturns true if the absolute difference of all elements …\nReturns true if the absolute difference of all elements …\nReturns true if the absolute difference of all elements …\nReturns true if the absolute difference of all elements …\nReturns true if the absolute difference of all elements …\nReturns true if the absolute difference of all elements …\nReturns true if the absolute difference of all elements …\nReturns true if the absolute difference of all elements …\nReturns true if the absolute difference of all elements …\nReturns true if the absolute difference of all elements …\nAdds two quaternions.\nAdds two quaternions.\nAdds two 2x2 matrices.\nAdds two 2x2 matrices.\nAdds two 3x3 matrices.\nAdds two 3x3 matrices.\nAdds two 3x3 matrices.\nAdds two 4x4 matrices.\nAdds two 4x4 matrices.\nReturns true if all the elements are true, false otherwise.\nReturns true if all the elements are true, false otherwise.\nReturns true if all the elements are true, false otherwise.\nReturns true if all the elements are true, false otherwise.\nReturns true if all the elements are true, false otherwise.\nReturns the angle (in radians) between <code>self</code> and <code>rhs</code> in the …\nReturns the angle (in radians) between two vectors.\nReturns the angle (in radians) for the minimal rotation …\nReturns the angle (in radians) between two vectors.\nReturns the angle (in radians) for the minimal rotation …\nReturns the angle (in radians) between <code>self</code> and <code>rhs</code> in the …\nReturns the angle (in radians) between two vectors.\nReturns true if any of the elements are true, false …\nReturns true if any of the elements are true, false …\nReturns true if any of the elements are true, false …\nReturns true if any of the elements are true, false …\nReturns true if any of the elements are true, false …\nReturns some vector that is orthogonal to the given one.\nReturns some vector that is orthogonal to the given one.\nReturns some vector that is orthogonal to the given one.\nGiven a unit vector return two other vectors that together …\nGiven a unit vector return two other vectors that together …\nGiven a unit vector return two other vectors that together …\nReturns any unit vector that is orthogonal to the given …\nReturns any unit vector that is orthogonal to the given …\nReturns any unit vector that is orthogonal to the given …\nCasts all elements of <code>self</code> to <code>f64</code>.\nCasts all elements of <code>self</code> to <code>f64</code>.\nCasts all elements of <code>self</code> to <code>f64</code>.\nCasts all elements of <code>self</code> to <code>f64</code>.\nCasts all elements of <code>self</code> to <code>f64</code>.\nCasts all elements of <code>self</code> to <code>f64</code>.\nCasts all elements of <code>self</code> to <code>f64</code>.\nCasts all elements of <code>self</code> to <code>f64</code>.\nCasts all elements of <code>self</code> to <code>f64</code>.\nCasts all elements of <code>self</code> to <code>f64</code>.\nCasts all elements of <code>self</code> to <code>f64</code>.\nCasts all elements of <code>self</code> to <code>f64</code>.\nCasts all elements of <code>self</code> to <code>f64</code>.\nCasts all elements of <code>self</code> to <code>f64</code>.\nCasts all elements of <code>self</code> to <code>f64</code>.\nCasts all elements of <code>self</code> to <code>f64</code>.\nCasts all elements of <code>self</code> to <code>i64</code>.\nCasts all elements of <code>self</code> to <code>i64</code>.\nCasts all elements of <code>self</code> to <code>i64</code>.\nCasts all elements of <code>self</code> to <code>i64</code>.\nCasts all elements of <code>self</code> to <code>i64</code>.\nCasts all elements of <code>self</code> to <code>i64</code>.\nCasts all elements of <code>self</code> to <code>i64</code>.\nCasts all elements of <code>self</code> to <code>i64</code>.\nCasts all elements of <code>self</code> to <code>i64</code>.\nCasts all elements of <code>self</code> to <code>i64</code>.\nCasts all elements of <code>self</code> to <code>i64</code>.\nCasts all elements of <code>self</code> to <code>i64</code>.\nCasts all elements of <code>self</code> to <code>i64</code>.\nCasts all elements of <code>self</code> to <code>i64</code>.\nCasts all elements of <code>self</code> to <code>i64</code>.\nCasts all elements of <code>self</code> to <code>i64</code>.\nCasts all elements of <code>self</code> to <code>i32</code>.\nCasts all elements of <code>self</code> to <code>i32</code>.\nCasts all elements of <code>self</code> to <code>i32</code>.\nCasts all elements of <code>self</code> to <code>i32</code>.\nCasts all elements of <code>self</code> to <code>i32</code>.\nCasts all elements of <code>self</code> to <code>i32</code>.\nCasts all elements of <code>self</code> to <code>i32</code>.\nCasts all elements of <code>self</code> to <code>i32</code>.\nCasts all elements of <code>self</code> to <code>i32</code>.\nCasts all elements of <code>self</code> to <code>i32</code>.\nCasts all elements of <code>self</code> to <code>i32</code>.\nCasts all elements of <code>self</code> to <code>i32</code>.\nCasts all elements of <code>self</code> to <code>i32</code>.\nCasts all elements of <code>self</code> to <code>i32</code>.\nCasts all elements of <code>self</code> to <code>i32</code>.\nCasts all elements of <code>self</code> to <code>i32</code>.\nCasts all elements of <code>self</code> to <code>u64</code>.\nCasts all elements of <code>self</code> to <code>u64</code>.\nCasts all elements of <code>self</code> to <code>u64</code>.\nCasts all elements of <code>self</code> to <code>u64</code>.\nCasts all elements of <code>self</code> to <code>u64</code>.\nCasts all elements of <code>self</code> to <code>u64</code>.\nCasts all elements of <code>self</code> to <code>u64</code>.\nCasts all elements of <code>self</code> to <code>u64</code>.\nCasts all elements of <code>self</code> to <code>u64</code>.\nCasts all elements of <code>self</code> to <code>u64</code>.\nCasts all elements of <code>self</code> to <code>u64</code>.\nCasts all elements of <code>self</code> to <code>u64</code>.\nCasts all elements of <code>self</code> to <code>u64</code>.\nCasts all elements of <code>self</code> to <code>u64</code>.\nCasts all elements of <code>self</code> to <code>u64</code>.\nCasts all elements of <code>self</code> to <code>u64</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nReturns a bitmask with the lowest 2 bits set from the …\nReturns a bitmask with the lowest 3 bits set from the …\nReturns a bitmask with the lowest 4 bits set from the …\nReturns a bitmask with the lowest 3 bits set from the …\nReturns a bitmask with the lowest 4 bits set from the …\n<code>bool</code> vector mask types.\nReturns a vector containing the smallest integer greater …\nReturns a vector containing the smallest integer greater …\nReturns a vector containing the smallest integer greater …\nReturns a vector containing the smallest integer greater …\nReturns a vector containing the smallest integer greater …\nReturns a vector containing the smallest integer greater …\nReturns a vector containing the smallest integer greater …\nComponent-wise clamping of values, similar to <code>f32::clamp</code>.\nComponent-wise clamping of values, similar to <code>f32::clamp</code>.\nComponent-wise clamping of values, similar to <code>f32::clamp</code>.\nComponent-wise clamping of values, similar to <code>f32::clamp</code>.\nComponent-wise clamping of values, similar to <code>f64::clamp</code>.\nComponent-wise clamping of values, similar to <code>f64::clamp</code>.\nComponent-wise clamping of values, similar to <code>f64::clamp</code>.\nComponent-wise clamping of values, similar to <code>i32::clamp</code>.\nComponent-wise clamping of values, similar to <code>i32::clamp</code>.\nComponent-wise clamping of values, similar to <code>i32::clamp</code>.\nComponent-wise clamping of values, similar to <code>u32::clamp</code>.\nComponent-wise clamping of values, similar to <code>u32::clamp</code>.\nComponent-wise clamping of values, similar to <code>u32::clamp</code>.\nComponent-wise clamping of values, similar to <code>i64::clamp</code>.\nComponent-wise clamping of values, similar to <code>i64::clamp</code>.\nComponent-wise clamping of values, similar to <code>i64::clamp</code>.\nComponent-wise clamping of values, similar to <code>u64::clamp</code>.\nComponent-wise clamping of values, similar to <code>u64::clamp</code>.\nComponent-wise clamping of values, similar to <code>u64::clamp</code>.\nReturns a vector with a length no less than <code>min</code> and no …\nReturns a vector with a length no less than <code>min</code> and no …\nReturns a vector with a length no less than <code>min</code> and no …\nReturns a vector with a length no less than <code>min</code> and no …\nReturns a vector with a length no less than <code>min</code> and no …\nReturns a vector with a length no less than <code>min</code> and no …\nReturns a vector with a length no less than <code>min</code> and no …\nReturns a vector with a length no more than <code>max</code>\nReturns a vector with a length no more than <code>max</code>\nReturns a vector with a length no more than <code>max</code>\nReturns a vector with a length no more than <code>max</code>\nReturns a vector with a length no more than <code>max</code>\nReturns a vector with a length no more than <code>max</code>\nReturns a vector with a length no more than <code>max</code>\nReturns a vector with a length no less than <code>min</code>\nReturns a vector with a length no less than <code>min</code>\nReturns a vector with a length no less than <code>min</code>\nReturns a vector with a length no less than <code>min</code>\nReturns a vector with a length no less than <code>min</code>\nReturns a vector with a length no less than <code>min</code>\nReturns a vector with a length no less than <code>min</code>\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns the matrix column for the given <code>index</code>.\nReturns the matrix column for the given <code>index</code>.\nReturns the matrix column for the given <code>index</code>.\nReturns the matrix column for the given <code>index</code>.\nReturns the matrix column for the given <code>index</code>.\nReturns the matrix column for the given <code>index</code>.\nReturns the matrix column for the given <code>index</code>.\nReturns a mutable reference to the matrix column for the …\nReturns a mutable reference to the matrix column for the …\nReturns a mutable reference to the matrix column for the …\nReturns a mutable reference to the matrix column for the …\nReturns a mutable reference to the matrix column for the …\nReturns a mutable reference to the matrix column for the …\nReturns a mutable reference to the matrix column for the …\nReturns the quaternion conjugate of <code>self</code>. For a unit …\nReturns the quaternion conjugate of <code>self</code>. For a unit …\nReturns a vector with signs of <code>rhs</code> and the magnitudes of …\nReturns a vector with signs of <code>rhs</code> and the magnitudes of …\nReturns a vector with signs of <code>rhs</code> and the magnitudes of …\nReturns a vector with signs of <code>rhs</code> and the magnitudes of …\nReturns a vector with signs of <code>rhs</code> and the magnitudes of …\nReturns a vector with signs of <code>rhs</code> and the magnitudes of …\nReturns a vector with signs of <code>rhs</code> and the magnitudes of …\nComputes the cross product of <code>self</code> and <code>rhs</code>.\nComputes the cross product of <code>self</code> and <code>rhs</code>.\nComputes the cross product of <code>self</code> and <code>rhs</code>.\nComputes the cross product of <code>self</code> and <code>rhs</code>.\nComputes the cross product of <code>self</code> and <code>rhs</code>.\nComputes the cross product of <code>self</code> and <code>rhs</code>.\nComputes the cross product of <code>self</code> and <code>rhs</code>.\nDefault <code>YXZ</code> as yaw (y-axis), pitch (x-axis), roll (z-axis).\nReturns the determinant of <code>self</code>.\nReturns the determinant of <code>self</code>.\nReturns the determinant of <code>self</code>.\nReturns the determinant of <code>self</code>.\nReturns the determinant of <code>self</code>.\nReturns the determinant of <code>self</code>.\nReturns the determinant of <code>self</code>.\nComputes the Euclidean distance between two points in …\nComputes the Euclidean distance between two points in …\nComputes the Euclidean distance between two points in …\nComputes the Euclidean distance between two points in …\nComputes the Euclidean distance between two points in …\nComputes the Euclidean distance between two points in …\nComputes the Euclidean distance between two points in …\nCompute the squared euclidean distance between two points …\nCompute the squared euclidean distance between two points …\nCompute the squared euclidean distance between two points …\nCompute the squared euclidean distance between two points …\nCompute the squared euclidean distance between two points …\nCompute the squared euclidean distance between two points …\nCompute the squared euclidean distance between two points …\nCompute the squared euclidean distance between two points …\nCompute the squared euclidean distance between two points …\nCompute the squared euclidean distance between two points …\nCompute the squared euclidean distance between two points …\nCompute the squared euclidean distance between two points …\nCompute the squared euclidean distance between two points …\nDivides a quaternion by a scalar value. The quotient is …\nDivides a quaternion by a scalar value. The quotient is …\nReturns the element-wise quotient of [Euclidean division] …\nReturns the element-wise quotient of [Euclidean division] …\nReturns the element-wise quotient of [Euclidean division] …\nReturns the element-wise quotient of [Euclidean division] …\nReturns the element-wise quotient of [Euclidean division] …\nReturns the element-wise quotient of [Euclidean division] …\nReturns the element-wise quotient of [Euclidean division] …\nReturns the element-wise quotient of [Euclidean division] …\nReturns the element-wise quotient of [Euclidean division] …\nReturns the element-wise quotient of [Euclidean division] …\nReturns the element-wise quotient of [Euclidean division] …\nReturns the element-wise quotient of [Euclidean division] …\nReturns the element-wise quotient of [Euclidean division] …\nCreates a 2x2 matrix from two column vectors.\nCreates a 3x3 matrix from three column vectors.\nCreates a 4x4 matrix from four column vectors.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>. The dot product …\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>. The dot product …\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nCreates a quaternion from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nReturns a vector containing <code>e^self</code> (the exponential …\nReturns a vector containing <code>e^self</code> (the exponential …\nReturns a vector containing <code>e^self</code> (the exponential …\nReturns a vector containing <code>e^self</code> (the exponential …\nReturns a vector containing <code>e^self</code> (the exponential …\nReturns a vector containing <code>e^self</code> (the exponential …\nReturns a vector containing <code>e^self</code> (the exponential …\nCreates a 3D vector from <code>self</code> and the given <code>z</code> value.\nCreates a 4D vector from <code>self</code> and the given <code>w</code> value.\nCreates a 4D vector from <code>self</code> and the given <code>w</code> value.\nCreates a 3D vector from <code>self</code> and the given <code>z</code> value.\nCreates a 4D vector from <code>self</code> and the given <code>w</code> value.\nCreates a 3D vector from <code>self</code> and the given <code>z</code> value.\nCreates a 4D vector from <code>self</code> and the given <code>w</code> value.\nCreates a 3D vector from <code>self</code> and the given <code>z</code> value.\nCreates a 4D vector from <code>self</code> and the given <code>w</code> value.\nCreates a 3D vector from <code>self</code> and the given <code>z</code> value.\nCreates a 4D vector from <code>self</code> and the given <code>w</code> value.\nCreates a 3D vector from <code>self</code> and the given <code>z</code> value.\nCreates a 4D vector from <code>self</code> and the given <code>w</code> value.\n<code>f32</code> vector, quaternion and matrix types.\n<code>f64</code> vector, quaternion and matrix types.\nReturns a vector containing the largest integer less than …\nReturns a vector containing the largest integer less than …\nReturns a vector containing the largest integer less than …\nReturns a vector containing the largest integer less than …\nReturns a vector containing the largest integer less than …\nReturns a vector containing the largest integer less than …\nReturns a vector containing the largest integer less than …\nReturns a vector containing the fractional part of the …\nReturns a vector containing the fractional part of the …\nReturns a vector containing the fractional part of the …\nReturns a vector containing the fractional part of the …\nReturns a vector containing the fractional part of the …\nReturns a vector containing the fractional part of the …\nReturns a vector containing the fractional part of the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a <code>Vec3A</code> from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code> …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a quaternion from a 3x3 rotation matrix inside a …\nCreates a quaternion from a 3x3 rotation matrix inside a …\nCreates an affine transform from the given rotation <code>angle</code>.\nCreates an affine transformation matrix from the given 2D …\nCreates a 2D vector containing <code>[angle.cos(), angle.sin()]</code>. …\nCreates a 2x2 matrix containing a rotation of <code>angle</code> (in …\nCreates an affine transformation matrix from the given 2D …\nCreates an affine transform from the given rotation <code>angle</code>.\nCreates a 2x2 matrix containing a rotation of <code>angle</code> (in …\nCreates an affine transformation matrix from the given 2D …\nCreates a 2D vector containing <code>[angle.cos(), angle.sin()]</code>. …\nCreates an affine transform from the given 2D rotation …\nCreates an affine transform from the given 2D rotation …\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a rotation quaternion from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a rotation quaternion from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates an affine transform containing a 3D rotation …\nCreates a 3D rotation matrix from a normalized rotation …\nCreates a 3D rotation matrix from a normalized rotation …\nCreates an affine transformation matrix containing a 3D …\nCreate a quaternion for a normalized rotation <code>axis</code> and …\nCreates an affine transform containing a 3D rotation …\nCreates a 3D rotation matrix from a normalized rotation …\nCreates an affine transformation matrix containing a 3D …\nCreate a quaternion for a normalized rotation <code>axis</code> and …\nCreates an affine transform from three column vectors.\nCreates an affine transform from three column vectors.\nCreates a 3x3 matrix from three column vectors.\nCreates a 2x2 matrix from two column vectors.\nCreates a 3x3 matrix from three column vectors.\nCreates a 4x4 matrix from four column vectors.\nCreates an affine transform from three column vectors.\nCreates an affine transform from three column vectors.\nCreates a 2x2 matrix from two column vectors.\nCreates a 3x3 matrix from three column vectors.\nCreates a 4x4 matrix from four column vectors.\nCreates an affine transform from a <code>[f32; 6]</code> array stored …\nCreates an affine transform from a <code>[f32; 12]</code> array stored …\nCreates a 3x3 matrix from a <code>[f32; 9]</code> array stored in …\nCreates a 2x2 matrix from a <code>[f32; 4]</code> array stored in …\nCreates a 3x3 matrix from a <code>[f32; 9]</code> array stored in …\nCreates a 4x4 matrix from a <code>[f32; 16]</code> array stored in …\nCreates an affine transform from a <code>[f64; 6]</code> array stored …\nCreates an affine transform from a <code>[f64; 12]</code> array stored …\nCreates a 2x2 matrix from a <code>[f64; 4]</code> array stored in …\nCreates a 3x3 matrix from a <code>[f64; 9]</code> array stored in …\nCreates a 4x4 matrix from a <code>[f64; 16]</code> array stored in …\nCreates an affine transform from a <code>[[f32; 2]; 3]</code> 2D array …\nCreates an affine transform from a <code>[[f32; 3]; 4]</code> 3D array …\nCreates a 3x3 matrix from a <code>[[f32; 3]; 3]</code> 3D array stored …\nCreates a 2x2 matrix from a <code>[[f32; 2]; 2]</code> 2D array stored …\nCreates a 3x3 matrix from a <code>[[f32; 3]; 3]</code> 3D array stored …\nCreates a 4x4 matrix from a <code>[[f32; 4]; 4]</code> 4D array stored …\nCreates an affine transform from a <code>[[f64; 2]; 3]</code> 2D array …\nCreates an affine transform from a <code>[[f64; 3]; 4]</code> 3D array …\nCreates a 2x2 matrix from a <code>[[f64; 2]; 2]</code> 2D array stored …\nCreates a 3x3 matrix from a <code>[[f64; 3]; 3]</code> 3D array stored …\nCreates a 4x4 matrix from a <code>[[f64; 4]; 4]</code> 4D array stored …\nCreates an affine transform from the first 6 values in …\nCreates an affine transform from the first 12 values in …\nCreates a 3x3 matrix from the first 9 values in <code>slice</code>.\nCreates a 2x2 matrix from the first 4 values in <code>slice</code>.\nCreates a 3x3 matrix from the first 9 values in <code>slice</code>.\nCreates a 4x4 matrix from the first 16 values in <code>slice</code>.\nCreates an affine transform from the first 6 values in …\nCreates an affine transform from the first 12 values in …\nCreates a 2x2 matrix from the first 4 values in <code>slice</code>.\nCreates a 3x3 matrix from the first 9 values in <code>slice</code>.\nCreates a 4x4 matrix from the first 16 values in <code>slice</code>.\nCreates a 3x3 matrix with its diagonal set to <code>diagonal</code> and …\nCreates a 2x2 matrix with its diagonal set to <code>diagonal</code> and …\nCreates a 3x3 matrix with its diagonal set to <code>diagonal</code> and …\nCreates a 4x4 matrix with its diagonal set to <code>diagonal</code> and …\nCreates a 2x2 matrix with its diagonal set to <code>diagonal</code> and …\nCreates a 3x3 matrix with its diagonal set to <code>diagonal</code> and …\nCreates a 4x4 matrix with its diagonal set to <code>diagonal</code> and …\nCreates a 3D rotation matrix from the given euler rotation …\nCreates a 3D rotation matrix from the given euler rotation …\nCreates a affine transformation matrix containing a …\nCreates a quaternion from the given Euler rotation …\nCreates a 3D rotation matrix from the given euler rotation …\nCreates a affine transformation matrix containing a …\nCreates a quaternion from the given Euler rotation …\nCreates an affine transform from a 2x2 matrix (expressing …\nCreates an affine transformation matrix from the given 2x2 …\nCreates an affine transformation matrix from the given 2x2 …\nCreates an affine transform from a 2x2 matrix (expressing …\nCreates an affine transformation matrix from the given 2x2 …\nCreates an affine transform from a 2x2 matrix (expressing …\nCreates an affine transform from a 2x2 matrix (expressing …\nThe given <code>Mat3</code> must be an affine transform,\nCreates an affine transform from a 3x3 matrix (expressing …\nCreates a 2x2 matrix from a 3x3 matrix, discarding the 2nd …\nCreates an affine transformation matrix from the given 3x3 …\nCreates a quaternion from a 3x3 rotation matrix.\nThe given <code>DMat3</code> must be an affine transform,\nCreates an affine transform from a 3x3 matrix (expressing …\nCreates a 2x2 matrix from a 3x3 matrix, discarding the 2nd …\nCreates an affine transformation matrix from the given 3x3 …\nCreates a quaternion from a 3x3 rotation matrix.\nCreates an affine transform from a 3x3 matrix (expressing …\nCreates an affine transform from a 3x3 matrix (expressing …\nThe given <code>Mat3A</code> must be an affine transform,\nCreates a 2x2 matrix from a 3x3 matrix, discarding the 2nd …\nCreates an affine transformation matrix from the given 3x3 …\nCreates a quaternion from a 3x3 SIMD aligned rotation …\nThe given <code>Mat4</code> must be an affine transform, i.e. contain …\nCreates a 3x3 matrix from a 4x4 matrix, discarding the 4th …\nCreates a 3x3 matrix from a 4x4 matrix, discarding the 4th …\nCreates a quaternion from a 3x3 rotation matrix inside a …\nThe given <code>DMat4</code> must be an affine transform, i.e. contain …\nCreates a 3x3 matrix from a 4x4 matrix, discarding the 4th …\nCreates a quaternion from a 3x3 rotation matrix inside a …\nCreates an affine transform from the given <code>rotation</code> …\nCreates a 3D rotation matrix from the given quaternion.\nCreates a 3D rotation matrix from the given quaternion.\nCreates an affine transformation matrix from the given …\nCreates an affine transform from the given <code>rotation</code> …\nCreates a 3D rotation matrix from the given quaternion.\nCreates an affine transformation matrix from the given …\nGets the minimal rotation for transforming <code>from</code> to <code>to</code>.  …\nGets the minimal rotation for transforming <code>from</code> to <code>to</code>.  …\nGets the minimal rotation for transforming <code>from</code> to <code>to</code>.  …\nGets the minimal rotation for transforming <code>from</code> to <code>to</code>.  …\nGets the minimal rotation for transforming <code>from</code> to either …\nGets the minimal rotation for transforming <code>from</code> to either …\nCreates an affine transform from the given 3D <code>rotation</code> and …\nCreates an affine transformation matrix from the given 3D …")